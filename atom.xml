<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><title type="text">Ray's Blog</title><subtitle type="html">夜晚再黑，也压不过雪的白。Ray,Code,Python,Git,爬虫,Hugo,MemE</subtitle><updated>2020-04-11T16:12:00+08:00</updated><id>https://raycoder.me/</id><link rel="alternate" type="text/html" href="https://raycoder.me/"/><link rel="self" type="application/atom+xml" href="https://raycoder.me/atom.xml"/><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><generator uri="https://gohugo.io/" version="0.68.3">Hugo</generator><entry><title type="text">Travis CI自动部署Hugo博客</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/travis-ci-automatically-deploys-hugo-blog/"/><id>https://raycoder.me/p/travis-ci-automatically-deploys-hugo-blog/</id><updated>2020-04-10T20:00:02+08:00</updated><published>2020-04-09T13:16:30+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Travis CI自动部署Hugo博客至GitHub</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！本文首发于个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
</blockquote>
<p>近日发现GitHub Pages国内访问速度变快，准备换回去。奈何我又想保留GitHub上的源码，Hugo又没有<code>hexo d</code>这样的一键部署操作，只能使用Travis CI（<code>Continuous Integration</code>，持续集成）来实现。</p>
<hr>
<h3 id="什么是ci">什么是CI？</h3>
<p>CI，<code>Continuous Integration</code>，持续集成。CI就像是一个监视器，在你赋予它权限后，它就会一直盯着你仓库的动态。当你的仓库触发指定操作时，它就把相应的指令执行完。</p>
<hr>
<h3 id="部署hugo">部署Hugo</h3>
<p>（请先在你的仓库创建一个新分支，如<code>hugo</code>，再设置其为主分支）</p>
<p>我们得先获取一个<a href="https://github.com/settings/tokens"><code>Personal access token</code></a>，用于给Travis CI访问仓库的权限。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200409132636.png" alt=""></p>
<p>点击之后，只需要勾选<code>repo:status</code>、<code> repo_deployment</code>和<code>public_repo</code>三项即可，这样即使令牌被盗，也可以最大的减少损失。Note处是可选的，不需要填写，只是起分辨作用。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200409133232.png" alt=""></p>
<p>生成完之后一定要保存令牌，这个令牌只会出现一次。</p>
<p>随后让我们打开<a href="https://travis-ci.com">Travis CI官网</a>，使用GitHub登录。</p>
<p>选择你的博客仓库。</p>
<p>点击<code>Settings</code>，在<code>Environment Variables</code>中添加刚刚的令牌，<code>NAME</code>为<code>ACCESS_TOKEN</code>，<code>VALUE</code>为你的令牌。<code>Branch</code>选<code>All branches</code>。</p>
<hr>
<h3 id="travis钩子">Travis钩子</h3>
<p>Travis 有不同的阶段,他提供了7个钩子。</p>
<ul>
<li>before_install：install 阶段之前执行</li>
<li>before_script：script 阶段之前执行</li>
<li>after_failure：script 阶段失败时执行</li>
<li>after_success：script 阶段成功时执行</li>
<li>before_deploy：deploy 步骤之前执行</li>
<li>after_deploy：deploy 步骤之后执行</li>
<li>after_script：script 阶段之后执行</li>
</ul>
<h3 id="生命周期">生命周期</h3>
<ol>
<li>before_install</li>
<li>install</li>
<li>before_script</li>
<li>script</li>
<li>aftersuccess or afterfailure</li>
<li>[OPTIONAL] before_deploy</li>
<li>[OPTIONAL] deploy</li>
<li>[OPTIONAL] after_deploy</li>
<li>after_script</li>
</ol>
<p>在博客根目录下新建<code>.travis.yml</code>，内容如下。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-yaml" data-lang="yaml"><span class="k">language</span><span class="p">:</span><span class="w"> </span>node_js<span class="w"> </span><span class="c">#语言是NodeJS</span><span class="w">
</span><span class="w"></span><span class="k">node_js</span><span class="p">:</span><span class="w"> </span><span class="m">13.12.0</span><span class="w"> </span><span class="c">#Node版本，我是用了一些npm模块</span><span class="w">
</span><span class="w"></span><span class="k">install</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- wget<span class="w"> </span>https<span class="p">:</span>//github.com/gohugoio/hugo/releases/download/v0<span class="m">.68.3</span>/hugo_extended_0<span class="m">.68</span>.3_Linux-64bit.deb<span class="w"> </span><span class="c">#wgetHugo的安装包，可以修改</span><span class="w">
</span><span class="w">    </span>- sudo<span class="w"> </span>dpkg<span class="w"> </span>-i<span class="w"> </span>hugo<span class="cp">*.deb</span><span class="w">
</span><span class="w">    </span>- hugo<span class="w"> </span>version<span class="w">
</span><span class="w">    </span>- rm<span class="w"> </span>-rf<span class="w"> </span>public<span class="w">
</span><span class="w">    </span>- npm<span class="w"> </span>install<span class="w"> </span><span class="c">#安装依赖，要package.json，没需求的可以省略</span><span class="w">
</span><span class="w">    
</span><span class="w"></span><span class="k">script</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- npm<span class="w"> </span>run<span class="w"> </span>build<span class="w"> </span><span class="c">#我这里在package.json配置了一系列生成操作，可以自己替换</span><span class="w">
</span><span class="w">
</span><span class="w"></span><span class="k">after_success</span><span class="p">:</span><span class="w">
</span><span class="w">    </span>- git<span class="w"> </span>config<span class="w"> </span>--global<span class="w"> </span>user.name<span class="w"> </span><span class="s2">&#34;FFRaycoder&#34;</span><span class="w"> </span><span class="c">#用户名</span><span class="w">
</span><span class="w">    </span>- git<span class="w"> </span>config<span class="w"> </span>--global<span class="w"> </span>user.email<span class="w"> </span><span class="s2">&#34;ray@raycoder.me&#34;</span><span class="w"> </span><span class="c">#用户邮箱</span><span class="w">
</span><span class="w">    </span>- git<span class="w"> </span>clone<span class="w"> </span>https<span class="p">:</span>//${ACCESS_TOKEN}@github.com/FFRaycoder/ffraycoder.github.io.git<span class="w"> </span>container<span class="w"> </span><span class="c">#换成你的仓库</span><span class="w">
</span><span class="w">    </span>- rm<span class="w"> </span>-rf<span class="w"> </span>container/*<span class="w">
</span><span class="w">    </span>- cp<span class="w"> </span>-r<span class="w"> </span>public/*<span class="w"> </span>container<span class="w"> 
</span><span class="w">    </span>- cd<span class="w"> </span>container<span class="w">
</span><span class="w">    </span>- git<span class="w"> </span>add<span class="w"> </span>.<span class="w">
</span><span class="w">    </span>- git<span class="w"> </span>commit<span class="w"> </span>-m<span class="w"> </span><span class="s1">&#39;Travis update blog&#39;</span><span class="w">
</span><span class="w">    </span>- git<span class="w"> </span>push<span class="w"> </span>-u<span class="w"> </span>origin<span class="w"> </span>master<span class="w"> </span>-f<span class="w">
</span></code></pre></td></tr></table>
</div>
</div><p><code>package.json</code>:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;blog&#34;</span><span class="p">,</span>
  <span class="nt">&#34;version&#34;</span><span class="p">:</span> <span class="s2">&#34;1.0.0&#34;</span><span class="p">,</span>
  <span class="nt">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;Ray&#39;s Blog&#34;</span><span class="p">,</span>
  <span class="nt">&#34;main&#34;</span><span class="p">:</span> <span class="s2">&#34;index.js&#34;</span><span class="p">,</span>
  <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;test&#34;</span><span class="p">:</span> <span class="s2">&#34;echo \&#34;Error: no test specified\&#34; &amp;&amp; exit 1&#34;</span><span class="p">,</span>
    <span class="nt">&#34;build&#34;</span><span class="p">:</span> <span class="s2">&#34;git config --global core.quotePath false &amp;&amp; hugo --gc --minify --cleanDestinationDir &amp;&amp; ./node_modules/gulp/bin/gulp.js build&#34;</span><span class="p">,</span>
    <span class="nt">&#34;index&#34;</span><span class="p">:</span> <span class="s2">&#34;hugo-lunr&#34;</span><span class="p">,</span>
    <span class="nt">&#34;algolia&#34;</span><span class="p">:</span> <span class="s2">&#34;atomic-algolia&#34;</span>
  <span class="p">},</span>
  <span class="nt">&#34;engines&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;node&#34;</span><span class="p">:</span> <span class="s2">&#34;12.x&#34;</span>
  <span class="p">},</span>
  <span class="nt">&#34;repository&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;git&#34;</span><span class="p">,</span>
    <span class="nt">&#34;url&#34;</span><span class="p">:</span> <span class="s2">&#34;git+https://github.com/FFRaycoder/blog.git&#34;</span>
  <span class="p">},</span>
  <span class="nt">&#34;keywords&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="s2">&#34;blog&#34;</span><span class="p">,</span>
    <span class="s2">&#34;hugo&#34;</span><span class="p">,</span>
    <span class="s2">&#34;hugo-theme-meme&#34;</span>
  <span class="p">],</span>
  <span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="s2">&#34;reuixiy&#34;</span><span class="p">,</span>
  <span class="nt">&#34;license&#34;</span><span class="p">:</span> <span class="s2">&#34;CC-BY-NC-SA-4.0&#34;</span><span class="p">,</span>
  <span class="nt">&#34;bugs&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;url&#34;</span><span class="p">:</span> <span class="s2">&#34;https://github.com/FFRaycoder/blog/issues&#34;</span>
  <span class="p">},</span>
  <span class="nt">&#34;homepage&#34;</span><span class="p">:</span> <span class="s2">&#34;https://github.com/FFRaycoder/blog&#34;</span><span class="p">,</span>
  <span class="nt">&#34;devDependencies&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;gulp&#34;</span><span class="p">:</span> <span class="s2">&#34;^4.0.2&#34;</span><span class="p">,</span>
    <span class="nt">&#34;gulp-uglify&#34;</span><span class="p">:</span> <span class="s2">&#34;^3.0.2&#34;</span><span class="p">,</span>
    <span class="nt">&#34;hugo-search-index&#34;</span><span class="p">:</span> <span class="s2">&#34;^0.5.0&#34;</span><span class="p">,</span>
    <span class="nt">&#34;readable-stream&#34;</span><span class="p">:</span> <span class="s2">&#34;^3.6.0&#34;</span><span class="p">,</span>
    <span class="nt">&#34;uglify-es&#34;</span><span class="p">:</span> <span class="s2">&#34;^3.3.9&#34;</span><span class="p">,</span>
    <span class="nt">&#34;workbox-build&#34;</span><span class="p">:</span> <span class="s2">&#34;^5.0.0&#34;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们的配置就结束了。每次把博客源码推送到仓库的<code>hugo</code>分支，Travis就会自动帮你部署好网页。</p>
]]></content><category scheme="https://raycoder.me/categories/ci/" term="CI" label="CI"/><category scheme="https://raycoder.me/tags/travis-ci/" term='Travis CI"' label='Travis CI"'/><category scheme="https://raycoder.me/tags/hugo/" term="Hugo" label="Hugo"/><category scheme="https://raycoder.me/tags/github/" term="GitHub" label="GitHub"/><category scheme="https://raycoder.me/tags/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客"/></entry><entry><title type="text">GitHub Pages变快了！</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/github-pages-becomes-faster/"/><id>https://raycoder.me/p/github-pages-becomes-faster/</id><updated>2020-04-09T14:00:28+08:00</updated><published>2020-04-09T09:38:09+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">GitHub Pages变快了！</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！本文首发于个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
</blockquote>
<p>前天在逛大佬们的博客，有的大佬用的是<code>github.io</code>二级域名。然后网页挂了，交流群内一片喊声<heimu>淦</heimu>🙃</p>
<p>昨天上午又去看了看，Pages可以正常访问了。阿，怎么感觉变快了？</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200409094422.png" alt=""></p>
<p>众所周知GitHub采用的Fastly CDN，估计前天是增加国内节点去了。</p>
<p>真香，可以抛弃Netlify了QQ</p>
<hr>
<p>而且取消了对百度Robots.txt的限制。</p>
]]></content><category scheme="https://raycoder.me/categories/github/" term="GitHub" label="GitHub"/><category scheme="https://raycoder.me/tags/github/" term="GitHub" label="GitHub"/><category scheme="https://raycoder.me/tags/pages/" term="Pages" label="Pages"/></entry><entry><title type="text">HTML入门二：文本</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/html-2/"/><id>https://raycoder.me/p/html-2/</id><updated>2020-04-11T16:05:01+08:00</updated><published>2020-04-08T13:19:37+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">HTML入门学习二：文本</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
</blockquote>
<h2 id="普通文本">普通文本</h2>
<h3 id="标题">标题</h3>
<p>HTML中的标题有六个级别：</p>
<h4 id="h1">&lt;h1&gt;</h4>
<p>用在主标题上。</p>
<h4 id="h2">&lt;h2&gt;</h4>
<p>用于二级标题上。</p>
<h4 id="h3">&lt;h3&gt;</h4>
<p>以此类推……</p>
<h4 id="h4">&lt;h4&gt;</h4>
<h4 id="h5">&lt;h5&gt;</h4>
<h4 id="h6">&lt;h6&gt;</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>一级标题<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>二级标题<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h3</span><span class="p">&gt;</span>三级标题<span class="p">&lt;/</span><span class="nt">h3</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h4</span><span class="p">&gt;</span>四级标题<span class="p">&lt;/</span><span class="nt">h4</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h5</span><span class="p">&gt;</span>五级标题<span class="p">&lt;/</span><span class="nt">h5</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">h6</span><span class="p">&gt;</span>六级标题<span class="p">&lt;/</span><span class="nt">h6</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200411132736.png" alt=""></p>
<h3 id="段落">段落</h3>
<h4 id="p">&lt;p&gt;</h4>
<p>在成段的文字两端添加<code>&lt;p&gt;</code>起始标签和<code>&lt;/p&gt;</code>结束标签就构成了HTML中的段落。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>这是一个段落！<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>这是另一个段落！<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200411133205.png" alt=""></p>
<p>（默认情况下，浏览器会把段落另起一行显示并保持一定距离。）</p>
<h3 id="粗体">粗体</h3>
<h4 id="b">&lt;b&gt;</h4>
<p>在<code>&lt;b&gt;</code>起始标签与<code>&lt;/b&gt;</code>结束标签中的文字显示为粗体。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>这是一个<span class="p">&lt;</span><span class="nt">b</span><span class="p">&gt;</span>段落<span class="p">&lt;/</span><span class="nt">b</span><span class="p">&gt;</span>！<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>这是<span class="p">&lt;</span><span class="nt">b</span><span class="p">&gt;</span>另一个<span class="p">&lt;/</span><span class="nt">b</span><span class="p">&gt;</span>段落！<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200411133919.png" alt=""></p>
<h3 id="斜体">斜体</h3>
<h4 id="i">&lt;i&gt;</h4>
<p>在<code>&lt;i&gt;</code>起始标签与<code>&lt;/i&gt;</code>结束标签中的文字显示为斜体。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>这是一个<span class="p">&lt;</span><span class="nt">i</span><span class="p">&gt;</span>段落<span class="p">&lt;/</span><span class="nt">i</span><span class="p">&gt;</span>！<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>这是<span class="p">&lt;</span><span class="nt">i</span><span class="p">&gt;</span>另一个<span class="p">&lt;/</span><span class="nt">i</span><span class="p">&gt;</span>段落！<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200411134209.png" alt=""></p>
<h3 id="上下标">上下标</h3>
<h4 id="上标sup">上标&lt;sup&gt;</h4>
<p>在<code>&lt;sup&gt;</code>起始标签与<code>&lt;/sup&gt;</code>结束标签中的文字显示为上标，如<code>2&lt;sup&gt;2&lt;/sup&gt;</code>=2<sup>2</sup>。</p>
<h4 id="下标sub">下标&lt;sub&gt;</h4>
<p>在<code>&lt;sub&gt;</code>起始标签与<code>&lt;/sub&gt;</code>结束标签中的文字显示为上标，如<code>H&lt;sub&gt;2&lt;/sub&gt;O</code>=H<sub>2</sub>O。</p>
<h3 id="换行符和水平线">换行符和水平线</h3>
<h4 id="换行符br-">换行符&lt;br /&gt;</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">地球<span class="p">&lt;</span><span class="nt">br</span> <span class="p">/&gt;</span>每天绕着<span class="p">&lt;</span><span class="nt">br</span> <span class="p">/&gt;</span>太阳转。
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200411134916.png" alt=""></p>
<p>当然，这个<code> /</code>可以略去不写，写成<code>&lt;br&gt;</code>也是可以的。</p>
<h3 id="水平线hr-">水平线&lt;hr /&gt;</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">Ray是一个<span class="p">&lt;</span><span class="nt">hr</span> <span class="p">/&gt;</span>大氵B
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200411135247.png" alt=""></p>
<p>同理，这个<code> /</code>也可以略去不写，写成<code>&lt;hr&gt;</code>也是可以的。</p>
<h2 id="语义化标记">语义化标记</h2>
]]></content><category scheme="https://raycoder.me/categories/html/" term="HTML" label="HTML"/><category scheme="https://raycoder.me/categories/html%E5%85%A5%E9%97%A8/" term="HTML入门" label="HTML入门"/><category scheme="https://raycoder.me/tags/html/" term="HTML" label="HTML"/><category scheme="https://raycoder.me/tags/html%E5%85%A5%E9%97%A8/" term="HTML入门" label="HTML入门"/></entry><entry><title type="text">日本小哥的CPU料理！</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/cooking-with-cpu/"/><id>https://raycoder.me/p/cooking-with-cpu/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-04-08T09:55:44+08:00</published><summary type="html">……</summary><content type="html"><![CDATA[<div id="player"></div>
<script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script>
<script type="text/javascript">
var player = new DogePlayer({
    container: document.getElementById('player'),
    userId: 1136,
    vcode: '879d7b8fc1f339c9',
    autoPlay: false,
    plcode: '6d31ac05894d4627'
});
</script>]]></content><category scheme="https://raycoder.me/categories/%E6%90%9E%E7%AC%91/" term="搞笑" label="搞笑"/><category scheme="https://raycoder.me/tags/%E6%97%A5%E5%B8%B8/" term="日常" label="日常"/><category scheme="https://raycoder.me/tags/%E6%90%9E%E7%AC%91/" term="搞笑" label="搞笑"/><category scheme="https://raycoder.me/tags/cpu/" term="CPU" label="CPU"/></entry><entry><title type="text">HTML入门(一)：结构</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/html-1/"/><id>https://raycoder.me/p/html-1/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-04-07T08:51:02+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">HTML入门(一)</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
<p><strong>本文首发于<a href="https://raycoder.me/p/html-1/">Ray's Blog</a></strong></p>
</blockquote>
<h3 id="word文档的结构">Word文档的结构</h3>
<p>任何文档中标题和子标题都反映出信息的层次性。标题后面可能跟着文档简介或是文档中最重要的信息。下面是一个Word文档示例。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200407085907.png" alt=""></p>
<p>从这里我们理解到了Word文档中结构的运用对理解文档的帮助，编写网页的时候，道理是一样的。</p>
<h3 id="html文档的结构">HTML文档的结构</h3>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200407090301.png" alt=""></p>
<h4 id="html使用元素描述结构">HTML使用元素描述结构</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span><span class="c">&lt;!--HTML代码的开始--&gt;</span>
    <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span><span class="c">&lt;!--与结束标签中的内容显示在浏览器主窗口中--&gt;</span>
		<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>一级标题<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span><span class="c">&lt;!--主标题--&gt;</span>
		<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>普通文本<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span><span class="c">&lt;!--成段的文字--&gt;</span>
        <span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>二级标题<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>另一段普通文本<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">h2</span><span class="p">&gt;</span>又一个二级标题<span class="p">&lt;/</span><span class="nt">h2</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>又一段普通文本<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
	<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="进一步分析标签">进一步分析标签</h4>
<p>HTML代码由包含在尖括号里的字符构成，这些代码称为<code>HTML元素</code>。元素通常由两个标签组成：一个其实标签和一个结束标签。</p>
<p>HTML标签的结构如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">     起始标签              结束标签
<span class="p">&lt;</span>      <span class="nt">p</span>       <span class="p">&gt;</span>      <span class="p">&lt;</span> <span class="p">/</span>    <span class="nt">p</span>     <span class="p">&gt;</span>
左尖   用途     右尖     斜杠  字符
括号 这里是段落  括号
</code></pre></td></tr></table>
</div>
</div><h4 id="标签的特性">标签的特性</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">p</span> <span class="na">lang   </span><span class="o">=</span>  <span class="s">&#34;zh-cn&#34;</span><span class="p">&gt;</span>一个中文段落<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
   特性名称    特性值
</code></pre></td></tr></table>
</div>
</div><h4 id="bodyhead和title">&lt;body&gt;、&lt;head&gt;和&lt;title&gt;</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>页面的标题<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
	<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">h1</span><span class="p">&gt;</span>这是页面的正文<span class="p">&lt;/</span><span class="nt">h1</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>网页正文中的所有内容都会显示在主浏览器窗口中。<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
	<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h5 id="body">&lt;body&gt;</h5>
<p>在我们的第一个示例页面中，我们就看到了<code>&lt;body</code>&gt;元素。这个元素中的所有内容都会显示在浏览器的主窗口中。</p>
<h5 id="head">&lt;head&gt;</h5>
<p>在<code>&lt;body&gt;</code>元素的前面，我们经常会看到<code>&lt;head&gt;</code>标签——它包含了有关这个页面的一些信息。我们经常会在这里看到<code>&lt;title&gt;</code>元素。</p>
<h5 id="title">&lt;title&gt;</h5>
<p><code>&lt;title&gt;</code>元素设置这个页面的标题。</p>
]]></content><category scheme="https://raycoder.me/categories/html/" term="HTML" label="HTML"/><category scheme="https://raycoder.me/categories/html%E5%85%A5%E9%97%A8/" term="HTML入门" label="HTML入门"/><category scheme="https://raycoder.me/tags/html/" term="HTML" label="HTML"/><category scheme="https://raycoder.me/tags/html%E5%85%A5%E9%97%A8/" term="HTML入门" label="HTML入门"/><category scheme="https://raycoder.me/tags/html%E7%BB%93%E6%9E%84/" term="HTML结构" label="HTML结构"/></entry><entry><title type="text">万能的CLOUDFLARE WORKERS+JSProxy代理？！</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/cf-worker-proxy/"/><id>https://raycoder.me/p/cf-worker-proxy/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-04-02T16:48:52+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">使用CLOUDFLARE WORKERS搭建代理、CDN</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
<p><strong>本文首发于<a href="https://raycoder.me/p/cf-worker-proxy/">Ray's Blog</a></strong></p>
</blockquote>
<p>不瞒你们说，我看到这个项目的时候都震（智）惊（障）了！贴上链接：<a href="https://github.com/EtherDream/jsproxy">EtherDream / jsproxy | Github</a>你猜这个项目是做什么的？使用<a href="https://workers.cloudflare.com"><code>Cloudflare workers</code></a>进行<em class="emphasis-point">反向代理</em>！！！</p>
<p><img src="https://cdngh.raycoder.me/imgs/20200403091318.jpg" alt=""></p>
<p>先附上一个网址。<a href="https://yt.raycoder.me">https://yt.raycoder.me</a>，这是我弄的一个YouTube代理网址。这个真的只使用了<code>Cloudflare Workers</code>进行代理，我是没有做任何其它配置的。你也可以把这当做一个cdn来用——cloudflare免费版不给你国内的节点，但是Workers有啊！一个月10万的请求数量完全够用了。（你们可能发现我的站变快了，因为我也用了）</p>
<p>首先我们需要一个Cloudflare账号，自己注册，再把你的域名<code>NS</code>服务器换成CF给你的。0然后点击上面贴出的workers地址，点击&quot;Start Building&quot;，按照流程配置好。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200402170525.png" alt=""></p>
<p>然后会跳转到你的控制台界面，点进去，选择<code>Workers</code>：</p>
<p><img src="https://cdngh.raycoder.me/imgs/20200402170620.png" alt=""></p>
<p>点击<code>Manage Workers</code>，你会见到一个类似于这样的页面。</p>
<p><img src="https://cdngh.raycoder.me/imgs/20200402170832.png" alt=""></p>
<p>然后把这串JS代码贴进去。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span><span class="lnt">214
</span><span class="lnt">215
</span><span class="lnt">216
</span><span class="lnt">217
</span><span class="lnt">218
</span><span class="lnt">219
</span><span class="lnt">220
</span><span class="lnt">221
</span><span class="lnt">222
</span><span class="lnt">223
</span><span class="lnt">224
</span><span class="lnt">225
</span><span class="lnt">226
</span><span class="lnt">227
</span><span class="lnt">228
</span><span class="lnt">229
</span><span class="lnt">230
</span><span class="lnt">231
</span><span class="lnt">232
</span><span class="lnt">233
</span><span class="lnt">234
</span><span class="lnt">235
</span><span class="lnt">236
</span><span class="lnt">237
</span><span class="lnt">238
</span><span class="lnt">239
</span><span class="lnt">240
</span><span class="lnt">241
</span><span class="lnt">242
</span><span class="lnt">243
</span><span class="lnt">244
</span><span class="lnt">245
</span><span class="lnt">246
</span><span class="lnt">247
</span><span class="lnt">248
</span><span class="lnt">249
</span><span class="lnt">250
</span><span class="lnt">251
</span><span class="lnt">252
</span><span class="lnt">253
</span><span class="lnt">254
</span><span class="lnt">255
</span><span class="lnt">256
</span><span class="lnt">257
</span><span class="lnt">258
</span><span class="lnt">259
</span><span class="lnt">260
</span><span class="lnt">261
</span><span class="lnt">262
</span><span class="lnt">263
</span><span class="lnt">264
</span><span class="lnt">265
</span><span class="lnt">266
</span><span class="lnt">267
</span><span class="lnt">268
</span><span class="lnt">269
</span><span class="lnt">270
</span><span class="lnt">271
</span><span class="lnt">272
</span><span class="lnt">273
</span><span class="lnt">274
</span><span class="lnt">275
</span><span class="lnt">276
</span><span class="lnt">277
</span><span class="lnt">278
</span><span class="lnt">279
</span><span class="lnt">280
</span><span class="lnt">281
</span><span class="lnt">282
</span><span class="lnt">283
</span><span class="lnt">284
</span><span class="lnt">285
</span><span class="lnt">286
</span><span class="lnt">287
</span><span class="lnt">288
</span><span class="lnt">289
</span><span class="lnt">290
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-javascript" data-lang="javascript"><span class="s1">&#39;use strict&#39;</span>

<span class="cm">/**
</span><span class="cm"> * static files (404.html, sw.js, conf.js)
</span><span class="cm"> */</span>
<span class="kr">const</span> <span class="nx">ASSET_URL</span> <span class="o">=</span> <span class="s1">&#39;&lt;YOUR_URL&gt;&#39;</span>

<span class="kr">const</span> <span class="nx">JS_VER</span> <span class="o">=</span> <span class="mi">10</span>
<span class="kr">const</span> <span class="nx">MAX_RETRY</span> <span class="o">=</span> <span class="mi">1</span>

<span class="cm">/** @type {RequestInit} */</span>
<span class="kr">const</span> <span class="nx">PREFLIGHT_INIT</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">status</span><span class="o">:</span> <span class="mi">204</span><span class="p">,</span>
  <span class="nx">headers</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">({</span>
    <span class="s1">&#39;access-control-allow-origin&#39;</span><span class="o">:</span> <span class="s1">&#39;*&#39;</span><span class="p">,</span>
    <span class="s1">&#39;access-control-allow-methods&#39;</span><span class="o">:</span> <span class="s1">&#39;GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS&#39;</span><span class="p">,</span>
    <span class="s1">&#39;access-control-max-age&#39;</span><span class="o">:</span> <span class="s1">&#39;1728000&#39;</span><span class="p">,</span>
  <span class="p">}),</span>
<span class="p">}</span>

<span class="cm">/**
</span><span class="cm"> * @param {any} body
</span><span class="cm"> * @param {number} status
</span><span class="cm"> * @param {Object&lt;string, string&gt;} headers
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">makeRes</span><span class="p">(</span><span class="nx">body</span><span class="p">,</span> <span class="nx">status</span> <span class="o">=</span> <span class="mi">200</span><span class="p">,</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{})</span> <span class="p">{</span>
  <span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;--ver&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">JS_VER</span>
  <span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;access-control-allow-origin&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;*&#39;</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="nx">body</span><span class="p">,</span> <span class="p">{</span><span class="nx">status</span><span class="p">,</span> <span class="nx">headers</span><span class="p">})</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * @param {string} urlStr 
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">newUrl</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">URL</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
<span class="p">}</span>


<span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;fetch&#39;</span><span class="p">,</span> <span class="nx">e</span> <span class="p">=&gt;</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">ret</span> <span class="o">=</span> <span class="nx">fetchHandler</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="p">=&gt;</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;cfworker error:\n&#39;</span> <span class="o">+</span> <span class="nx">err</span><span class="p">.</span><span class="nx">stack</span><span class="p">,</span> <span class="mi">502</span><span class="p">))</span>
  <span class="nx">e</span><span class="p">.</span><span class="nx">respondWith</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span>
<span class="p">})</span>


<span class="cm">/**
</span><span class="cm"> * @param {FetchEvent} e 
</span><span class="cm"> */</span>
<span class="nx">async</span> <span class="kd">function</span> <span class="nx">fetchHandler</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">req</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">request</span>
  <span class="kr">const</span> <span class="nx">urlStr</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">url</span>
  <span class="kr">const</span> <span class="nx">urlObj</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">URL</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">urlObj</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">.</span><span class="nx">origin</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">urlObj</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">===</span> <span class="s1">&#39;http:&#39;</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">urlObj</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">=</span> <span class="s1">&#39;https:&#39;</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="mi">301</span><span class="p">,</span> <span class="p">{</span>
      <span class="s1">&#39;strict-transport-security&#39;</span><span class="o">:</span> <span class="s1">&#39;max-age=99999999; includeSubDomains; preload&#39;</span><span class="p">,</span>
      <span class="s1">&#39;location&#39;</span><span class="o">:</span> <span class="nx">urlObj</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span>
    <span class="p">})</span>
  <span class="p">}</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">path</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;/http/&#39;</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">httpHandler</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">path</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span>
  <span class="p">}</span>

  <span class="k">switch</span> <span class="p">(</span><span class="nx">path</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">case</span> <span class="s1">&#39;/http&#39;</span><span class="o">:</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;请更新 cfworker 到最新版本!&#39;</span><span class="p">)</span>
  <span class="k">case</span> <span class="s1">&#39;/ws&#39;</span><span class="o">:</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;not support&#39;</span><span class="p">,</span> <span class="mi">400</span><span class="p">)</span>
  <span class="k">case</span> <span class="s1">&#39;/works&#39;</span><span class="o">:</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;it works&#39;</span><span class="p">)</span>
  <span class="k">default</span><span class="o">:</span>
    <span class="c1">// static files
</span><span class="c1"></span>    <span class="k">return</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">ASSET_URL</span> <span class="o">+</span> <span class="nx">path</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * @param {Request} req
</span><span class="cm"> * @param {string} pathname
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">httpHandler</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">pathname</span><span class="p">)</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">reqHdrRaw</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">headers</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">reqHdrRaw</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">&#39;x-jsproxy&#39;</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">Response</span><span class="p">.</span><span class="nx">error</span><span class="p">()</span>
  <span class="p">}</span>

  <span class="c1">// preflight
</span><span class="c1"></span>  <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">method</span> <span class="o">===</span> <span class="s1">&#39;OPTIONS&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">reqHdrRaw</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">&#39;access-control-request-headers&#39;</span><span class="p">)</span>
  <span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">PREFLIGHT_INIT</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="kd">let</span> <span class="nx">acehOld</span> <span class="o">=</span> <span class="kc">false</span>
  <span class="kd">let</span> <span class="nx">rawSvr</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
  <span class="kd">let</span> <span class="nx">rawLen</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
  <span class="kd">let</span> <span class="nx">rawEtag</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>

  <span class="kr">const</span> <span class="nx">reqHdrNew</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">(</span><span class="nx">reqHdrRaw</span><span class="p">)</span>
  <span class="nx">reqHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;x-jsproxy&#39;</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="p">)</span>

  <span class="c1">// 此处逻辑和 http-dec-req-hdr.lua 大致相同
</span><span class="c1"></span>  <span class="c1">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua
</span><span class="c1"></span>  <span class="kr">const</span> <span class="nx">refer</span> <span class="o">=</span> <span class="nx">reqHdrNew</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;referer&#39;</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">refer</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">refer</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;?&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">query</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;missing params&#39;</span><span class="p">,</span> <span class="mi">403</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="kr">const</span> <span class="nx">param</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">URLSearchParams</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span>

  <span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="p">[</span><span class="nx">k</span><span class="p">,</span> <span class="nx">v</span><span class="p">]</span> <span class="k">of</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">param</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">===</span> <span class="s1">&#39;--&#39;</span><span class="p">)</span> <span class="p">{</span>
      <span class="c1">// 系统信息
</span><span class="c1"></span>      <span class="k">switch</span> <span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span> <span class="p">{</span>
      <span class="k">case</span> <span class="s1">&#39;aceh&#39;</span><span class="o">:</span>
        <span class="nx">acehOld</span> <span class="o">=</span> <span class="kc">true</span>
        <span class="k">break</span>
      <span class="k">case</span> <span class="s1">&#39;raw-info&#39;</span><span class="o">:</span>
        <span class="p">[</span><span class="nx">rawSvr</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="nx">rawEtag</span><span class="p">]</span> <span class="o">=</span> <span class="nx">v</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span>
        <span class="k">break</span>
      <span class="p">}</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="c1">// 还原 HTTP 请求头
</span><span class="c1"></span>      <span class="k">if</span> <span class="p">(</span><span class="nx">v</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">reqHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">reqHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">param</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">&#39;referer&#39;</span><span class="p">))</span> <span class="p">{</span>
    <span class="nx">reqHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;referer&#39;</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="c1">// cfworker 会把路径中的 `//` 合并成 `/`
</span><span class="c1"></span>  <span class="kr">const</span> <span class="nx">urlStr</span> <span class="o">=</span> <span class="nx">pathname</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(https?):\/+/</span><span class="p">,</span> <span class="s1">&#39;$1://&#39;</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">urlObj</span> <span class="o">=</span> <span class="nx">newUrl</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">urlObj</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;invalid proxy url: &#39;</span> <span class="o">+</span> <span class="nx">urlStr</span><span class="p">,</span> <span class="mi">403</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="cm">/** @type {RequestInit} */</span>
  <span class="kr">const</span> <span class="nx">reqInit</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">method</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">method</span><span class="p">,</span>
    <span class="nx">headers</span><span class="o">:</span> <span class="nx">reqHdrNew</span><span class="p">,</span>
    <span class="nx">redirect</span><span class="o">:</span> <span class="s1">&#39;manual&#39;</span><span class="p">,</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">method</span> <span class="o">===</span> <span class="s1">&#39;POST&#39;</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">reqInit</span><span class="p">.</span><span class="nx">body</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">proxy</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">,</span> <span class="nx">acehOld</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * 
</span><span class="cm"> * @param {URL} urlObj 
</span><span class="cm"> * @param {RequestInit} reqInit 
</span><span class="cm"> * @param {number} retryTimes 
</span><span class="cm"> */</span>
<span class="nx">async</span> <span class="kd">function</span> <span class="nx">proxy</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">,</span> <span class="nx">acehOld</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="nx">retryTimes</span><span class="p">)</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">res</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">resHdrOld</span> <span class="o">=</span> <span class="nx">res</span><span class="p">.</span><span class="nx">headers</span>
  <span class="kr">const</span> <span class="nx">resHdrNew</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">(</span><span class="nx">resHdrOld</span><span class="p">)</span>

  <span class="kd">let</span> <span class="nx">expose</span> <span class="o">=</span> <span class="s1">&#39;*&#39;</span>
  
  <span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="p">[</span><span class="nx">k</span><span class="p">,</span> <span class="nx">v</span><span class="p">]</span> <span class="k">of</span> <span class="nx">resHdrOld</span><span class="p">.</span><span class="nx">entries</span><span class="p">())</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;access-control-allow-origin&#39;</span> <span class="o">||</span>
        <span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;access-control-expose-headers&#39;</span> <span class="o">||</span>
        <span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;location&#39;</span> <span class="o">||</span>
        <span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;set-cookie&#39;</span>
    <span class="p">)</span> <span class="p">{</span>
      <span class="kr">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="s1">&#39;--&#39;</span> <span class="o">+</span> <span class="nx">k</span>
      <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">acehOld</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">expose</span> <span class="o">=</span> <span class="nx">expose</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span> <span class="o">+</span> <span class="nx">x</span>
      <span class="p">}</span>
      <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">acehOld</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;cache-control&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;content-language&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;content-type&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;expires&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;last-modified&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;pragma&#39;</span>
    <span class="p">)</span> <span class="p">{</span>
      <span class="nx">expose</span> <span class="o">=</span> <span class="nx">expose</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span> <span class="o">+</span> <span class="nx">k</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">acehOld</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">expose</span> <span class="o">=</span> <span class="nx">expose</span> <span class="o">+</span> <span class="s1">&#39;,--s&#39;</span>
    <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--t&#39;</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="c1">// verify
</span><span class="c1"></span>  <span class="k">if</span> <span class="p">(</span><span class="nx">rawLen</span><span class="p">)</span> <span class="p">{</span>
    <span class="kr">const</span> <span class="nx">newLen</span> <span class="o">=</span> <span class="nx">resHdrOld</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;content-length&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span>
    <span class="kr">const</span> <span class="nx">badLen</span> <span class="o">=</span> <span class="p">(</span><span class="nx">rawLen</span> <span class="o">!==</span> <span class="nx">newLen</span><span class="p">)</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">badLen</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">retryTimes</span> <span class="o">&lt;</span> <span class="nx">MAX_RETRY</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">urlObj</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">parseYtVideoRedir</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">newLen</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">urlObj</span><span class="p">)</span> <span class="p">{</span>
          <span class="k">return</span> <span class="nx">proxy</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">,</span> <span class="nx">acehOld</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="nx">retryTimes</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">}</span>
      <span class="p">}</span>
      <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="mi">400</span><span class="p">,</span> <span class="p">{</span>
        <span class="s1">&#39;--error&#39;</span><span class="o">:</span> <span class="sb">`bad len: </span><span class="si">${</span><span class="nx">newLen</span><span class="si">}</span><span class="sb">, except: </span><span class="si">${</span><span class="nx">rawLen</span><span class="si">}</span><span class="sb">`</span><span class="p">,</span>
        <span class="s1">&#39;access-control-expose-headers&#39;</span><span class="o">:</span> <span class="s1">&#39;--error&#39;</span><span class="p">,</span>
      <span class="p">})</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">retryTimes</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--retry&#39;</span><span class="p">,</span> <span class="nx">retryTimes</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="kd">let</span> <span class="nx">status</span> <span class="o">=</span> <span class="nx">res</span><span class="p">.</span><span class="nx">status</span>

  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;access-control-expose-headers&#39;</span><span class="p">,</span> <span class="nx">expose</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;access-control-allow-origin&#39;</span><span class="p">,</span> <span class="s1">&#39;*&#39;</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--s&#39;</span><span class="p">,</span> <span class="nx">status</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--ver&#39;</span><span class="p">,</span> <span class="nx">JS_VER</span><span class="p">)</span>

  <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;content-security-policy&#39;</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;content-security-policy-report-only&#39;</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;clear-site-data&#39;</span><span class="p">)</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">status</span> <span class="o">===</span> <span class="mi">301</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">302</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">303</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">307</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">308</span>
  <span class="p">)</span> <span class="p">{</span>
    <span class="nx">status</span> <span class="o">=</span> <span class="nx">status</span> <span class="o">+</span> <span class="mi">10</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="p">{</span>
    <span class="nx">status</span><span class="p">,</span>
    <span class="nx">headers</span><span class="o">:</span> <span class="nx">resHdrNew</span><span class="p">,</span>
  <span class="p">})</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * @param {URL} urlObj 
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">isYtUrl</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="nx">urlObj</span><span class="p">.</span><span class="nx">host</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s1">&#39;.googlevideo.com&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
    <span class="nx">urlObj</span><span class="p">.</span><span class="nx">pathname</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;/videoplayback&#39;</span><span class="p">)</span>
  <span class="p">)</span>
<span class="p">}</span>

<span class="cm">/**
</span><span class="cm"> * @param {URL} urlObj 
</span><span class="cm"> * @param {number} newLen 
</span><span class="cm"> * @param {Response} res 
</span><span class="cm"> */</span>
<span class="nx">async</span> <span class="kd">function</span> <span class="nx">parseYtVideoRedir</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">newLen</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">newLen</span> <span class="o">&gt;</span> <span class="mi">2000</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isYtUrl</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kr">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">res</span><span class="p">.</span><span class="nx">text</span><span class="p">()</span>
    <span class="nx">urlObj</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">URL</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isYtUrl</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">urlObj</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>其中的<code>ASSET_URL</code>要更换成你想要代理的域名——比如想代理YT，就写<code>https://youtube.com</code>。</p>
<p>然后选择<code>Save and Deploy</code>。</p>
<p>它会给你分配一个域名，你可以修改成你想要的域名。比如我的YT代理就是<code>https://youtube.&lt;马赛克&gt;.workers.dev</code>。</p>
<p>自定义域名，先把一个子域名CNAME到分配的域名，然后选择<code>Add ruote</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200402172046.png" alt=""></p>
<p>这里我想要把我的域名解析到<code>rb</code>这个Worker，我就填写<code>https://raycoder.me/*</code>，选择<code>rb</code>这个Worker，保存。</p>
<p><img src="https://cdngh.raycoder.me/imgs/20200402172138.png" alt=""></p>
<p>这就引申出了一个用法——拿来当作网站CDN，或者是图床CDN（无需jsDelivr）。我现在的CDN就是这个搭建的。</p>
<p>结果：</p>
<p><img src="https://cdngh.raycoder.me/imgs/20200403091606.png" alt=""></p>
<p>当然人家拒绝了我们<code>cloudflare-nginx</code>的访问也没法子​🙃​</p>
<p>愉快的访问吧！</p>
<p><img src="https://cdngh.raycoder.me/imgs/20200403091351.jpg" alt=""></p>
<p><strong>注意！本教程仅供个人学习使用！</strong></p>
<hr>
<p>2020/04/03更新：</p>
<p>建议保持原始代码，高速访问外网。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span><span class="lnt">175
</span><span class="lnt">176
</span><span class="lnt">177
</span><span class="lnt">178
</span><span class="lnt">179
</span><span class="lnt">180
</span><span class="lnt">181
</span><span class="lnt">182
</span><span class="lnt">183
</span><span class="lnt">184
</span><span class="lnt">185
</span><span class="lnt">186
</span><span class="lnt">187
</span><span class="lnt">188
</span><span class="lnt">189
</span><span class="lnt">190
</span><span class="lnt">191
</span><span class="lnt">192
</span><span class="lnt">193
</span><span class="lnt">194
</span><span class="lnt">195
</span><span class="lnt">196
</span><span class="lnt">197
</span><span class="lnt">198
</span><span class="lnt">199
</span><span class="lnt">200
</span><span class="lnt">201
</span><span class="lnt">202
</span><span class="lnt">203
</span><span class="lnt">204
</span><span class="lnt">205
</span><span class="lnt">206
</span><span class="lnt">207
</span><span class="lnt">208
</span><span class="lnt">209
</span><span class="lnt">210
</span><span class="lnt">211
</span><span class="lnt">212
</span><span class="lnt">213
</span><span class="lnt">214
</span><span class="lnt">215
</span><span class="lnt">216
</span><span class="lnt">217
</span><span class="lnt">218
</span><span class="lnt">219
</span><span class="lnt">220
</span><span class="lnt">221
</span><span class="lnt">222
</span><span class="lnt">223
</span><span class="lnt">224
</span><span class="lnt">225
</span><span class="lnt">226
</span><span class="lnt">227
</span><span class="lnt">228
</span><span class="lnt">229
</span><span class="lnt">230
</span><span class="lnt">231
</span><span class="lnt">232
</span><span class="lnt">233
</span><span class="lnt">234
</span><span class="lnt">235
</span><span class="lnt">236
</span><span class="lnt">237
</span><span class="lnt">238
</span><span class="lnt">239
</span><span class="lnt">240
</span><span class="lnt">241
</span><span class="lnt">242
</span><span class="lnt">243
</span><span class="lnt">244
</span><span class="lnt">245
</span><span class="lnt">246
</span><span class="lnt">247
</span><span class="lnt">248
</span><span class="lnt">249
</span><span class="lnt">250
</span><span class="lnt">251
</span><span class="lnt">252
</span><span class="lnt">253
</span><span class="lnt">254
</span><span class="lnt">255
</span><span class="lnt">256
</span><span class="lnt">257
</span><span class="lnt">258
</span><span class="lnt">259
</span><span class="lnt">260
</span><span class="lnt">261
</span><span class="lnt">262
</span><span class="lnt">263
</span><span class="lnt">264
</span><span class="lnt">265
</span><span class="lnt">266
</span><span class="lnt">267
</span><span class="lnt">268
</span><span class="lnt">269
</span><span class="lnt">270
</span><span class="lnt">271
</span><span class="lnt">272
</span><span class="lnt">273
</span><span class="lnt">274
</span><span class="lnt">275
</span><span class="lnt">276
</span><span class="lnt">277
</span><span class="lnt">278
</span><span class="lnt">279
</span><span class="lnt">280
</span><span class="lnt">281
</span><span class="lnt">282
</span><span class="lnt">283
</span><span class="lnt">284
</span><span class="lnt">285
</span><span class="lnt">286
</span><span class="lnt">287
</span><span class="lnt">288
</span><span class="lnt">289
</span><span class="lnt">290
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="s1">&#39;use strict&#39;</span>

<span class="cm">/**
</span><span class="cm"> * static files (404.html, sw.js, conf.js)
</span><span class="cm"> */</span>
<span class="kr">const</span> <span class="nx">ASSET_URL</span> <span class="o">=</span> <span class="s1">&#39;https://etherdream.github.io/jsproxy&#39;</span>

<span class="kr">const</span> <span class="nx">JS_VER</span> <span class="o">=</span> <span class="mi">10</span>
<span class="kr">const</span> <span class="nx">MAX_RETRY</span> <span class="o">=</span> <span class="mi">1</span>

<span class="cm">/** @type {RequestInit} */</span>
<span class="kr">const</span> <span class="nx">PREFLIGHT_INIT</span> <span class="o">=</span> <span class="p">{</span>
  <span class="nx">status</span><span class="o">:</span> <span class="mi">204</span><span class="p">,</span>
  <span class="nx">headers</span><span class="o">:</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">({</span>
    <span class="s1">&#39;access-control-allow-origin&#39;</span><span class="o">:</span> <span class="s1">&#39;*&#39;</span><span class="p">,</span>
    <span class="s1">&#39;access-control-allow-methods&#39;</span><span class="o">:</span> <span class="s1">&#39;GET,POST,PUT,PATCH,TRACE,DELETE,HEAD,OPTIONS&#39;</span><span class="p">,</span>
    <span class="s1">&#39;access-control-max-age&#39;</span><span class="o">:</span> <span class="s1">&#39;1728000&#39;</span><span class="p">,</span>
  <span class="p">}),</span>
<span class="p">}</span>

<span class="cm">/**
</span><span class="cm"> * @param {any} body
</span><span class="cm"> * @param {number} status
</span><span class="cm"> * @param {Object&lt;string, string&gt;} headers
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">makeRes</span><span class="p">(</span><span class="nx">body</span><span class="p">,</span> <span class="nx">status</span> <span class="o">=</span> <span class="mi">200</span><span class="p">,</span> <span class="nx">headers</span> <span class="o">=</span> <span class="p">{})</span> <span class="p">{</span>
  <span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;--ver&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nx">JS_VER</span>
  <span class="nx">headers</span><span class="p">[</span><span class="s1">&#39;access-control-allow-origin&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s1">&#39;*&#39;</span>
  <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="nx">body</span><span class="p">,</span> <span class="p">{</span><span class="nx">status</span><span class="p">,</span> <span class="nx">headers</span><span class="p">})</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * @param {string} urlStr 
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">newUrl</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">URL</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
<span class="p">}</span>


<span class="nx">addEventListener</span><span class="p">(</span><span class="s1">&#39;fetch&#39;</span><span class="p">,</span> <span class="nx">e</span> <span class="p">=&gt;</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">ret</span> <span class="o">=</span> <span class="nx">fetchHandler</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span>
    <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">err</span> <span class="p">=&gt;</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;cfworker error:\n&#39;</span> <span class="o">+</span> <span class="nx">err</span><span class="p">.</span><span class="nx">stack</span><span class="p">,</span> <span class="mi">502</span><span class="p">))</span>
  <span class="nx">e</span><span class="p">.</span><span class="nx">respondWith</span><span class="p">(</span><span class="nx">ret</span><span class="p">)</span>
<span class="p">})</span>


<span class="cm">/**
</span><span class="cm"> * @param {FetchEvent} e 
</span><span class="cm"> */</span>
<span class="nx">async</span> <span class="kd">function</span> <span class="nx">fetchHandler</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">req</span> <span class="o">=</span> <span class="nx">e</span><span class="p">.</span><span class="nx">request</span>
  <span class="kr">const</span> <span class="nx">urlStr</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">url</span>
  <span class="kr">const</span> <span class="nx">urlObj</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">URL</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">urlObj</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">.</span><span class="nx">origin</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">urlObj</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">===</span> <span class="s1">&#39;http:&#39;</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">urlObj</span><span class="p">.</span><span class="nx">protocol</span> <span class="o">=</span> <span class="s1">&#39;https:&#39;</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="mi">301</span><span class="p">,</span> <span class="p">{</span>
      <span class="s1">&#39;strict-transport-security&#39;</span><span class="o">:</span> <span class="s1">&#39;max-age=99999999; includeSubDomains; preload&#39;</span><span class="p">,</span>
      <span class="s1">&#39;location&#39;</span><span class="o">:</span> <span class="nx">urlObj</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span>
    <span class="p">})</span>
  <span class="p">}</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">path</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;/http/&#39;</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">httpHandler</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">path</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span>
  <span class="p">}</span>

  <span class="k">switch</span> <span class="p">(</span><span class="nx">path</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">case</span> <span class="s1">&#39;/http&#39;</span><span class="o">:</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;请更新 cfworker 到最新版本!&#39;</span><span class="p">)</span>
  <span class="k">case</span> <span class="s1">&#39;/ws&#39;</span><span class="o">:</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;not support&#39;</span><span class="p">,</span> <span class="mi">400</span><span class="p">)</span>
  <span class="k">case</span> <span class="s1">&#39;/works&#39;</span><span class="o">:</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;it works&#39;</span><span class="p">)</span>
  <span class="k">default</span><span class="o">:</span>
    <span class="c1">// static files
</span><span class="c1"></span>    <span class="k">return</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">ASSET_URL</span> <span class="o">+</span> <span class="nx">path</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * @param {Request} req
</span><span class="cm"> * @param {string} pathname
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">httpHandler</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">pathname</span><span class="p">)</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">reqHdrRaw</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">headers</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">reqHdrRaw</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">&#39;x-jsproxy&#39;</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">Response</span><span class="p">.</span><span class="nx">error</span><span class="p">()</span>
  <span class="p">}</span>

  <span class="c1">// preflight
</span><span class="c1"></span>  <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">method</span> <span class="o">===</span> <span class="s1">&#39;OPTIONS&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">reqHdrRaw</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">&#39;access-control-request-headers&#39;</span><span class="p">)</span>
  <span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">PREFLIGHT_INIT</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="kd">let</span> <span class="nx">acehOld</span> <span class="o">=</span> <span class="kc">false</span>
  <span class="kd">let</span> <span class="nx">rawSvr</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
  <span class="kd">let</span> <span class="nx">rawLen</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
  <span class="kd">let</span> <span class="nx">rawEtag</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>

  <span class="kr">const</span> <span class="nx">reqHdrNew</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">(</span><span class="nx">reqHdrRaw</span><span class="p">)</span>
  <span class="nx">reqHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;x-jsproxy&#39;</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="p">)</span>

  <span class="c1">// 此处逻辑和 http-dec-req-hdr.lua 大致相同
</span><span class="c1"></span>  <span class="c1">// https://github.com/EtherDream/jsproxy/blob/master/lua/http-dec-req-hdr.lua
</span><span class="c1"></span>  <span class="kr">const</span> <span class="nx">refer</span> <span class="o">=</span> <span class="nx">reqHdrNew</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;referer&#39;</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">query</span> <span class="o">=</span> <span class="nx">refer</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">refer</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;?&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">query</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;missing params&#39;</span><span class="p">,</span> <span class="mi">403</span><span class="p">)</span>
  <span class="p">}</span>
  <span class="kr">const</span> <span class="nx">param</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">URLSearchParams</span><span class="p">(</span><span class="nx">query</span><span class="p">)</span>

  <span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="p">[</span><span class="nx">k</span><span class="p">,</span> <span class="nx">v</span><span class="p">]</span> <span class="k">of</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">entries</span><span class="p">(</span><span class="nx">param</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span> <span class="o">===</span> <span class="s1">&#39;--&#39;</span><span class="p">)</span> <span class="p">{</span>
      <span class="c1">// 系统信息
</span><span class="c1"></span>      <span class="k">switch</span> <span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">))</span> <span class="p">{</span>
      <span class="k">case</span> <span class="s1">&#39;aceh&#39;</span><span class="o">:</span>
        <span class="nx">acehOld</span> <span class="o">=</span> <span class="kc">true</span>
        <span class="k">break</span>
      <span class="k">case</span> <span class="s1">&#39;raw-info&#39;</span><span class="o">:</span>
        <span class="p">[</span><span class="nx">rawSvr</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="nx">rawEtag</span><span class="p">]</span> <span class="o">=</span> <span class="nx">v</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;|&#39;</span><span class="p">)</span>
        <span class="k">break</span>
      <span class="p">}</span>
    <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
      <span class="c1">// 还原 HTTP 请求头
</span><span class="c1"></span>      <span class="k">if</span> <span class="p">(</span><span class="nx">v</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">reqHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
        <span class="nx">reqHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">param</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="s1">&#39;referer&#39;</span><span class="p">))</span> <span class="p">{</span>
    <span class="nx">reqHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;referer&#39;</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="c1">// cfworker 会把路径中的 `//` 合并成 `/`
</span><span class="c1"></span>  <span class="kr">const</span> <span class="nx">urlStr</span> <span class="o">=</span> <span class="nx">pathname</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^(https?):\/+/</span><span class="p">,</span> <span class="s1">&#39;$1://&#39;</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">urlObj</span> <span class="o">=</span> <span class="nx">newUrl</span><span class="p">(</span><span class="nx">urlStr</span><span class="p">)</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">urlObj</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="s1">&#39;invalid proxy url: &#39;</span> <span class="o">+</span> <span class="nx">urlStr</span><span class="p">,</span> <span class="mi">403</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="cm">/** @type {RequestInit} */</span>
  <span class="kr">const</span> <span class="nx">reqInit</span> <span class="o">=</span> <span class="p">{</span>
    <span class="nx">method</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">method</span><span class="p">,</span>
    <span class="nx">headers</span><span class="o">:</span> <span class="nx">reqHdrNew</span><span class="p">,</span>
    <span class="nx">redirect</span><span class="o">:</span> <span class="s1">&#39;manual&#39;</span><span class="p">,</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">method</span> <span class="o">===</span> <span class="s1">&#39;POST&#39;</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">reqInit</span><span class="p">.</span><span class="nx">body</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">proxy</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">,</span> <span class="nx">acehOld</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * 
</span><span class="cm"> * @param {URL} urlObj 
</span><span class="cm"> * @param {RequestInit} reqInit 
</span><span class="cm"> * @param {number} retryTimes 
</span><span class="cm"> */</span>
<span class="nx">async</span> <span class="kd">function</span> <span class="nx">proxy</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">,</span> <span class="nx">acehOld</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="nx">retryTimes</span><span class="p">)</span> <span class="p">{</span>
  <span class="kr">const</span> <span class="nx">res</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">fetch</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">)</span>
  <span class="kr">const</span> <span class="nx">resHdrOld</span> <span class="o">=</span> <span class="nx">res</span><span class="p">.</span><span class="nx">headers</span>
  <span class="kr">const</span> <span class="nx">resHdrNew</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Headers</span><span class="p">(</span><span class="nx">resHdrOld</span><span class="p">)</span>

  <span class="kd">let</span> <span class="nx">expose</span> <span class="o">=</span> <span class="s1">&#39;*&#39;</span>
  
  <span class="k">for</span> <span class="p">(</span><span class="kr">const</span> <span class="p">[</span><span class="nx">k</span><span class="p">,</span> <span class="nx">v</span><span class="p">]</span> <span class="k">of</span> <span class="nx">resHdrOld</span><span class="p">.</span><span class="nx">entries</span><span class="p">())</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;access-control-allow-origin&#39;</span> <span class="o">||</span>
        <span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;access-control-expose-headers&#39;</span> <span class="o">||</span>
        <span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;location&#39;</span> <span class="o">||</span>
        <span class="nx">k</span> <span class="o">===</span> <span class="s1">&#39;set-cookie&#39;</span>
    <span class="p">)</span> <span class="p">{</span>
      <span class="kr">const</span> <span class="nx">x</span> <span class="o">=</span> <span class="s1">&#39;--&#39;</span> <span class="o">+</span> <span class="nx">k</span>
      <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span> <span class="nx">v</span><span class="p">)</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">acehOld</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">expose</span> <span class="o">=</span> <span class="nx">expose</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span> <span class="o">+</span> <span class="nx">x</span>
      <span class="p">}</span>
      <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">acehOld</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;cache-control&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;content-language&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;content-type&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;expires&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;last-modified&#39;</span> <span class="o">&amp;&amp;</span>
      <span class="nx">k</span> <span class="o">!==</span> <span class="s1">&#39;pragma&#39;</span>
    <span class="p">)</span> <span class="p">{</span>
      <span class="nx">expose</span> <span class="o">=</span> <span class="nx">expose</span> <span class="o">+</span> <span class="s1">&#39;,&#39;</span> <span class="o">+</span> <span class="nx">k</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">acehOld</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">expose</span> <span class="o">=</span> <span class="nx">expose</span> <span class="o">+</span> <span class="s1">&#39;,--s&#39;</span>
    <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--t&#39;</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="p">)</span>
  <span class="p">}</span>

  <span class="c1">// verify
</span><span class="c1"></span>  <span class="k">if</span> <span class="p">(</span><span class="nx">rawLen</span><span class="p">)</span> <span class="p">{</span>
    <span class="kr">const</span> <span class="nx">newLen</span> <span class="o">=</span> <span class="nx">resHdrOld</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;content-length&#39;</span><span class="p">)</span> <span class="o">||</span> <span class="s1">&#39;&#39;</span>
    <span class="kr">const</span> <span class="nx">badLen</span> <span class="o">=</span> <span class="p">(</span><span class="nx">rawLen</span> <span class="o">!==</span> <span class="nx">newLen</span><span class="p">)</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">badLen</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">if</span> <span class="p">(</span><span class="nx">retryTimes</span> <span class="o">&lt;</span> <span class="nx">MAX_RETRY</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">urlObj</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">parseYtVideoRedir</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">newLen</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span>
        <span class="k">if</span> <span class="p">(</span><span class="nx">urlObj</span><span class="p">)</span> <span class="p">{</span>
          <span class="k">return</span> <span class="nx">proxy</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">reqInit</span><span class="p">,</span> <span class="nx">acehOld</span><span class="p">,</span> <span class="nx">rawLen</span><span class="p">,</span> <span class="nx">retryTimes</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span>
        <span class="p">}</span>
      <span class="p">}</span>
      <span class="k">return</span> <span class="nx">makeRes</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="mi">400</span><span class="p">,</span> <span class="p">{</span>
        <span class="s1">&#39;--error&#39;</span><span class="o">:</span> <span class="sb">`bad len: </span><span class="si">${</span><span class="nx">newLen</span><span class="si">}</span><span class="sb">, except: </span><span class="si">${</span><span class="nx">rawLen</span><span class="si">}</span><span class="sb">`</span><span class="p">,</span>
        <span class="s1">&#39;access-control-expose-headers&#39;</span><span class="o">:</span> <span class="s1">&#39;--error&#39;</span><span class="p">,</span>
      <span class="p">})</span>
    <span class="p">}</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">retryTimes</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--retry&#39;</span><span class="p">,</span> <span class="nx">retryTimes</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="p">}</span>

  <span class="kd">let</span> <span class="nx">status</span> <span class="o">=</span> <span class="nx">res</span><span class="p">.</span><span class="nx">status</span>

  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;access-control-expose-headers&#39;</span><span class="p">,</span> <span class="nx">expose</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;access-control-allow-origin&#39;</span><span class="p">,</span> <span class="s1">&#39;*&#39;</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--s&#39;</span><span class="p">,</span> <span class="nx">status</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;--ver&#39;</span><span class="p">,</span> <span class="nx">JS_VER</span><span class="p">)</span>

  <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;content-security-policy&#39;</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;content-security-policy-report-only&#39;</span><span class="p">)</span>
  <span class="nx">resHdrNew</span><span class="p">.</span><span class="k">delete</span><span class="p">(</span><span class="s1">&#39;clear-site-data&#39;</span><span class="p">)</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">status</span> <span class="o">===</span> <span class="mi">301</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">302</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">303</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">307</span> <span class="o">||</span>
      <span class="nx">status</span> <span class="o">===</span> <span class="mi">308</span>
  <span class="p">)</span> <span class="p">{</span>
    <span class="nx">status</span> <span class="o">=</span> <span class="nx">status</span> <span class="o">+</span> <span class="mi">10</span>
  <span class="p">}</span>

  <span class="k">return</span> <span class="k">new</span> <span class="nx">Response</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="p">{</span>
    <span class="nx">status</span><span class="p">,</span>
    <span class="nx">headers</span><span class="o">:</span> <span class="nx">resHdrNew</span><span class="p">,</span>
  <span class="p">})</span>
<span class="p">}</span>


<span class="cm">/**
</span><span class="cm"> * @param {URL} urlObj 
</span><span class="cm"> */</span>
<span class="kd">function</span> <span class="nx">isYtUrl</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="nx">urlObj</span><span class="p">.</span><span class="nx">host</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="s1">&#39;.googlevideo.com&#39;</span><span class="p">)</span> <span class="o">&amp;&amp;</span>
    <span class="nx">urlObj</span><span class="p">.</span><span class="nx">pathname</span><span class="p">.</span><span class="nx">startsWith</span><span class="p">(</span><span class="s1">&#39;/videoplayback&#39;</span><span class="p">)</span>
  <span class="p">)</span>
<span class="p">}</span>

<span class="cm">/**
</span><span class="cm"> * @param {URL} urlObj 
</span><span class="cm"> * @param {number} newLen 
</span><span class="cm"> * @param {Response} res 
</span><span class="cm"> */</span>
<span class="nx">async</span> <span class="kd">function</span> <span class="nx">parseYtVideoRedir</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">,</span> <span class="nx">newLen</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">if</span> <span class="p">(</span><span class="nx">newLen</span> <span class="o">&gt;</span> <span class="mi">2000</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isYtUrl</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">try</span> <span class="p">{</span>
    <span class="kr">const</span> <span class="nx">data</span> <span class="o">=</span> <span class="nx">await</span> <span class="nx">res</span><span class="p">.</span><span class="nx">text</span><span class="p">()</span>
    <span class="nx">urlObj</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">URL</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">isYtUrl</span><span class="p">(</span><span class="nx">urlObj</span><span class="p">))</span> <span class="p">{</span>
    <span class="k">return</span> <span class="kc">null</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="nx">urlObj</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>看这：<a href="https://proxy.raycoder.me/">Demo传送门</a></p>
<hr>
<p>2020/04/06更新：</p>
<p>更正，10万请求。</p>
]]></content><category scheme="https://raycoder.me/categories/%E4%BB%A3%E7%90%86/" term="代理" label="代理"/><category scheme="https://raycoder.me/tags/%E4%BB%A3%E7%90%86/" term="代理" label="代理"/><category scheme="https://raycoder.me/tags/cloudflare/" term="Cloudflare" label="Cloudflare"/><category scheme="https://raycoder.me/tags/cdn/" term="CDN" label="CDN"/></entry><entry><title type="text">Python中的with关键字使用方法？</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/python-with/"/><id>https://raycoder.me/p/python-with/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-04-01T10:03:10+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Python中的with关键字</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
<p><strong>本文首发于<a href="https://raycoder.me/p/python-with/">Ray's Blog</a></strong></p>
</blockquote>
<p>Python中有一种操作叫做<code>打开文件</code>，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;/foo/bar.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">data</span>
<span class="s1">&#39;Hello World!&#39;</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，你就从<code>/foo/bar.txt</code>这个文本文件中读取到了它的文本：<code>Hello World!</code></p>
<p>但是，这样处理有一些问题：</p>
<ol>
<li>可能在处理完文本后忘记关闭文件？</li>
<li>可能在读取时出现错误？</li>
</ol>
<p>这时，<code>try...except...finally...</code>语句就派上了用场：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">try</span><span class="p">:</span>
    <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;/foo/bar.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span>
<span class="k">except</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;Fail to open /foo/bar.txt&#39;</span><span class="p">)</span>
    <span class="nb">exit</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="k">finally</span><span class="p">:</span>
    <span class="n">f</span><span class="o">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><p>虽然这段代码运行良好，但是太冗长了。</p>
<p>这时，<code>with</code>语句（上下文管理器器，添加于Python2.5，在2.5时是试验性的，需要<code>from __future__ import with_statement</code>。在2.5之前的版本无法使用。）就可以大显身手：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;/foo/bar.txt&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
    <span class="n">data</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><p>这里没有错误处理器，没有<code>f = open('/foo/bar.txt', 'r')</code>，也没有读取完文件后的<code>f.close()</code>。这段代码与<code>try...except...finally...</code>实现了相同的功能，但是代码却相应的短了许多。</p>
<p>除了读取文件，许多标准模块也含有上下文管理器，这意味着它们也可以使用<code>with</code>语句（以<code>threading</code>模块为例）：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>

<span class="kn">from</span> <span class="nn">atexit</span> <span class="kn">import</span> <span class="n">register</span>
<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randrange</span>
<span class="kn">from</span> <span class="nn">threading</span> <span class="kn">import</span> <span class="n">Thread</span><span class="p">,</span> <span class="n">Lock</span><span class="p">,</span> <span class="n">currentThread</span>
<span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span><span class="p">,</span> <span class="n">ctime</span>

<span class="k">class</span> <span class="nc">CleanOutputSet</span><span class="p">(</span><span class="nb">set</span><span class="p">):</span>
    <span class="k">def</span> <span class="fm">__str__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s1">&#39;, &#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">)</span>

<span class="n">lock</span> <span class="o">=</span> <span class="n">Lock</span><span class="p">()</span>
<span class="n">loops</span> <span class="o">=</span> <span class="p">(</span><span class="n">randrange</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">randrange</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">7</span><span class="p">)))</span>
<span class="n">remaining</span> <span class="o">=</span> <span class="n">CleanOutputSet</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">loop</span><span class="p">(</span><span class="n">nsec</span><span class="p">):</span>
    <span class="n">myname</span> <span class="o">=</span> <span class="n">currentThread</span><span class="p">()</span><span class="o">.</span><span class="n">name</span>
    <span class="k">with</span> <span class="n">lock</span><span class="p">:</span>
    	<span class="n">remaining</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">myname</span><span class="p">)</span>
    	<span class="k">print</span><span class="p">(</span><span class="s1">&#39;[{0}] Started {1}&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">ctime</span><span class="p">(),</span> <span class="n">myname</span><span class="p">))</span>
    <span class="n">sleep</span><span class="p">(</span><span class="n">nsec</span><span class="p">)</span>
    <span class="k">with</span> <span class="n">lock</span><span class="p">:</span>
    	<span class="n">remaining</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">myname</span><span class="p">)</span>
    	<span class="k">print</span><span class="p">(</span><span class="s1">&#39;[{0}] Completed {1} ({2} secs)&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">ctime</span><span class="p">(),</span> <span class="n">myname</span><span class="p">,</span> <span class="n">nsec</span><span class="p">))</span>
    	<span class="k">print</span><span class="p">(</span><span class="s1">&#39;    (remaining: {0})&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">remaining</span> <span class="ow">or</span> <span class="s1">&#39;NONE&#39;</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">_main</span><span class="p">():</span>
    <span class="k">for</span> <span class="n">pause</span> <span class="ow">in</span> <span class="n">loops</span><span class="p">:</span>
        <span class="n">Thread</span><span class="p">(</span><span class="n">target</span><span class="o">=</span><span class="n">loop</span><span class="p">,</span> <span class="n">args</span><span class="o">=</span><span class="p">(</span><span class="n">pause</span><span class="p">,))</span><span class="o">.</span><span class="n">start</span><span class="p">()</span>

<span class="nd">@register</span>
<span class="k">def</span> <span class="nf">_atexit</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;all DONE at:&#39;</span><span class="p">,</span> <span class="n">ctime</span><span class="p">())</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">_main</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><p>这个例子派生了随机个的线程，使用<code>with</code>语句实现锁的锁定与释放。</p>
<p>那么，上下文管理器是怎么实现的呢？它通过类里面的特殊方法——<code>__enter__</code>和<code>__exit__</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">MyClass</span><span class="p">():</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">name</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="o">=</span><span class="n">name</span>
    <span class="k">def</span> <span class="fm">__enter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&#34;到达__enter__&#34;</span><span class="p">)</span>
        <span class="k">return</span> <span class="bp">self</span>
    <span class="k">def</span> <span class="nf">printName</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>
    <span class="k">def</span> <span class="fm">__exit__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">type</span><span class="p">,</span> <span class="n">value</span><span class="p">,</span> <span class="n">traceback</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&#34;到达__exit__&#34;</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="nb">type</span><span class="p">,</span> <span class="n">value</span><span class="p">)</span>
<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="k">with</span> <span class="n">MyClass</span><span class="p">(</span><span class="s1">&#39;foo-bar&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">test</span><span class="p">:</span>
        <span class="n">test</span><span class="o">.</span><span class="n">printName</span><span class="p">()</span>

<span class="o">======================</span> <span class="n">RESTART</span><span class="p">:</span> <span class="n">test</span><span class="o">.</span><span class="n">py</span> <span class="o">======================</span>
<span class="err">到达</span><span class="fm">__enter__</span>
<span class="n">The</span> <span class="n">name</span> <span class="ow">is</span><span class="p">:</span>  <span class="n">foo</span><span class="o">-</span><span class="n">bar</span>
<span class="err">到达</span><span class="fm">__exit__</span>
<span class="o">&gt;&gt;&gt;</span> 
</code></pre></td></tr></table>
</div>
</div>]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/python%E5%85%B3%E9%94%AE%E5%AD%97/" term="Python关键字" label="Python关键字"/><category scheme="https://raycoder.me/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/><category scheme="https://raycoder.me/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/" term="多线程" label="多线程"/></entry><entry><title type="text">【刻在基因里的序列号变了？】Bilibili采用新的稿件编号！AV与BV互相转化的方法！</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/av-and-bv/"/><id>https://raycoder.me/p/av-and-bv/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-31T15:57:37+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">【刻在基因里的序列号变了？】Bilibili采用新的稿件编号！AV与BV互相转化</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
<p><strong>本文首发于<a href="https://raycoder.me/p/av-and-bv/">Ray's Blog</a></strong></p>
</blockquote>
<p>最近B站把AV号改成了BV号！<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>以后B站没有AV了！[手动狗头]</p>
<p>更改以前的AV号简单好记，都是<code>AV170001</code>一类——根据发布顺序依次往下计数。</p>
<p>更改以后的BV号完全颠覆，形如<code>BV17x411w7KC</code>，区分大小写——转换成的AV号是完全随机的。</p>
<p>说实话，个人认为这个改变是为了防止一些恶意爬虫。</p>
<p>虽然B站官方也有提到，以后仍然可以使用AV号来观看视频<heimu>，不过，刻在基因里的AV号变了，老青结工了</heimu>，但是这两个序列号如何互相转化呢？</p>
<p>当然，AV/BV同时工作就说明：B站有一个接口！</p>
<p>BVID接口：<code>https://api.bilibili.com/x/web-interface/view?bvid=&lt;BVID&gt;</code></p>
<p>AID接口：<code>https://api.bilibili.com/x/web-interface/view?Aid=&lt;AID&gt;</code></p>
<p>知乎上<a href="https://www.zhihu.com/people/-._.-">@mcfx</a>大佬已经给出了回答：<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></p>
<p>他写了一些代码，我们来分析一下。（一些修改）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">table</span> <span class="o">=</span> <span class="s1">&#39;fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF&#39;</span> <span class="c1"># base58的字符对应表——从0~57，没有大写O，数字0，小写的L和大写的i，非标准。</span>
<span class="n">tr</span> <span class="o">=</span> <span class="nb">dict</span><span class="p">(</span><span class="nb">zip</span><span class="p">(</span><span class="n">table</span><span class="p">,</span> <span class="nb">range</span><span class="p">(</span><span class="mi">58</span><span class="p">)))</span> <span class="c1"># 建立对应字典，形如{&#39;f&#39;: 0, &#39;Z&#39;: 1...}</span>
<span class="n">s</span> <span class="o">=</span> <span class="p">[</span><span class="mi">11</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>
<span class="n">xor</span> <span class="o">=</span> <span class="mi">177451812</span>
<span class="n">add</span> <span class="o">=</span> <span class="mi">8728348608</span>

<span class="k">def</span> <span class="nf">bv2av</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">r</span><span class="o">=</span><span class="mi">0</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="o">+=</span><span class="n">tr</span><span class="p">[</span><span class="n">x</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]]</span><span class="o">*</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span>
	<span class="k">return</span> <span class="p">(</span><span class="n">r</span><span class="o">-</span><span class="n">add</span><span class="p">)</span><span class="o">^</span><span class="n">xor</span>

<span class="k">def</span> <span class="nf">av2bv</span><span class="p">(</span><span class="n">x</span><span class="p">):</span>
	<span class="n">x</span><span class="o">=</span><span class="p">(</span><span class="n">x</span><span class="o">^</span><span class="n">xor</span><span class="p">)</span><span class="o">+</span><span class="n">add</span>
	<span class="n">r</span><span class="o">=</span><span class="nb">list</span><span class="p">(</span><span class="s1">&#39;BV1  4 1 7  &#39;</span><span class="p">)</span>
	<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
		<span class="n">r</span><span class="p">[</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">=</span><span class="n">table</span><span class="p">[</span><span class="n">x</span><span class="o">//</span><span class="mi">58</span><span class="o">**</span><span class="n">i</span><span class="o">%</span><span class="mi">58</span><span class="p">]</span>
	<span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">r</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>主要修改：</strong></p>
<p><strong>1.使用zip()函数，优化了运行效率；</strong></p>
<p>等待补充</p>
<hr>
<p>如果算法没猜错，可以保证在 av 号 $&lt; 2^{27}$ 时正确，同时应该在 $&lt; 2^{30}$ 时也是正确的。此代码以 WTFPL 开源。</p>
<p>UPD：之前的代码中，所有数位都被用到是乱凑的，实际上并不需要，目前只要低 6 位就足够了。（更大的 av 号需要 64 位整数存储，但是 b 站现在使用的应该还是 32 位整数，所以应该还要很久）</p>
<p>发现的方法：</p>
<p>首先从各种渠道的信息来看，应该是 base58 编码的。设 x 是一个钦定的 av 号，查询 $\ 58k+x,58^2k+x,58^3k+x,58^4k+x\left(k \in Z\right)$ 这些 av 号对应的 bv 号，发现 bv 号的第 12、11、4、9、5 位分别会变化。所以猜测这些是 58 进制下的相应位。</p>
<p>但是直接 base58 是不行的，所以猜测异或了一个大数，并且 base58 的字符表可能打乱了。经过实验，bv 号最低位相同的数，av 号的奇偶性相同，这一定程度上印证了之前的猜想。</p>
<p>接下来找了一些 av 号 x，满足 x 和 x+1 对应 bv 号的第 11 位不同。设异或的数为 X，那么 $\ \left\lfloor\frac{X\oplus x}{58}\right\rfloor\neq \left\lfloor\frac{X\oplus (x+1)}{58}\right\rfloor$ （ $\ \oplus$  表示异或）。</p>
<p>由于 av 号（除了最新的少量视频）最多只有 27 bits，所以可以设 $\ X=2^{27}a+b(0\le b&lt;2^{27})$ 。然后可以发现 $\ X$ 只和 $\ 2^{27}a\bmod 58$ 和 $\ b$ 有关，那么可以枚举这两个值（一共 $\ 2^{27}\cdot 58=7784628224$ 种情况）然后使用上面的式子检查，就能得到若干可能的 $\ 2^{27}a\bmod 58$ 和 $\ b$ 。</p>
<p>这里我得到的可能值如下：（左边是 $\ 2^{27}a\bmod 58$ ，右边是 $\ b$ ）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-text" data-lang="text">22 90983642
22 90983643
50 43234084
50 43234085
</code></pre></td></tr></table>
</div>
</div><p>有奇有偶是因为异或 1 之后也能找到轮换表。而 $\ 90983642+43234085=2^{27}-1$ 则使得模 58 的余数刚好变成$\ 2^{27}-1$减它。</p>
<p>我取了 b=43234084，然后处理最低位，可以得到一个字符表，即 fZodR9XQDSUm21yCkr6zBqiveYah8bt4xsWpHnJE7jL5VG3guMTKNPAwcF。</p>
<p>对于更高位，实际上还需要知道 $\ 2^{27}a\bmod 58^2,2^{27}a\bmod 58^3,\dots$ ，这些值也可以 枚举 58 次得到，最后我得到的值是 $\ 2^{27}a\bmod 58^4=1749968$ 。</p>
<p>这时我发现，每一位的字符表是相同的（实际上只对 b=43234084 是这样的），然后再微调一下参数（上面代码中的两个 magic number 就相当于这里的 $\ a,b$ ），最后处理了一下 $\ \ge 2^{27}$ 的情况就得到了这份代码。</p>
<p>（转自知乎<a href="https://www.zhihu.com/people/-._.-">@mcfx</a>大佬给出的回答）</p>
<p>根据倍步长跳的实验显示：其变动的优先级为：</p>
<p>后两位＞第4位（每4096一变，但是由于58×58＜4096，肯定又要借用其他位的变化）＞第9位（每131072一变，相当于第4位每变32次第9位才会变）＞第5位（每2097152一变）。</p>
<p>这也能解释为什么第5位排布不均匀——没排完啊！</p>
<p>修改版Base58表：</p>
<table>
<thead>
<tr>
<th align="center">0</th>
<th align="center">1</th>
<th align="center">2</th>
<th align="center">3</th>
<th align="center">4</th>
<th align="center">5</th>
<th align="center">6</th>
<th align="center">7</th>
<th align="center">8</th>
<th align="center">9</th>
<th align="center">10</th>
<th align="center">11</th>
<th align="center">12</th>
<th align="center">13</th>
<th align="center">14</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">f</td>
<td align="center">Z</td>
<td align="center">o</td>
<td align="center">d</td>
<td align="center">R</td>
<td align="center">9</td>
<td align="center">X</td>
<td align="center">Q</td>
<td align="center">D</td>
<td align="center">S</td>
<td align="center">U</td>
<td align="center">m</td>
<td align="center">2</td>
<td align="center">1</td>
<td align="center">y</td>
</tr>
<tr>
<td align="center">15</td>
<td align="center">16</td>
<td align="center">17</td>
<td align="center">18</td>
<td align="center">19</td>
<td align="center">20</td>
<td align="center">21</td>
<td align="center">22</td>
<td align="center">23</td>
<td align="center">24</td>
<td align="center">25</td>
<td align="center">26</td>
<td align="center">27</td>
<td align="center">28</td>
<td align="center">29</td>
</tr>
<tr>
<td align="center">C</td>
<td align="center">k</td>
<td align="center">r</td>
<td align="center">6</td>
<td align="center">z</td>
<td align="center">B</td>
<td align="center">q</td>
<td align="center">i</td>
<td align="center">v</td>
<td align="center">e</td>
<td align="center">Y</td>
<td align="center">a</td>
<td align="center">h</td>
<td align="center">8</td>
<td align="center">b</td>
</tr>
<tr>
<td align="center">30</td>
<td align="center">31</td>
<td align="center">32</td>
<td align="center">33</td>
<td align="center">34</td>
<td align="center">35</td>
<td align="center">36</td>
<td align="center">37</td>
<td align="center">38</td>
<td align="center">39</td>
<td align="center">40</td>
<td align="center">41</td>
<td align="center">42</td>
<td align="center">43</td>
<td align="center">44</td>
</tr>
<tr>
<td align="center">t</td>
<td align="center">4</td>
<td align="center">x</td>
<td align="center">s</td>
<td align="center">W</td>
<td align="center">p</td>
<td align="center">H</td>
<td align="center">n</td>
<td align="center">J</td>
<td align="center">E</td>
<td align="center">7</td>
<td align="center">j</td>
<td align="center">L</td>
<td align="center">5</td>
<td align="center">V</td>
</tr>
<tr>
<td align="center">45</td>
<td align="center">46</td>
<td align="center">47</td>
<td align="center">48</td>
<td align="center">49</td>
<td align="center">50</td>
<td align="center">51</td>
<td align="center">52</td>
<td align="center">53</td>
<td align="center">54</td>
<td align="center">55</td>
<td align="center">56</td>
<td align="center">57</td>
<td align="center"></td>
<td align="center"></td>
</tr>
<tr>
<td align="center">G</td>
<td align="center">3</td>
<td align="center">g</td>
<td align="center">u</td>
<td align="center">M</td>
<td align="center">T</td>
<td align="center">K</td>
<td align="center">N</td>
<td align="center">P</td>
<td align="center">A</td>
<td align="center">w</td>
<td align="center">c</td>
<td align="center">F</td>
<td align="center"></td>
<td align="center"></td>
</tr>
</tbody>
</table>
<p>事实上，如果不采用后端，直接浏览器控制台输入<code>aid</code>，<code>bvid</code>也是可以的：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200331165001.png" alt=""></p>
<p>附转换器：</p>
<iframe src="/tools/bv2av/index.html" width="100%" height="400" scrolling="0" frameborder="0"><br></iframe>
<p>顺便放上视频。</p>
<div id="player"></div>
<script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script>
<script type="text/javascript">
var player = new DogePlayer({
    container: document.getElementById('player'),
    userId: 1136,
    vcode: '5ab2d61eea8e1aec',
    autoPlay: false
});
</script>
<p><br /></p>
<div id="player2"></div>
<script type="text/javascript">
var player = new DogePlayer({
    container: document.getElementById('player2'),
    userId: 1136,
    vcode: 'd490fb66ed51f07c',
    autoPlay: false
});
</script>
<hr>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><a href="https://www.bilibili.com/read/cv5167957">【升级公告】AV号全面升级至BV号 | Bilibili</a> <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p><a href="https://www.zhihu.com/question/381784377/answer/1099438784">如何看待 2020 年 3 月 23 日哔哩哔哩将稿件的「av 号」变更为「BV 号」？ | 知乎</a> <a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>]]></content><category scheme="https://raycoder.me/categories/%E7%AE%97%E6%B3%95/" term="算法" label="算法"/><category scheme="https://raycoder.me/tags/%E7%AE%97%E6%B3%95/" term="算法" label="算法"/><category scheme="https://raycoder.me/tags/bilibili/" term="Bilibili" label="Bilibili"/></entry><entry><title type="text">旁门左道之使用Leancloud搭建网站！</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/build-website-with-leancloud/"/><id>https://raycoder.me/p/build-website-with-leancloud/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-31T13:10:36+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">旁门左道之使用Leancloud搭建网站</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
<p><strong>本文首发于<a href="https://raycoder.me/p/build-website-with-leancloud/">Ray's Blog</a></strong></p>
</blockquote>
<p>Leancloud也可以搭建网站？</p>
<p>是的！<a href="https://leancloud.app">Leancloud</a>，就是那个我们熟知的<code>Valine</code>数据存储，可以搭建网站！有使用<code>Valine Admin</code>的同学可能也会发现，部署的Admin实际上也是一个<em class="emphasis-point">使用JS生成的页面</em>。那么很多人可能就会想要使用Leancloud去搭建网站——怎么实现呢？（我刚刚放的链接是国际版的Leancloud，国内版的<a href="https://leancloud.cn">戳这</a>，需要实名认证。推荐国际版。）</p>
<p>事实上，你只需要推送一个网页到一个Git仓库（GitHub、Gitee、Coding等皆可），然后使用<code>Leancloud云引擎</code>功能部署网页。<red>注意！我没有说是静态网页！Leancloud支持<code>PHP</code>！</red>也就是说，你可以把Leancloud当作一个免费的空间来搭建你的博客——当然，稳定性不敢保证，Leancloud开发版每天会强制休眠6小时。</p>
<p>首先先创建一个应用，选择开发版~自己整罢！</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200331135141.png" alt=""></p>
<p>然后选择<code>&lt;你创建的应用&gt;--&gt;云引擎--&gt;设置</code>，在<code>源码部署--&gt;代码库</code>里填写你的Git仓库。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200331134820.png" alt=""></p>
<p>当然，不要忘记填写Web主机域名——这个是我们之后预览网页用的！</p>
<p>然后选择<code>部署</code>，再点击<code>Git源码部署</code>！（假如你有能力，也可以选择命令行部署，使用Webhook自动部署）</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200331135315.png" alt=""></p>
<p>然后，打开你填写的Web主机域名，享用吧！</p>]]></content><category scheme="https://raycoder.me/categories/%E5%85%8D%E8%B4%B9%E7%A9%BA%E9%97%B4/" term="免费空间" label="免费空间"/><category scheme="https://raycoder.me/tags/%E5%85%8D%E8%B4%B9%E7%A9%BA%E9%97%B4/" term="免费空间" label="免费空间"/><category scheme="https://raycoder.me/tags/%E7%BD%91%E7%AB%99/" term="网站" label="网站"/></entry><entry><title type="text">Python中的yield关键字分析：一个Generator</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/python-yield/"/><id>https://raycoder.me/p/python-yield/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-27T13:18:41+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Python中的Yield关键字分析：一个Generator</summary><content type="html"><![CDATA[<blockquote>
<p><strong>写作不易，资瓷一下呗！个人博客：<a href="https://raycoder.me">https://raycoder.me</a></strong></p>
<p><strong>本文首发于<a href="https://raycoder.me/p/python-yield/">Ray's Blog</a></strong></p>
</blockquote>
<p>我们先来康一段代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
		<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
			<span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">count</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="mi">1</span>
<span class="mi">2</span>
<span class="mi">3</span>
<span class="mi">4</span>
<span class="mi">5</span>
</code></pre></td></tr></table>
</div>
</div><p>这一小段代码执行了计数，输出了1-5。</p>
<p>不过，有时我们会有一些想♂FA，想要每次获取下一个数，如第一次执行时给你返回1，第二次返回2，第三次返回3……如此如此。</p>
<p>你可能会这么做：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">addone</span><span class="p">():</span>
		<span class="k">global</span> <span class="n">n</span>
		<span class="n">n</span><span class="o">+=</span><span class="mi">1</span>
		<span class="k">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">addone</span><span class="p">()</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">n</span>
<span class="mi">1</span>
</code></pre></td></tr></table>
</div>
</div><p>但这样又暴露了一个缺点：<em class="emphasis-point">我们使用了一个全局变量</em>。想要避免这种缺点又要实现计数的功能，<code>yield</code>就派上用场了。</p>
<p>想要实现<code>Generator</code>的功能，只需要对代码进行一处改动：把<code>print()</code>改成<code>yield</code>即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">n</span> <span class="o">=</span> <span class="mi">0</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">count</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
		<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
			<span class="k">yield</span> <span class="n">i</span>

<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="n">count</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">c</span>
<span class="o">&lt;</span><span class="n">generator</span> <span class="nb">object</span> <span class="n">addone</span> <span class="n">at</span> <span class="mh">0x000002329F851048</span><span class="o">&gt;</span>
<span class="o">&gt;&gt;&gt;</span> 
</code></pre></td></tr></table>
</div>
</div><p>你会发现，这个<code>c</code>的类型像是一个对象了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">c</span> <span class="o">=</span> <span class="n">count</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="mi">1</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="mi">3</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="mi">4</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="mi">5</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">next</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;pyshell#18&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
    <span class="nb">next</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="ne">StopIteration</span>
<span class="o">&gt;&gt;&gt;</span> 
</code></pre></td></tr></table>
</div>
</div><p>我们使用了<code>next()</code>内置函数让<code>Generator</code>进行下一次迭代。由此可见，<em class="emphasis-point">yield像是一个类似于return的迭代器</em>。</p>
<p>再来一个示例，生成斐波那契数列：</p>
<h5 id="1-简单输出斐波那契數列前-n-个数">1. 简单输出斐波那契數列前 N 个数</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">fab</span><span class="p">(</span><span class="nb">max</span><span class="p">):</span> 
   <span class="n">n</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> 
   <span class="k">while</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="nb">max</span><span class="p">:</span> 
       <span class="k">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
       <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> 
       <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="mi">1</span>
</code></pre></td></tr></table>
</div>
</div><p>执行 fab(5)，我们可以得到如下输出：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">fab</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="mi">1</span>
<span class="mi">1</span>
<span class="mi">2</span>
<span class="mi">3</span>
<span class="mi">5</span>
</code></pre></td></tr></table>
</div>
</div><p>结果没有问题，但有经验的开发者会指出，直接在 fab 函数中用 print 打印数字会导致该函数可复用性较差，因为 fab 函数返回 None，其他函数无法获得该函数生成的数列。</p>
<p>要提高 fab 函数的可复用性，最好不要直接打印出数列，而是返回一个 List。以下是 fab 函数改写后的第二个版本：</p>
<h5 id="2-输出斐波那契數列前-n-个数第二版">2. 输出斐波那契數列前 N 个数第二版</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">fab</span><span class="p">(</span><span class="nb">max</span><span class="p">):</span> 
   <span class="n">n</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> 
   <span class="n">L</span> <span class="o">=</span> <span class="p">[]</span> 
   <span class="k">while</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="nb">max</span><span class="p">:</span> 
       <span class="n">L</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">b</span><span class="p">)</span> 
       <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> 
       <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="mi">1</span> 
   <span class="k">return</span> <span class="n">L</span>
</code></pre></td></tr></table>
</div>
</div><p>可以使用如下方式打印出 fab 函数返回的 List：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">fab</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span> 
<span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="o">...</span> 
<span class="mi">1</span> 
<span class="mi">1</span> 
<span class="mi">2</span> 
<span class="mi">3</span> 
<span class="mi">5</span>
</code></pre></td></tr></table>
</div>
</div><p>改写后的 fab 函数通过返回 List 能满足复用性的要求，但是更有经验的开发者会指出，该函数在运行中占用的内存会随着参数 max 的增大而增大，如果要控制内存占用，最好不要用 List</p>
<p>来保存中间结果，而是通过 iterable 对象来迭代。例如，在 Python2.x 中，代码：</p>
<h5 id="清单-3-通过-iterable-对象来迭代">清单 3. 通过 iterable 对象来迭代</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="p">):</span> <span class="k">pass</span>
</code></pre></td></tr></table>
</div>
</div><p>会导致生成一个 1000 个元素的 List，而代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1000</span><span class="p">):</span> <span class="k">pass</span>
</code></pre></td></tr></table>
</div>
</div><p>则不会生成一个 1000 个元素的 List，而是在每次迭代中返回下一个数值，内存空间占用很小。因为 xrange 不返回 List，而是返回一个 iterable 对象。</p>
<p>利用 iterable 我们可以把 fab 函数改写为一个支持 iterable 的 class，以下是第三个版本的 Fab：</p>
<h5 id="清单-4-第三个版本">清单 4. 第三个版本</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">Fab</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span> 
 
   <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="nb">max</span><span class="p">):</span> 
       <span class="bp">self</span><span class="o">.</span><span class="n">max</span> <span class="o">=</span> <span class="nb">max</span> 
       <span class="bp">self</span><span class="o">.</span><span class="n">n</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">a</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">b</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> 
 
   <span class="k">def</span> <span class="fm">__iter__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> 
       <span class="k">return</span> <span class="bp">self</span> 
 
   <span class="k">def</span> <span class="nf">next</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> 
       <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">n</span> <span class="o">&lt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">max</span><span class="p">:</span> 
           <span class="n">r</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">b</span> 
           <span class="bp">self</span><span class="o">.</span><span class="n">a</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">b</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">b</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">a</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">b</span> 
           <span class="bp">self</span><span class="o">.</span><span class="n">n</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span> 
           <span class="k">return</span> <span class="n">r</span> 
       <span class="k">raise</span> <span class="ne">StopIteration</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><p>Fab 类通过 next() 不断返回数列的下一个数，内存占用始终为常数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">Fab</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span> 
<span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="o">...</span> 
<span class="mi">1</span> 
<span class="mi">1</span> 
<span class="mi">2</span> 
<span class="mi">3</span> 
<span class="mi">5</span>
</code></pre></td></tr></table>
</div>
</div><p>然而，使用 class 改写的这个版本，代码远远没有第一版的 fab 函数来得简洁。如果我们想要保持第一版 fab 函数的简洁性，同时又要获得 iterable 的效果，yield 就派上用场了：</p>
<h5 id="清单-5-使用-yield-的第四版">清单 5. 使用 yield 的第四版</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">fab</span><span class="p">(</span><span class="nb">max</span><span class="p">):</span> 
    <span class="n">n</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> 
    <span class="k">while</span> <span class="n">n</span> <span class="o">&lt;</span> <span class="nb">max</span><span class="p">:</span> 
        <span class="k">yield</span> <span class="n">b</span> 
        <span class="c1"># print(b)</span>
        <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> 
        <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="o">+</span> <span class="mi">1</span> 
</code></pre></td></tr></table>
</div>
</div><p>第四个版本的 fab 和第一版相比，仅仅把 print b 改为了 yield b，就在保持简洁性的同时获得了 iterable 的效果。</p>
<p>调用第四版的 fab 和第二版的 fab 完全一致：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="n">fab</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span> 
<span class="o">...</span>     <span class="k">print</span><span class="p">(</span><span class="n">n</span><span class="p">)</span>
<span class="o">...</span> 
<span class="mi">1</span> 
<span class="mi">1</span> 
<span class="mi">2</span> 
<span class="mi">3</span> 
<span class="mi">5</span>
</code></pre></td></tr></table>
</div>
</div><p>简单地讲，yield 的作用就是把一个函数变成一个 generator，带有 yield 的函数不再是一个普通函数，Python 解释器会将其视为一个 generator，调用 fab(5) 不会执行 fab 函数，而是返回一个 iterable 对象！在 for 循环执行时，每次循环都会执行 fab 函数内部的代码，执行到 yield b 时，fab 函数就返回一个迭代值，下次迭代时，代码从 yield b 的下一条语句继续执行，而函数的本地变量看起来和上次中断执行前是完全一样的，于是函数继续执行，直到再次遇到 yield。</p>
<p>也可以手动调用 fab(5) 的 next() 方法（因为 fab(5) 是一个 generator 对象，该对象具有 next() 方法），这样我们就可以更清楚地看到 fab 的执行流程：</p>
<h5 id="清单-6-执行流程">清单 6. 执行流程</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">f</span> <span class="o">=</span> <span class="n">fab</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">next</span><span class="p">()</span> 
<span class="mi">1</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">next</span><span class="p">()</span> 
<span class="mi">1</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">next</span><span class="p">()</span> 
<span class="mi">2</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">next</span><span class="p">()</span> 
<span class="mi">3</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">next</span><span class="p">()</span> 
<span class="mi">5</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f</span><span class="o">.</span><span class="n">next</span><span class="p">()</span> 
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span> 
 <span class="n">File</span> <span class="s2">&#34;&lt;stdin&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span> 
<span class="ne">StopIteration</span>
</code></pre></td></tr></table>
</div>
</div><p>当函数执行结束时，generator 自动抛出 StopIteration 异常，表示迭代完成。在 for 循环里，无需处理 StopIteration 异常，循环会正常结束。</p>
<p>我们可以得出以下结论：</p>
<p>一个带有 yield 的函数就是一个 generator，它和普通函数不同，生成一个 generator 看起来像函数调用，但不会执行任何函数代码，直到对其调用 next()（在 for 循环中会自动调用 next()）才开始执行。虽然执行流程仍按函数的流程执行，但每执行到一个 yield 语句就会中断，并返回一个迭代值，下次执行时从 yield 的下一个语句继续执行。看起来就好像一个函数在正常执行的过程中被 yield 中断了数次，每次中断都会通过 yield 返回当前的迭代值。</p>
<p>yield 的好处是显而易见的，把一个函数改写为一个 generator 就获得了迭代能力，比起用类的实例保存状态来计算下一个 next() 的值，不仅代码简洁，而且执行流程异常清晰。</p>
<p>如何判断一个函数是否是一个特殊的 generator 函数？可以利用 isgeneratorfunction 判断：</p>
<h5 id="清单-7-使用-isgeneratorfunction-判断">清单 7. 使用 isgeneratorfunction 判断</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">inspect</span> <span class="kn">import</span> <span class="n">isgeneratorfunction</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">isgeneratorfunction</span><span class="p">(</span><span class="n">fab</span><span class="p">)</span> 
<span class="bp">True</span>
</code></pre></td></tr></table>
</div>
</div><p>要注意区分 fab 和 fab(5)，fab 是一个 generator function，而 fab(5) 是调用 fab 返回的一个 generator，好比类的定义和类的实例的区别：</p>
<h5 id="清单-8-类的定义和类的实例">清单 8. 类的定义和类的实例</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="kn">import</span> <span class="nn">types</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">fab</span><span class="p">,</span> <span class="n">types</span><span class="o">.</span><span class="n">GeneratorType</span><span class="p">)</span> 
<span class="bp">False</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">fab</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span> <span class="n">types</span><span class="o">.</span><span class="n">GeneratorType</span><span class="p">)</span> 
<span class="bp">True</span>
</code></pre></td></tr></table>
</div>
</div><p>fab 是无法迭代的，而 fab(5) 是可迭代的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="kn">from</span> <span class="nn">collections</span> <span class="kn">import</span> <span class="n">Iterable</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">fab</span><span class="p">,</span> <span class="n">Iterable</span><span class="p">)</span> 
<span class="bp">False</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">fab</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span> <span class="n">Iterable</span><span class="p">)</span> 
<span class="bp">True</span>
</code></pre></td></tr></table>
</div>
</div><p>每次调用 fab 函数都会生成一个新的 generator 实例，各实例互不影响：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">f1</span> <span class="o">=</span> <span class="n">fab</span><span class="p">(</span><span class="mi">3</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="n">f2</span> <span class="o">=</span> <span class="n">fab</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f1:&#39;</span><span class="p">,</span> <span class="n">f1</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f1</span><span class="p">:</span> <span class="mi">1</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f2:&#39;</span><span class="p">,</span> <span class="n">f2</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f2</span><span class="p">:</span> <span class="mi">1</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f1:&#39;</span><span class="p">,</span> <span class="n">f1</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f1</span><span class="p">:</span> <span class="mi">1</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f2:&#39;</span><span class="p">,</span> <span class="n">f2</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f2</span><span class="p">:</span> <span class="mi">1</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f1:&#39;</span><span class="p">,</span> <span class="n">f1</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f1</span><span class="p">:</span> <span class="mi">2</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f2:&#39;</span><span class="p">,</span> <span class="n">f2</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f2</span><span class="p">:</span> <span class="mi">2</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f2:&#39;</span><span class="p">,</span> <span class="n">f2</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f2</span><span class="p">:</span> <span class="mi">3</span> 
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;f2:&#39;</span><span class="p">,</span> <span class="n">f2</span><span class="o">.</span><span class="n">next</span><span class="p">())</span>
<span class="n">f2</span><span class="p">:</span> <span class="mi">5</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="return-的作用">return 的作用</h2>
<p>在一个 generator function 中，如果没有 return，则默认执行至函数完毕，如果在执行过程中 return，则直接抛出 StopIteration 终止迭代。</p>
<h2 id="另一个例子">另一个例子</h2>
<p>另一个 yield 的例子来源于文件读取。如果直接对文件对象调用 read() 方法，会导致不可预测的内存占用。好的方法是利用固定长度的缓冲区来不断读取文件内容。通过 yield，我们不再需要编写读文件的迭代类，就可以轻松实现文件读取：</p>
<h5 id="清单-9-另一个-yield-的例子">清单 9. 另一个 yield 的例子</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">read_file</span><span class="p">(</span><span class="n">fpath</span><span class="p">):</span> 
   <span class="n">BLOCK_SIZE</span> <span class="o">=</span> <span class="mi">1024</span> 
   <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">fpath</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span> 
       <span class="k">while</span> <span class="bp">True</span><span class="p">:</span> 
           <span class="n">block</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="n">BLOCK_SIZE</span><span class="p">)</span> 
           <span class="k">if</span> <span class="n">block</span><span class="p">:</span> 
               <span class="k">yield</span> <span class="n">block</span> 
           <span class="k">else</span><span class="p">:</span> 
               <span class="k">return</span>
</code></pre></td></tr></table>
</div>
</div><p>以上仅仅简单介绍了 yield 的基本概念和用法，我们会在后续文章中讨论。</p>
<p>转载了一部分内容：<a href="https://www.ibm.com/developerworks/cn/opensource/os-cn-python-yield">Python yield 使用浅析 | IBM</a></p>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/python%E5%85%B3%E9%94%AE%E5%AD%97/" term="Python关键字" label="Python关键字"/><category scheme="https://raycoder.me/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/><category scheme="https://raycoder.me/tags/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/python%E5%85%B3%E9%94%AE%E5%AD%97/" term="Python关键字" label="Python关键字"/></entry><entry><title type="text">建立个人博客配置推荐</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/build-a-blog-recommendation/"/><id>https://raycoder.me/p/build-a-blog-recommendation/</id><updated>2020-04-10T13:47:29+08:00</updated><published>2020-03-26T15:48:50+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Build a Blog Recommendation/建立个人博客配置推荐</summary><content type="html"><![CDATA[<p>建立个人博客白嫖推荐：</p>
<ul>
<li>框架/主题：<a href="https://gohugo.io">Hugo</a>&amp;<a href="https://github.com/reuixiy/hugo-theme-meme">MemE</a></li>
<li>源码托管：<a href="https://github.com">GitHub</a></li>
<li>网站持续集成部署：<a href="https://netlify.com">Netlify</a></li>
<li>网站DNS解析服务/免费CDN：<a href="https://cloudflare.com">Cloudflare</a></li>
<li>（可选）免费CDN：<a href="https://nodecache.com">NodeCache</a>&amp;<a href="https://ddos-guard.net">DDOS Guard</a></li>
<li>统计：<a href="https://tongji.baidu.com">百度统计</a>/<a href="https://analytics.google.com">Google Analytics</a></li>
</ul>
<p>白嫖成功，废话不说开始建站！本文采用操作系统：<code>Windows 10 2004 19587.1000</code>，其他系统请举一反三，采用<code>Git BASH</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200326164618.jpg" alt=""></p>
<hr>
<h3 id="hugomeme">Hugo&amp;MemE</h3>
<p>首先，先去下载<a href="https://github.com/gohugoio/hugo"><code>Hugo</code></a>。在你看到这篇文章之前，你可能已经阅读了许多建博客教程，也许是推荐使用<a href="https://hexo.io"><code>Hexo</code></a>，或是<a href="https://typecho.org"><code>Typecho</code></a>，也有可能是<a href="https://wordpress.org"><code>WordPress</code></a>，<a href="https://gridea.dev"><code>Gridea</code></a>，<a href="https://ghost.org"><code>Ghost</code></a>……但是！但是！为什么我要推荐一个知名度在国内都不如<a href="https://hexo.io"><code>Hexo</code></a>的网站框架呢？原因有3：</p>
<ol>
<li><a href="https://github.com/gohugoio/hugo"><code>Hugo</code></a>采用<a href="https://golang.google.cn"><code>Go Lang</code></a>网站生成速度快，文章多了完爆<a href="https://hexo.io"><code>Hexo</code></a>；</li>
<li>支持持续集成部署；</li>
<li>最最重要的一点：<em class="emphasis-point">内置短代码语言</em>，可定制性极高！你可以看看本文的<a href="https://github.com/FFRaycoder/blog/blob/master/content/p/build-a-blog-recommendation.md">纯文本版本</a>，前面的<em class="emphasis-point">加点字</em>，便是自定义的短代码。</li>
</ol>
<p>注意：如果你跟随本文教程搭建博客，那么请在<a href=""><code>Releases</code></a>界面下载拓展版Hugo，文件名如<code>hugo_extended_X.Y.Z_SYS-64bit.zip</code>，免安装的。</p>
<p>下载后需要将它保存到一个固定的目录，随意。我不建议放到<code>C:/Windows/System32</code>下，因为<code>Hugo</code>更新的<em class="emphasis-point">很勤</em>。</p>
<p>下载保存解压后在一个<em class="emphasis-point">博客专用目录</em>（个人建议）下运行命令（<code>CMD</code>,<a href="https://git-scm.com"><code>Git BASH</code></a>都可，推荐<code>Git BASH</code>，可执行命令比CMD多。）：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ hugo new site blog
</code></pre></td></tr></table>
</div>
</div><p>其中，<code>hugo</code>代表这是一个HUGO指令（前提是要先将保存<code>hugo.exe</code>的文件夹添加到环境变量，否则会报错：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">bash: hugo: <span class="nb">command</span> not found
</code></pre></td></tr></table>
</div>
</div><p>教程：<a href="https://baijiahao.baidu.com/s?id=1652502091402613426">环境变量添加教程</a></p>
<p>当然，<code>blog</code>也可以自己修改名称。</p>
<p>创建完一个博客文件夹后，里面非常空旷：</p>
<pre><code>├─config.toml
│
├─archetypes
│      default.md
│
├─content
├─data
├─layouts
├─static
└─themes
</code></pre><p>这时候，我们就要下载一个主题了：我这里以<a href="https://github.com/reuixiy/hugo-theme-meme">MemE</a>做示例。</p>
<p>把主题<code>clone</code>到本地：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ git clone https://github.com/reuixiy/hugo-theme-meme.git themes/meme
</code></pre></td></tr></table>
</div>
</div><p>其实我推荐这个主题是有原因的：</p>
<ol>
<li>界面简洁（如本站）</li>
<li>自带许多配置功能</li>
<li>自带<code>Service Worker</code>&amp;<code>PWA</code></li>
<li>......</li>
</ol>
<p>配置/写作本文便不再赘述，请参阅：</p>
<ul>
<li>
<p><a href="https://baijiahao.baidu.com/s?id=1630800288039248525">hugo+github博客搭建教程！ | 百家号</a></p>
</li>
<li>
<p><a href="https://www.jianshu.com/p/8c3d7dfb09a0">使用Hugo搭建自己的博客 | 简书</a></p>
</li>
<li>
<p><a href="https://github.com/reuixiy/hugo-theme-meme/blob/master/README.zh-cn.md">README | GitHub</a></p>
</li>
<li>
<p><a href="https://io-oi.me/tech/documentation-of-hugo-theme-meme/">Hugo 主题 MemE 文档 | reuixiy</a></p>
</li>
</ul>
<hr>
<h3 id="源码托管至github">源码托管至GitHub</h3>
<p>这个很简单，在GitHub上面新建一个仓库，名字随便取，然后将你的整个博客文件夹Push上去即可。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200326220659.png" alt=""></p>
<p>看到那个大绿按钮了吧？！自己根据提示新建一个仓库！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ git init
$ git remote add origin &lt;YOUR_REPO&gt;
$ git add -A
$ git commit -m <span class="s2">&#34;init&#34;</span>
$ git push -u origin master
</code></pre></td></tr></table>
</div>
</div><p>请在<code>&lt;YOUR_REPO&gt;</code>中填入你仓库的<code>.git</code>地址！</p>
<p>看不懂的请参考<a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰的Git教程</a>！</p>
<hr>
<h3 id="网站持续集成部署">网站持续集成部署</h3>
<p>请参考<a href="/p/deploy-your-hugo-and-hexo-blog-to-netlify">Hugo-MemE/Hexo(真)自动推送部署至Netlify</a></p>
<hr>
<p><strong>注意：以下两个操作仅适用于有独立域名的博主！</strong></p>
<h3 id="网站dns解析服务免费cdn">网站DNS解析服务/免费CDN</h3>
<p>这个很简单，只需要你在<a href="https://cloudflare.com">Cloudflare</a>中创建一个账号，然后点击这个<strong>大大的按钮</strong>即可：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200327131457.png" alt=""></p>
<p>按照提示将你域名的<code>NS</code>设置为它给你提供的<code>NS</code>地址。</p>
<p>免费CDN只需要你在添加解析时选中<code>Proxied</code>那坨云形图案就可以了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200327132301.png" alt=""></p>
<hr>
<h3 id="可选免费cdn">（可选）免费CDN</h3>
<p><a href="https://nodecache.com">NodeCache</a>有中文界面，自己搞😏</p>
<p><a href="https://ddos-guard.net">DDOS Guard</a>的配置可以参考我的这篇文章：<a href="/p/ddos-guard-free-cdn/">DDOS-Guard免费CDN</a></p>
<hr>
<h3 id="统计">统计</h3>
<h4 id="百度统计">百度统计</h4>
<p>打开<a href="https://tongji.baidu.com/">百度统计官网</a>，登录后添加一个站点：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200329114926.png" alt=""></p>
<p>然后获取代码，把它插入到<code>&lt;/head&gt;</code>标签前即可。</p>
<p>官方提♂示：</p>
<ol>
<li>请将代码添加到网站全部页面的</head>标签前。</li>
<li>建议在header.htm类似的页头模板页面中安装，以达到一处安装，全站皆有的效果。</li>
<li>如需在JS文件中调用统计分析代码，请直接去掉以下代码首尾的，<code>&lt;script type=&quot;text/javascript&quot;&gt;</code>与<code>&lt;/script&gt;</code>后，放入JS文件中即可。</li>
</ol>
<p>如果代码安装正确，一般20分钟后，可以查看网站分析数据。</p>
<h4 id="谷歌统计">谷歌统计</h4>
<p>谷歌统计官网：<a href="https://analytics.google.com">https://analytics.google.com</a></p>
<p>还是一样的新增网站插入代码😑即可</p>
]]></content><category scheme="https://raycoder.me/categories/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客"/><category scheme="https://raycoder.me/categories/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/><category scheme="https://raycoder.me/tags/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客"/><category scheme="https://raycoder.me/tags/%E6%8A%98%E8%85%BE/" term="折腾" label="折腾"/><category scheme="https://raycoder.me/tags/github-pages/" term="GitHub Pages" label="GitHub Pages"/><category scheme="https://raycoder.me/tags/hugo/" term="Hugo" label="Hugo"/><category scheme="https://raycoder.me/tags/netlify/" term="Netlify" label="Netlify"/><category scheme="https://raycoder.me/tags/cloudflare/" term="Cloudflare" label="Cloudflare"/></entry><entry><title type="text">Python中的字符串转义字符</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/python-special-characters/"/><id>https://raycoder.me/p/python-special-characters/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-24T12:02:40+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Python中的字符串特殊/转义字符</summary><content type="html"><![CDATA[<p>今天不知道吃啥，就<del>吃老八秘制小汉堡</del>康Ray的Python字符串特殊字符解析~~</p>
<table>
<thead>
<tr>
<th align="center">转义字符</th>
<th align="center">意义</th>
<th align="center">ASCII码值（十进制）</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">\a</td>
<td align="center">响铃(BEL)</td>
<td align="center">007</td>
</tr>
<tr>
<td align="center">\b</td>
<td align="center">退格(BS)，将当前位置移到前一列</td>
<td align="center">008</td>
</tr>
<tr>
<td align="center">\f</td>
<td align="center">换页(FF)，将当前位置移到下页开头</td>
<td align="center">012</td>
</tr>
<tr>
<td align="center">\n</td>
<td align="center">换行(LF)，将当前位置移到下一行开头<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></td>
<td align="center">010</td>
</tr>
<tr>
<td align="center">\r</td>
<td align="center">回车(CR)，将当前位置移到本行开头<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></td>
<td align="center">013</td>
</tr>
<tr>
<td align="center">\t</td>
<td align="center">水平制表(HT) (跳到下一个TAB位置)</td>
<td align="center">009</td>
</tr>
<tr>
<td align="center">\v</td>
<td align="center">垂直制表(VT)</td>
<td align="center">011</td>
</tr>
<tr>
<td align="center">\\</td>
<td align="center">代表一个反斜线字符&quot;\&quot;</td>
<td align="center">092</td>
</tr>
<tr>
<td align="center">\'</td>
<td align="center">代表一个单引号(撇号)字符</td>
<td align="center">039</td>
</tr>
<tr>
<td align="center">\&quot;</td>
<td align="center">代表一个双引号字符</td>
<td align="center">034</td>
</tr>
<tr>
<td align="center">?</td>
<td align="center">代表一个问号</td>
<td align="center">063</td>
</tr>
<tr>
<td align="center">\0</td>
<td align="center">空字符(NUL)</td>
<td align="center">000</td>
</tr>
<tr>
<td align="center">\ddd</td>
<td align="center">1到3位八进制数所代表的任意字符</td>
<td align="center">三位八进制</td>
</tr>
<tr>
<td align="center">\xhh</td>
<td align="center">十六进制所代表的任意字符</td>
<td align="center">十六进制</td>
</tr>
</tbody>
</table>
<p>总之，凡是字符前带<code>\</code>的，一律转义。</p>
<hr>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;1</span><span class="se">\n</span><span class="s1">2&#39;</span><span class="p">)</span>
<span class="mi">1</span>
<span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;1</span><span class="se">\r</span><span class="s1">2&#39;</span><span class="p">)</span>
<span class="mi">1</span>
<span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s1">&#39;1</span><span class="se">\r\n</span><span class="s1">2&#39;</span><span class="p">)</span>
<span class="mi">1</span>

<span class="mi">2</span>
</code></pre></td></tr></table>
</div>
</div><p>注意看截图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200324143731.png" alt=""></p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><code>\n</code>是在下一行输入输出，运行后换到当前位置的下一行，而不会回到行首。<code>\r</code>是擦除本行前面的所有内容，光标回到本行第一字符开始输出，运行后回到当前行的行首，而不会换到下一行，如果接着输出的话，本行以前的内容会被逐一覆盖。 <a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/></entry><entry><title type="text">Hugo-MemE/Hexo(真)自动推送部署至Netlify</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/deploy-your-hugo-and-hexo-blog-to-netlify/"/><id>https://raycoder.me/p/deploy-your-hugo-and-hexo-blog-to-netlify/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-24T08:52:21+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Hugo/Hexo博客自动推送部署至Netlify</summary><content type="html"><![CDATA[<h3 id="hugo">Hugo</h3>
<hr>
<p>我之前写了一个蠢蠢的脚本，用于自动推送生成完的静态网站：</p>
<p><a href="https://raycoder.me/p/hugo-auto-deploy/">Hugo-Python(伪)自动部署</a></p>
<p>自以为很好……</p>
<p>不过在看了<a href="https://io-oi.me/">reuixiy大佬的博客</a>后，才发现他有一个<code>Edit Me</code>：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200324085718.png" alt=""></p>
<p>点击后发现可以<code>Fork</code>这个<code>Markdown</code>文件来修改。</p>
<p>不过俺们这个静态网页好像就不太行……这个脚本<heimu>有毛用！！！！</heimu></p>
<p>果然是我太嫩了</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200324085950.gif" alt=""></p>
<p>研究了下人家的<a href="https://github.com/reuixiy/io-oi.me">博客Repo</a></p>
<p>没错他是直接推送一个源代码的！</p>
<p>咱们打开<a href="https://github.com/reuixiy/io-oi.me/blob/master/netlify.toml">netlify.toml</a></p>
<p>自己也新建一个<code>netlify.toml</code>(<code>~blog/netlify.toml</code>)</p>
<p>填入如下内容：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-toml" data-lang="toml"><span class="p">[</span><span class="nx">build</span><span class="p">]</span>
  <span class="nx">publish</span> <span class="p">=</span> <span class="s2">&#34;public&#34;</span>
  <span class="nx">command</span> <span class="p">=</span> <span class="s2">&#34;npm run build&#34;</span>

<span class="p">[</span><span class="nx">build</span><span class="p">.</span><span class="nx">environment</span><span class="p">]</span>
  <span class="nx">HUGO_VERSION</span> <span class="p">=</span> <span class="s2">&#34;YOUR_HUGO_VERSION&#34;</span>
  <span class="nx">HUGO_ENV</span> <span class="p">=</span> <span class="s2">&#34;production&#34;</span>
  <span class="nx">HUGO_ENABLEGITINFO</span> <span class="p">=</span> <span class="s2">&#34;true&#34;</span>
</code></pre></td></tr></table>
</div>
</div><p>很愉快的<code>push</code>~</p>
<p><code>push</code>成功啦！</p>
<p><code>Netlify</code>失败了...</p>
<pre><code>Executing user command: npm run build
npm
 ERR! code ENOENT
npm
 ERR! syscall open
npm ERR!
 path /opt/build/repo/package.json
npm ERR! errno -2
npm
 ERR! enoent ENOENT: no such file or directory, open '/opt/build/repo/package.json'
npm
ERR! enoent This is related to npm not being able to find a file.
npm ERR! enoent
npm ERR!
 A complete log of this run can be found in:
npm ERR!     /opt/buildhome/.npm/_logs/2020-03-23T23_50_59_667Z-debug.log
</code></pre><p>是<code>build</code>出了问题。于是我们似乎需要<code>npm init</code>，再对<code>package.json</code>进行修改：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
  <span class="nt">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;blog&#34;</span><span class="p">,</span>
  <span class="nt">&#34;version&#34;</span><span class="p">:</span> <span class="s2">&#34;1.0.0&#34;</span><span class="p">,</span>
  <span class="nt">&#34;description&#34;</span><span class="p">:</span> <span class="s2">&#34;Ray&#39;s Blog&#34;</span><span class="p">,</span>
  <span class="nt">&#34;main&#34;</span><span class="p">:</span> <span class="s2">&#34;index.js&#34;</span><span class="p">,</span>
  <span class="nt">&#34;scripts&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;test&#34;</span><span class="p">:</span> <span class="s2">&#34;echo \&#34;Error: no test specified\&#34; &amp;&amp; exit 1&#34;</span><span class="p">,</span>
    <span class="nt">&#34;build&#34;</span><span class="p">:</span> <span class="s2">&#34;git config --global core.quotePath false &amp;&amp; hugo --gc --minify --cleanDestinationDir &amp;&amp; ./node_modules/gulp/bin/gulp.js build&#34;</span><span class="p">,</span>
  <span class="p">},</span>
  <span class="nt">&#34;repository&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;type&#34;</span><span class="p">:</span> <span class="s2">&#34;git&#34;</span><span class="p">,</span>
    <span class="nt">&#34;url&#34;</span><span class="p">:</span> <span class="s2">&#34;git+https://github.com/FFRaycoder/blog.git&#34;</span>
  <span class="p">},</span>
  <span class="nt">&#34;keywords&#34;</span><span class="p">:</span> <span class="p">[</span>
    <span class="s2">&#34;blog&#34;</span><span class="p">,</span>
    <span class="s2">&#34;hugo&#34;</span><span class="p">,</span>
    <span class="s2">&#34;hugo-theme-meme&#34;</span>
  <span class="p">],</span>
  <span class="nt">&#34;author&#34;</span><span class="p">:</span> <span class="s2">&#34;FFRaycoder&#34;</span><span class="p">,</span>
  <span class="nt">&#34;license&#34;</span><span class="p">:</span> <span class="s2">&#34;CC-BY-NC-SA-4.0&#34;</span><span class="p">,</span>
  <span class="nt">&#34;bugs&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;url&#34;</span><span class="p">:</span> <span class="s2">&#34;https://github.com/FFRaycoder/blog/issues&#34;</span>
  <span class="p">},</span>
  <span class="nt">&#34;homepage&#34;</span><span class="p">:</span> <span class="s2">&#34;https://github.com/FFRaycoder/blog&#34;</span><span class="p">,</span>
  <span class="nt">&#34;devDependencies&#34;</span><span class="p">:</span> <span class="p">{</span>
    <span class="nt">&#34;gulp&#34;</span><span class="p">:</span> <span class="s2">&#34;^4.0.2&#34;</span><span class="p">,</span>
    <span class="nt">&#34;gulp-uglify&#34;</span><span class="p">:</span> <span class="s2">&#34;^3.0.2&#34;</span><span class="p">,</span>
    <span class="nt">&#34;readable-stream&#34;</span><span class="p">:</span> <span class="s2">&#34;^3.6.0&#34;</span><span class="p">,</span>
    <span class="nt">&#34;uglify-es&#34;</span><span class="p">:</span> <span class="s2">&#34;^3.3.9&#34;</span><span class="p">,</span>
    <span class="nt">&#34;workbox-build&#34;</span><span class="p">:</span> <span class="s2">&#34;^5.0.0&#34;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>当然，<code>./node_modules/gulp/bin/gulp.js build</code>是可选的：因为我使用了<code>gulp</code>来创建<code>sw.js</code>。</p>
<p>其中的配置请自己修改。</p>
<p>每次推送时Netlify会<em class="emphasis-point">自动运行</em><code>hugo</code>指令，并且部署至他们的<code>CDN</code>~</p>
<p>好哒我们这就成功了~想修改的人可以直接点击下面的<code>Edit Me</code>，提个PR给我！</p>
<h3 id="hexo">Hexo</h3>
<hr>
<p>Hexo倒要比Hugo简单：Hexo的<code>node_moudles</code>会在执行Hexo命令时自动运行。实现Hexo甚至不需要修改<code>~blog/packages.json</code>。</p>
<p>修改你的<code>Deploy Settings</code>，更改成如图：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200325075659.png" alt=""></p>
<p>只需你推送博客源码，Netlify就会<em class="emphasis-point">自动帮你部署博客</em>！！！太贴心了吧~</p>
<p>这样的好处是什么呢？我们都知道<code>hexo g</code>生成文件很慢，<code>hexo d</code>比你自己推送都慢🙃貌似是因为hexo要推送全部的静态文件。使用Netlify自动部署后，你只需要推送一篇新的博文，你的网站就自动帮你部署好啦~~~</p>
<style type="text/css">.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice-title:before{margin-right:8px;font-family:"Font Awesome 5 Free",FontAwesome;font-weight:400}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning .notice-title:before{content:'\f071'}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info .notice-title:before{content:'\f05a'}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note .notice-title:before{content:'\f06a'}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip .notice-title:before{content:'\f058'}.notice.tip{background:#e6f9e6}</style><div class="notice success" >
<p class="first notice-title"></p><p>还有一点：如果你的网站<code>hexo g</code>出现了错误，Netlify会自动回滚到前一个版本，保持你网站的正常访问！</p></div>

<p>赶快入坑~</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200325081213.gif" alt=""></p>
<hr>
<p>2020/4/8更新：</p>
<p>有兴趣的同学可以使用<a href="https://forestry.io/">Forestry CMS</a>，可以给静态博客加上个后台。自己捣鼓。</p>
]]></content><category scheme="https://raycoder.me/categories/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客"/><category scheme="https://raycoder.me/tags/hugo/" term="Hugo" label="Hugo"/><category scheme="https://raycoder.me/tags/git/" term="Git" label="Git"/><category scheme="https://raycoder.me/tags/netlify/" term="Netlify" label="Netlify"/></entry><entry><title type="text">本站UV达到1000人啦！</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/1000-uv/"/><id>https://raycoder.me/p/1000-uv/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-22T14:26:44+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">本站达到1000UV</summary><content type="html">&lt;center>&lt;font size=7>好的开端！庆祝🤤🤤🤤~撒花🎉🎉🎉~&lt;/font>&lt;/center></content><category scheme="https://raycoder.me/categories/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客"/><category scheme="https://raycoder.me/tags/%E5%8D%9A%E5%AE%A2/" term="博客" label="博客"/></entry><entry><title type="text">Hugo-HTML版GOTO链接中转页</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/goto-transfer-page/"/><id>https://raycoder.me/p/goto-transfer-page/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-19T15:13:31+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Hugo-HTML版GOTO链接中转页</summary><content type="html"><![CDATA[<p><a href="http://www.aeink.com/791.html">原作者</a>是PHP版本，我把它移植到了HTML上。代码很丑，勿喷！（适用于Hugo）</p>
<p>自己在<code>./blog/static/</code>下新建<code>goto/index.html</code>，代码如下。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">http-equiv</span><span class="o">=</span><span class="s">&#34;Content-Type&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;text/html; charset=UTF-8&#34;</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width&#34;</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;robots&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;noindex, nofollow&#34;</span> <span class="p">/&gt;</span>
<span class="p">&lt;</span><span class="nt">noscript</span><span class="p">&gt;&lt;</span><span class="nt">meta</span> <span class="na">http-equiv</span><span class="o">=</span><span class="s">&#34;refresh&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;1;url=&#39;&#39;;&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">noscript</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
<span class="c">&lt;!--[if IE 8]&gt;
</span><span class="c">&lt;style&gt;
</span><span class="c">.ie8 .alert-circle,.ie8 .alert-footer{display:none}.ie8 .alert-box{padding-top:75px}.ie8 .alert-sec-text{top:45px}
</span><span class="c">&lt;/style&gt;
</span><span class="c">&lt;![endif]--&gt;</span>

<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="kd">function</span> <span class="nx">getQueryVariable</span><span class="p">(</span><span class="nx">variable</span><span class="p">){</span>
       <span class="kd">var</span> <span class="nx">query</span> <span class="o">=</span> <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">search</span><span class="p">.</span><span class="nx">substring</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
       <span class="kd">var</span> <span class="nx">vars</span> <span class="o">=</span> <span class="nx">query</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;&amp;&#34;</span><span class="p">);</span>
       <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">vars</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
           <span class="kd">var</span> <span class="nx">pair</span> <span class="o">=</span> <span class="nx">vars</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&#34;=&#34;</span><span class="p">);</span>
           <span class="k">if</span><span class="p">(</span><span class="nx">pair</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">==</span> <span class="nx">variable</span><span class="p">){</span><span class="k">return</span> <span class="nx">pair</span><span class="p">[</span><span class="mi">1</span><span class="p">];}</span>
       <span class="p">}</span>
       <span class="k">return</span><span class="p">(</span><span class="kc">null</span><span class="p">);</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
	<span class="nx">x</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&#34;title&#34;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span>
	<span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&#34;外链跳转 - &#34;</span> <span class="o">+</span> <span class="nx">getQueryVariable</span><span class="p">(</span><span class="s2">&#34;url&#34;</span><span class="p">);</span>
<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
<span class="nt">body</span><span class="p">{</span><span class="k">margin</span><span class="p">:</span><span class="mi">0</span><span class="p">;</span><span class="k">padding</span><span class="p">:</span><span class="mi">0</span><span class="p">;</span><span class="k">background</span><span class="p">:</span><span class="mh">#E6EAEB</span><span class="p">;</span><span class="k">font-family</span><span class="p">:</span><span class="n">Arial</span><span class="p">,</span><span class="s1">&#39;微软雅黑&#39;</span><span class="p">,</span><span class="s1">&#39;宋体&#39;</span><span class="p">,</span><span class="kc">sans-serif</span><span class="p">}.</span><span class="nc">main</span><span class="p">{</span><span class="k">position</span><span class="p">:</span><span class="kc">absolute</span><span class="p">;</span><span class="k">left</span><span class="p">:</span><span class="nb">calc</span><span class="p">(</span><span class="mi">50</span><span class="kt">%</span> <span class="o">-</span> <span class="mi">200</span><span class="kt">px</span><span class="p">);</span><span class="k">top</span><span class="p">:</span><span class="nb">calc</span><span class="p">(</span><span class="mi">50</span><span class="kt">%</span> <span class="o">-</span> <span class="mi">13</span><span class="kt">em</span><span class="p">)}.</span><span class="nc">alert-box</span><span class="p">{</span><span class="k">display</span><span class="p">:</span><span class="kc">none</span><span class="p">;</span><span class="k">position</span><span class="p">:</span><span class="kc">relative</span><span class="p">;</span><span class="k">margin</span><span class="p">:</span><span class="kc">auto</span><span class="p">;</span><span class="k">padding</span><span class="p">:</span><span class="mi">180</span><span class="kt">px</span> <span class="mi">85</span><span class="kt">px</span> <span class="mi">22</span><span class="kt">px</span><span class="p">;</span><span class="k">border-radius</span><span class="p">:</span><span class="mi">10</span><span class="kt">px</span> <span class="mi">10</span><span class="kt">px</span> <span class="mi">0</span> <span class="mi">0</span><span class="p">;</span><span class="k">background</span><span class="p">:</span><span class="mh">#FFF</span><span class="p">;</span><span class="k">box-shadow</span><span class="p">:</span><span class="mi">5</span><span class="kt">px</span> <span class="mi">9</span><span class="kt">px</span> <span class="mi">17</span><span class="kt">px</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">102</span><span class="p">,</span><span class="mi">102</span><span class="p">,</span><span class="mi">102</span><span class="p">,</span><span class="mf">.75</span><span class="p">);</span><span class="k">width</span><span class="p">:</span><span class="mi">286</span><span class="kt">px</span><span class="p">;</span><span class="k">color</span><span class="p">:</span><span class="mh">#FFF</span><span class="p">;</span><span class="k">text-align</span><span class="p">:</span><span class="kc">center</span><span class="p">}.</span><span class="nc">alert-box</span> <span class="nt">p</span><span class="p">{</span><span class="k">margin</span><span class="p">:</span><span class="mi">0</span><span class="p">}.</span><span class="nc">alert-circle</span><span class="p">{</span><span class="k">position</span><span class="p">:</span><span class="kc">absolute</span><span class="p">;</span><span class="k">top</span><span class="p">:</span><span class="mi">-50</span><span class="kt">px</span><span class="p">;</span><span class="k">left</span><span class="p">:</span><span class="mi">111</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-sec-circle</span><span class="p">{</span><span class="n">stroke-dashoffset</span><span class="p">:</span><span class="mi">0</span><span class="p">;</span><span class="n">stroke-dasharray</span><span class="p">:</span><span class="mi">735</span><span class="p">;</span><span class="k">transition</span><span class="p">:</span><span class="n">stroke-dashoffset</span> <span class="mi">1</span><span class="kt">s</span> <span class="kc">linear</span><span class="p">}.</span><span class="nc">alert-sec-text</span><span class="p">{</span><span class="k">position</span><span class="p">:</span><span class="kc">absolute</span><span class="p">;</span><span class="k">top</span><span class="p">:</span><span class="mi">11</span><span class="kt">px</span><span class="p">;</span><span class="k">left</span><span class="p">:</span><span class="mi">190</span><span class="kt">px</span><span class="p">;</span><span class="k">width</span><span class="p">:</span><span class="mi">76</span><span class="kt">px</span><span class="p">;</span><span class="k">color</span><span class="p">:</span><span class="mh">#000</span><span class="p">;</span><span class="k">font-size</span><span class="p">:</span><span class="mi">68</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-sec-unit</span><span class="p">{</span><span class="k">font-size</span><span class="p">:</span><span class="mi">34</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-body</span><span class="p">{</span><span class="k">margin</span><span class="p">:</span><span class="mi">35</span><span class="kt">px</span> <span class="mi">0</span><span class="p">}.</span><span class="nc">alert-head</span><span class="p">{</span><span class="k">color</span><span class="p">:</span><span class="mh">#242424</span><span class="p">;</span><span class="k">font-size</span><span class="p">:</span><span class="mi">28</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-concent</span><span class="p">{</span><span class="k">margin</span><span class="p">:</span><span class="mi">25</span><span class="kt">px</span> <span class="mi">0</span> <span class="mi">14</span><span class="kt">px</span><span class="p">;</span><span class="k">color</span><span class="p">:</span><span class="mh">#7B7B7B</span><span class="p">;</span><span class="k">font-size</span><span class="p">:</span><span class="mi">18</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-concent</span> <span class="nt">p</span><span class="p">{</span><span class="k">line-height</span><span class="p">:</span><span class="mi">27</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-btn</span><span class="p">{</span><span class="k">display</span><span class="p">:</span><span class="kc">block</span><span class="p">;</span><span class="k">border-radius</span><span class="p">:</span><span class="mi">10</span><span class="kt">px</span><span class="p">;</span><span class="k">background-color</span><span class="p">:</span><span class="mh">#4AB0F7</span><span class="p">;</span><span class="k">height</span><span class="p">:</span><span class="mi">55</span><span class="kt">px</span><span class="p">;</span><span class="k">line-height</span><span class="p">:</span><span class="mi">55</span><span class="kt">px</span><span class="p">;</span><span class="k">width</span><span class="p">:</span><span class="mi">286</span><span class="kt">px</span><span class="p">;</span><span class="k">color</span><span class="p">:</span><span class="mh">#FFF</span><span class="p">;</span><span class="k">font-size</span><span class="p">:</span><span class="mi">20</span><span class="kt">px</span><span class="p">;</span><span class="k">text-decoration</span><span class="p">:</span><span class="kc">none</span><span class="p">;</span><span class="k">letter-spacing</span><span class="p">:</span><span class="mi">2</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-btn</span><span class="p">:</span><span class="nd">hover</span><span class="p">{</span><span class="k">background-color</span><span class="p">:</span><span class="mh">#6BC2FF</span><span class="p">}.</span><span class="nc">alert-footer</span><span class="p">{</span><span class="k">margin</span><span class="p">:</span><span class="mi">0</span> <span class="kc">auto</span><span class="p">;</span><span class="k">height</span><span class="p">:</span><span class="mi">42</span><span class="kt">px</span><span class="p">;</span><span class="k">width</span><span class="p">:</span><span class="mi">120</span><span class="kt">px</span><span class="p">}.</span><span class="nc">alert-footer-icon</span><span class="p">{</span><span class="k">float</span><span class="p">:</span><span class="kc">left</span><span class="p">}.</span><span class="nc">alert-footer-text</span><span class="p">{</span><span class="k">float</span><span class="p">:</span><span class="kc">left</span><span class="p">;</span><span class="k">border-left</span><span class="p">:</span><span class="mi">2</span><span class="kt">px</span> <span class="kc">solid</span> <span class="mh">#EEE</span><span class="p">;</span><span class="k">padding</span><span class="p">:</span><span class="mi">3</span><span class="kt">px</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">5</span><span class="kt">px</span><span class="p">;</span><span class="k">height</span><span class="p">:</span><span class="mi">40</span><span class="kt">px</span><span class="p">;</span><span class="k">color</span><span class="p">:</span><span class="mh">#0B85CC</span><span class="p">;</span><span class="k">font-size</span><span class="p">:</span><span class="mi">12</span><span class="kt">px</span><span class="p">;</span><span class="k">text-align</span><span class="p">:</span><span class="kc">left</span><span class="p">}.</span><span class="nc">alert-footer-text</span> <span class="nt">p</span><span class="p">{</span><span class="k">color</span><span class="p">:</span><span class="mh">#7A7A7A</span><span class="p">;</span><span class="k">font-size</span><span class="p">:</span><span class="mi">22</span><span class="kt">px</span><span class="p">;</span><span class="k">line-height</span><span class="p">:</span><span class="mi">18</span><span class="kt">px</span><span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;ie8&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;&#34;</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;main&#34;</span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;js-alert-box&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-box&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;display:block&#34;</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">svg</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-circle&#34;</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;234&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;234&#34;</span><span class="p">&gt;&lt;</span><span class="nt">circle</span> <span class="na">cx</span><span class="o">=</span><span class="s">&#34;117&#34;</span> <span class="na">cy</span><span class="o">=</span><span class="s">&#34;117&#34;</span> <span class="na">r</span><span class="o">=</span><span class="s">&#34;108&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;#FFF&#34;</span> <span class="na">stroke</span><span class="o">=</span><span class="s">&#34;#43AEFA&#34;</span> <span class="na">stroke-width</span><span class="o">=</span><span class="s">&#34;17&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">circle</span><span class="p">&gt;&lt;</span><span class="nt">circle</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;js-sec-circle&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-sec-circle&#34;</span> <span class="na">cx</span><span class="o">=</span><span class="s">&#34;117&#34;</span> <span class="na">cy</span><span class="o">=</span><span class="s">&#34;117&#34;</span> <span class="na">r</span><span class="o">=</span><span class="s">&#34;108&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;transparent&#34;</span> <span class="na">stroke</span><span class="o">=</span><span class="s">&#34;#F4F1F1&#34;</span> <span class="na">stroke-width</span><span class="o">=</span><span class="s">&#34;18&#34;</span> <span class="na">transform</span><span class="o">=</span><span class="s">&#34;rotate(-90 117 117)&#34;</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;stroke-dashoffset:-514px&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">circle</span><span class="p">&gt;&lt;</span><span class="nt">text</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-sec-unit&#34;</span> <span class="na">x</span><span class="o">=</span><span class="s">&#34;100&#34;</span> <span class="na">y</span><span class="o">=</span><span class="s">&#34;172&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;#BDBDBD&#34;</span><span class="p">&gt;</span>秒<span class="p">&lt;/</span><span class="nt">text</span><span class="p">&gt;&lt;/</span><span class="nt">svg</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;js-sec-text&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-sec-text&#34;</span><span class="p">&gt;</span>
			3
		<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-body&#34;</span><span class="p">&gt;</span>
			<span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;js-alert-head&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-head&#34;</span><span class="p">&gt;</span>
				<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span><span class="nx">getQueryVariable</span><span class="p">(</span><span class="s2">&#34;url&#34;</span><span class="p">);&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
			<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
			<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-concent&#34;</span><span class="p">&gt;</span>
				<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>
					Loading...
				<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>
			<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
			<span class="p">&lt;</span><span class="nt">a</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;js-alert-btn&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-btn&#34;</span><span class="p">&gt;</span>立即前往<span class="p">&lt;/</span><span class="nt">a</span><span class="p">&gt;</span>
			<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span>
				<span class="nx">x</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;js-alert-btn&#34;</span><span class="p">);</span>
				<span class="nx">x</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&#34;&lt;a id=\&#34;js-alert-btn\&#34; class=\&#34;alert-btn\&#34; href=\&#34;&#34;</span> <span class="o">+</span> <span class="nx">getQueryVariable</span><span class="p">(</span><span class="s2">&#34;url&#34;</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&#34;\&#34;&gt;立即前往&lt;/a&gt;&#34;</span><span class="p">;</span>
			<span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
		<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-footer clearfix&#34;</span><span class="p">&gt;</span>
			<span class="p">&lt;</span><span class="nt">svg</span> <span class="na">width</span><span class="o">=</span><span class="s">&#34;46px&#34;</span> <span class="na">height</span><span class="o">=</span><span class="s">&#34;42px&#34;</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-footer-icon&#34;</span><span class="p">&gt;&lt;</span><span class="nt">circle</span> <span class="na">fill-rule</span><span class="o">=</span><span class="s">&#34;evenodd&#34;</span> <span class="na">clip-rule</span><span class="o">=</span><span class="s">&#34;evenodd&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;#7B7B7B&#34;</span> <span class="na">stroke</span><span class="o">=</span><span class="s">&#34;#DEDFE0&#34;</span> <span class="na">stroke-width</span><span class="o">=</span><span class="s">&#34;2&#34;</span> <span class="na">stroke-miterlimit</span><span class="o">=</span><span class="s">&#34;10&#34;</span> <span class="na">cx</span><span class="o">=</span><span class="s">&#34;21.917&#34;</span> <span class="na">cy</span><span class="o">=</span><span class="s">&#34;21.25&#34;</span> <span class="na">r</span><span class="o">=</span><span class="s">&#34;17&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">circle</span><span class="p">&gt;&lt;</span><span class="nt">path</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;#FFF&#34;</span> <span class="na">d</span><span class="o">=</span><span class="s">&#34;M22.907,27.83h-1.98l0.3-2.92c-0.37-0.22-0.61-0.63-0.61-1.1c0-0.71,0.58-1.29,1.3-1.29s1.3,0.58,1.3,1.29 c0,0.47-0.24,0.88-0.61,1.1L22.907,27.83z M18.327,17.51c0-1.98,1.61-3.59,3.59-3.59s3.59,1.61,3.59,3.59v2.59h-7.18V17.51z M27.687,20.1v-2.59c0-3.18-2.59-5.76-5.77-5.76s-5.76,2.58-5.76,5.76v2.59h-1.24v10.65h14V20.1H27.687z&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">path</span><span class="p">&gt;&lt;</span><span class="nt">circle</span> <span class="na">fill-rule</span><span class="o">=</span><span class="s">&#34;evenodd&#34;</span> <span class="na">clip-rule</span><span class="o">=</span><span class="s">&#34;evenodd&#34;</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;#FEFEFE&#34;</span> <span class="na">cx</span><span class="o">=</span><span class="s">&#34;35.417&#34;</span> <span class="na">cy</span><span class="o">=</span><span class="s">&#34;10.75&#34;</span> <span class="na">r</span><span class="o">=</span><span class="s">&#34;6.5&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">circle</span><span class="p">&gt;&lt;</span><span class="nt">polygon</span> <span class="na">fill</span><span class="o">=</span><span class="s">&#34;#7B7B7B&#34;</span> <span class="na">stroke</span><span class="o">=</span><span class="s">&#34;#7B7B7B&#34;</span> <span class="na">stroke-linecap</span><span class="o">=</span><span class="s">&#34;round&#34;</span> <span class="na">stroke-linejoin</span><span class="o">=</span><span class="s">&#34;round&#34;</span> <span class="na">stroke-miterlimit</span><span class="o">=</span><span class="s">&#34;10&#34;</span> <span class="na">points</span><span class="o">=</span><span class="s">&#34;35.417,12.16 32.797,9.03 31.917,10.07 35.417,14.25 42.917,5.29 42.037,4.25 &#34;</span><span class="p">&gt;&lt;/</span><span class="nt">polygon</span><span class="p">&gt;&lt;/</span><span class="nt">svg</span><span class="p">&gt;</span>
			<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;alert-footer-text&#34;</span><span class="p">&gt;</span>
				<span class="p">&lt;</span><span class="nt">p</span><span class="p">&gt;</span>secure<span class="p">&lt;/</span><span class="nt">p</span><span class="p">&gt;</span>安全加密
			<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
		<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
	<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">script</span> <span class="na">type</span><span class="o">=</span><span class="s">&#34;text/javascript&#34;</span><span class="p">&gt;</span>
<span class="kd">function</span> <span class="nx">alertSet</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
	
	<span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;js-alert-box&#34;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">display</span> <span class="o">=</span> <span class="s2">&#34;block&#34;</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;js-alert-head&#34;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">e</span><span class="p">;</span>
	<span class="kd">var</span> <span class="nx">t</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span>
		<span class="nx">n</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;js-sec-circle&#34;</span><span class="p">);</span>
	<span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;js-sec-text&#34;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">t</span><span class="p">,</span> <span class="nx">setInterval</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
		<span class="k">if</span> <span class="p">(</span><span class="mi">0</span> <span class="o">==</span> <span class="nx">t</span><span class="p">)</span> <span class="nx">location</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">getQueryVariable</span><span class="p">(</span><span class="s2">&#34;url&#34;</span><span class="p">);</span>
		<span class="k">else</span> <span class="p">{</span>
			<span class="nx">t</span> <span class="o">-=</span> <span class="mi">1</span><span class="p">,</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&#34;js-sec-text&#34;</span><span class="p">).</span><span class="nx">innerHTML</span> <span class="o">=</span> <span class="nx">t</span><span class="p">;</span>
			<span class="kd">var</span> <span class="nx">e</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">t</span> <span class="o">/</span> <span class="mi">5</span> <span class="o">*</span> <span class="mi">735</span><span class="p">);</span>
			<span class="nx">n</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">strokeDashoffset</span> <span class="o">=</span> <span class="nx">e</span> <span class="o">-</span> <span class="mi">735</span>
		<span class="p">}</span>
	<span class="p">},</span> <span class="mi">970</span><span class="p">)</span>
<span class="p">}</span> <span class="p">&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">script</span><span class="p">&gt;</span><span class="nx">alertSet</span><span class="p">(</span><span class="nx">getQueryVariable</span><span class="p">(</span><span class="s2">&#34;url&#34;</span><span class="p">));&lt;/</span><span class="nt">script</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>使用的时候链接如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">https://raycoder.me/goto/?url=https://raycoder.me
</code></pre></td></tr></table>
</div>
</div><p>这里以<code>MemE</code>主题为例，批量替换网页中非本站<code>a标签</code>。打开<code>./blog/themes/meme/layouts/partials/custom/content.html</code>，写入如下内容：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">{{- $host := &#34;&#34; -}}
{{- $redirect := &#34;/goto/&#34; -}}

{{- $Content := .Scratch.Get &#34;Content&#34; -}}
{{- $regex := printf `<span class="p">&lt;</span><span class="nt">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;(https?://%s[^&#34;</span><span class="err">]+)&#34;`</span> <span class="err">$</span><span class="na">host</span> <span class="na">-</span><span class="err">}}</span>
<span class="err">{{</span><span class="na">-</span> <span class="err">$</span><span class="na">replacement</span> <span class="na">:</span><span class="o">=</span> <span class="s">printf</span> <span class="err">`&lt;</span><span class="na">a</span> <span class="na">href</span><span class="o">=</span><span class="s">&#34;%s?url=$1&#34;</span><span class="err">`</span> <span class="err">$</span><span class="na">redirect</span> <span class="na">-</span><span class="err">}}</span>
<span class="err">{{</span><span class="na">-</span> <span class="err">$</span><span class="na">Content</span> <span class="na">:</span><span class="o">=</span> <span class="s">$Content</span> <span class="err">|</span> <span class="na">replaceRE</span> <span class="err">$</span><span class="na">regex</span> <span class="err">$</span><span class="na">replacement</span> <span class="err">|</span> <span class="na">safeHTML</span> <span class="na">-</span><span class="err">}}</span>
<span class="err">{{</span><span class="na">-</span> <span class="err">.</span><span class="na">Scratch</span><span class="err">.</span><span class="na">Set</span> <span class="err">&#34;</span><span class="na">Content</span><span class="err">&#34;</span> <span class="err">$</span><span class="na">Content</span> <span class="na">-</span><span class="err">}}</span>
</code></pre></td></tr></table>
</div>
</div><p>这个代码是让所有外链在跳转页中打开，假如你只想让特定网址在跳转页中打开，那么可以在<code>{{- $host := &quot;&quot; -}}</code>中填入内容，如<code>{{- $host := &quot;example.com&quot; -}}</code>。</p>
<hr>
<p>参考资料：</p>
<ul>
<li>
<p><a href="https://github.com/reuixiy/hugo-theme-meme/issues/81">如何让所有外链全部在一个中转页打开？ | Github Issue</a></p>
</li>
<li>
<p><a href="http://www.aeink.com/791.html">本站自用跳转页面go.php源码 | AE博客</a></p>
</li>
</ul>
]]></content><category scheme="https://raycoder.me/categories/html/" term="HTML" label="HTML"/><category scheme="https://raycoder.me/tags/html/" term="HTML" label="HTML"/><category scheme="https://raycoder.me/tags/%E4%B8%AD%E8%BD%AC/" term="中转" label="中转"/><category scheme="https://raycoder.me/tags/js/" term="JS" label="JS"/></entry><entry><title type="text">DDOS-Guard免费CDN</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/ddos-guard-free-cdn/"/><id>https://raycoder.me/p/ddos-guard-free-cdn/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-19T08:29:36+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">DDOS-Guard免费CDN, 免备案国外CDN</summary><content type="html"><![CDATA[<p>白嫖传送门：<a href="https://ddos-guard.net/en/store/web">https://ddos-guard.net/en/store/web</a></p>
<p>俺们作为白嫖党选什么岂不是很清楚~</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319083802.png" alt=""></p>
<p>然后填入你的域名和回源IP地址！</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319084702.png" alt=""></p>
<p>然后按照流程注册！</p>
<p>过一会儿就可以在<a href="https://my.ddos-guard.net/cabinet">控制面板</a>看到啦！</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319084942.png" alt=""></p>
<p>点击进去，就可以看到它给我们分配的IP地址。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319085045.png" alt=""></p>
<p>不过速度真的不敢恭维！（可能是我个人原因）</p>
<p>参考资料：</p>
<ul>
<li><a href="https://cangshui.net/3346.html">【免费CDN】俄罗斯DDOS-Guard支持ssl防御1.5T | 沧水博客</a></li>
</ul>
]]></content><category scheme="https://raycoder.me/categories/cdn/" term="CDN" label="CDN"/><category scheme="https://raycoder.me/categories/%E7%BD%91%E7%AB%99/" term="网站" label="网站"/><category scheme="https://raycoder.me/tags/cdn/" term="CDN" label="CDN"/><category scheme="https://raycoder.me/tags/%E7%99%BD%E5%AB%96/" term="白嫖" label="白嫖"/><category scheme="https://raycoder.me/tags/%E7%A6%8F%E5%88%A9/" term="福利" label="福利"/></entry><entry><title type="text">Backblaze免费免备案对象存储</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/backblaze-free-object-storage/"/><id>https://raycoder.me/p/backblaze-free-object-storage/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-19T08:08:54+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">白嫖Backblaze免费免备案对象存储</summary><content type="html"><![CDATA[<h3 id="backblaze-b2对象存储传送门httpssecurebackblazecomb2_bucketshtm">backblaze B2对象存储传送门：<a href="https://secure.backblaze.com/b2_buckets.htm">https://secure.backblaze.com/b2_buckets.htm</a></h3>
<p>注册个账号，登录！</p>
<p>Backblaze前10 GB的存储空间是免费的，每天能下载1G以内文件免费，上传免费，并与cloudflare合作，只要套个cloudflareCDN即可无限免费下载。</p>
<p>因此我们得到如下产品：</p>
<blockquote>
<p>10G存储空间免费</p>
<p>上行免费</p>
<p>下行免费</p>
<p>全球最可靠的云存储服务之一</p>
<p>全球最强的CDN云分发服务之一</p>
</blockquote>
<p>新建一个桶，随便取个名。注意要选<code>Public（公众）</code>！<del>这LAG机器翻译</del></p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319081732.png" alt=""></p>
<p>创建完之后，随便上传一个文件。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319082134.png" alt=""></p>
<p>俺们就发现它给我们分配了一个<code>https://f000.backblazeb2.com</code>的域名。</p>
<p>我们自己在<code>Cloudflare</code>挂一个域名，一定要开启CDN：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319082633.png" alt=""></p>
<p>如果你觉得域名太长，可以设置一个<code>Page Rule</code>：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200319082751.png" alt=""></p>
<p>不过只能<code>http</code>跳<code>https</code>，可惜了。</p>
<p>我目前仍然使用<code>Gayhub</code>图床，放大文件使用<code>B2</code>。</p>
<hr>
<p>2020/04/04更新：</p>
<p>建议参考<a href="/p/cf-worker-proxy/">万能的CLOUDFLARE WORKERS+JSProxy代理？！</a></p>
<p>参考资料：</p>
<ul>
<li><a href="https://cangshui.net/4221.html">免费对象云存储Backblaze | 沧水博客</a></li>
</ul>
]]></content><category scheme="https://raycoder.me/categories/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/" term="对象存储" label="对象存储"/><category scheme="https://raycoder.me/categories/%E7%BD%91%E7%AB%99/" term="网站" label="网站"/><category scheme="https://raycoder.me/tags/backblaze/" term="Backblaze" label="Backblaze"/><category scheme="https://raycoder.me/tags/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/" term="对象存储" label="对象存储"/><category scheme="https://raycoder.me/tags/%E7%99%BD%E5%AB%96/" term="白嫖" label="白嫖"/><category scheme="https://raycoder.me/tags/%E7%A6%8F%E5%88%A9/" term="福利" label="福利"/></entry><entry><title type="text">Chrome崩溃的一些解决办法</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/chrome-crashed/"/><id>https://raycoder.me/p/chrome-crashed/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-18T09:05:37+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">最近升级了电脑系统，打开Chrome崩溃了。 网络上的一些解决方法：在打开的快捷方式后添加 --test-type --no-sandbox，禁用沙盒。 这样在你双击快捷方式时浏览器可以正常打开，但是如果你在开始菜单打开，还是一……</summary><content type="html"><![CDATA[<p>最近升级了电脑系统，打开Chrome崩溃了。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200318090837.png" alt="喔唷，崩溃啦" title="喔唷，崩溃啦"></p>
<p>网络上的一些解决方法：在打开的快捷方式后添加<code> --test-type --no-sandbox</code>，禁用沙盒。</p>
<p>这样在你双击快捷方式时浏览器可以正常打开，但是如果你在开始菜单打开，还是一样会崩溃🙃。</p>
<p>在我自己的研究中发现，正解如下：</p>
<pre><code>操作系统名称	: Microsoft Windows 10 家庭 Insider Preview中文版
版本			: 10.0.19582 版本 19582
Chrome版本	: 版本 83.0.4087.0（正式版本）canary （64 位）
</code></pre><p>没错，我们应该更新到<code>Canary 金丝雀</code>版Chrome😎！</p>
<p>下载地址：<a href="https://www.google.cn/intl/zh-CN/chrome/canary/">https://www.google.cn/intl/zh-CN/chrome/canary/</a> | <a href="https://www.google.com/intl/zh-CN/chrome/canary/">https://www.google.com/intl/zh-CN/chrome/canary/</a></p>
<p>也就是预览版，经常会更新，不过终于不会崩溃了，也可以正常访问<code>Ray's Blog</code>了🐷</p>
]]></content><category scheme="https://raycoder.me/categories/chrome/" term="Chrome" label="Chrome"/><category scheme="https://raycoder.me/tags/chrome/" term="Chrome" label="Chrome"/></entry><entry><title type="text">Python学习笔记之assert关键字简析</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/python-assert/"/><id>https://raycoder.me/p/python-assert/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-18T08:22:33+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html"><![CDATA[什么是assert？它的中文名叫做断言。我们先来看一个简单的例子： 1 2 3 4 5 age = int(input()) if age&gt;=18: print(&#39;You can watch it!&#39;) else: print(&#39;You are too young!&#39;) 这个例子进行了一下18G操作，没有达到18岁的人会被拒之门外友善的提示。 不过，我们可以通过ass……]]></summary><content type="html"><![CDATA[<p>什么是<code>assert</code>？它的中文名叫做<code>断言</code>。我们先来看一个简单的例子：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">age</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">if</span> <span class="n">age</span><span class="o">&gt;=</span><span class="mi">18</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;You can watch it!&#39;</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;You are too young!&#39;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>这个例子进行了一下<yellow><del>18G</del></yellow>操作，没有达到18岁的人会被<del>拒之门外</del>友善的提示。</p>
<p>不过，我们可以通过<code>assert</code>关键字来实现同等的操作。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">age</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="mi">17</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">assert</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;pyshell#3&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
    <span class="k">assert</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span>
<span class="ne">AssertionError</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">age</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">input</span><span class="p">())</span>
<span class="k">try</span><span class="p">:</span>
    <span class="k">assert</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span>
    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;You can watch it!&#39;</span><span class="p">)</span>
<span class="k">except</span> <span class="ne">AssertionError</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s1">&#39;You are too young!&#39;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>这只是一个简单的例子，<code>assert</code>还可以进行更复杂的操作。</p>
<p>引用一段<a href="https://www.runoob.com/python3/python3-assert.html">菜鸟教程</a>。</p>
<p><code>assert</code>的语法格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">assert</span> <span class="n">expression</span>
</code></pre></td></tr></table>
</div>
</div><p>等价于：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="ow">not</span> <span class="n">expression</span><span class="p">:</span>
    <span class="k">raise</span> <span class="ne">AssertionError</span>
</code></pre></td></tr></table>
</div>
</div><p><code>assert</code>后面也可以紧跟参数:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">assert</span> <span class="n">expression</span> <span class="p">[,</span> <span class="n">arguments</span><span class="p">]</span>
</code></pre></td></tr></table>
</div>
</div><p>等价于：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">if</span> <span class="ow">not</span> <span class="n">expression</span><span class="p">:</span>
    <span class="k">raise</span> <span class="ne">AssertionError</span><span class="p">(</span><span class="n">arguments</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>如：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">assert</span> <span class="bp">True</span>     <span class="c1"># 条件为 true 正常执行</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">assert</span> <span class="bp">False</span>    <span class="c1"># 条件为 false 触发异常</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;stdin&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="ne">AssertionError</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">assert</span> <span class="mi">1</span><span class="o">==</span><span class="mi">1</span>    <span class="c1"># 条件为 true 正常执行</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">assert</span> <span class="mi">1</span><span class="o">==</span><span class="mi">2</span>    <span class="c1"># 条件为 false 触发异常</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;stdin&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="ne">AssertionError</span>

<span class="o">&gt;&gt;&gt;</span> <span class="k">assert</span> <span class="mi">1</span><span class="o">==</span><span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;1 不等于 2&#39;</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;stdin&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
<span class="ne">AssertionError</span><span class="p">:</span> <span class="mi">1</span> <span class="err">不等于</span> <span class="mi">2</span>
<span class="o">&gt;&gt;&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>以下实例判断当前系统是否为 Linux，如果不满足条件则直接触发异常，不必执行接下来的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">sys</span>
<span class="k">assert</span> <span class="p">(</span><span class="s1">&#39;linux&#39;</span> <span class="ow">in</span> <span class="n">sys</span><span class="o">.</span><span class="n">platform</span><span class="p">),</span> <span class="s2">&#34;该代码只能在 Linux 下执行&#34;</span>

<span class="c1"># 接下来要执行的代码</span>
</code></pre></td></tr></table>
</div>
</div><p>可以大大优化我们的代码，也可以减少<code>if</code>、<code>elif</code>、<code>else</code>的使用。</p>
<p>这个关键字也可以作校验用，比如我们从网页上下载了一个代码，可以用<code>assert</code>来断言本地代码与网页代码相同，否则报错。</p>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/python%E5%85%B3%E9%94%AE%E5%AD%97/" term="Python关键字" label="Python关键字"/><category scheme="https://raycoder.me/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/%E5%85%B3%E9%94%AE%E5%AD%97/" term="关键字" label="关键字"/><category scheme="https://raycoder.me/tags/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/></entry><entry><title type="text">我们国产语言木兰</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/ulang/"/><id>https://raycoder.me/p/ulang/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-16T16:24:19+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">论'木兰'语言</summary><content type="html"><![CDATA[<blockquote>
<p><strong>……出门看火伴，火伴皆惊忙：同行十二年，不知木兰是素贞。</strong></p>
</blockquote>
<p>没错，我们国产语言木兰<del>上线</del>发布了，真好！</p>
<p>你看这完美的图标！</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316162738.png" alt=""></p>
<p>再看这美妙的手感！</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316163330.png" /></p>
<p>我准备为之惊呼！</p>
<p>等下，这个图标……</p>
<p>这不是<code>Pyinstaller</code>打包完的图标吗？！</p>
<img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316163651.jpeg" style="width: 35%;height: 35%;"/>
<p>我们掏出<code>PyInstaller Extractor</code>（<a href="https://github.com/NeoTim/PyInstallerExtractor">https://github.com/NeoTim/PyInstallerExtractor</a>，<a href="https://sourceforge.net/projects/pyinstallerextractor/">https://sourceforge.net/projects/pyinstallerextractor/</a>）。</p>
<p>进行解包……</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">$ python pyinstxtractor.py ulang-0.2.2.exe
</code></pre></td></tr></table>
</div>
</div><p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316164435.png" alt=""></p>
<p>不愧是敢用<code>Pyinstaller</code>的语言</p>
<p>你好歹也加个图标啊！</p>
<p>让我们看看<code>ulang.runtime.env</code>节选</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">return</span> <span class="p">{</span>
    <span class="s2">&#34;print&#34;</span>             <span class="p">:</span> <span class="n">local_print</span><span class="p">,</span>
    <span class="s2">&#34;println&#34;</span>           <span class="p">:</span> <span class="k">lambda</span> <span class="o">*</span><span class="n">objs</span><span class="p">:</span> <span class="n">local_print</span><span class="p">(</span><span class="o">*</span><span class="n">objs</span><span class="p">,</span> <span class="o">**</span><span class="p">{</span><span class="s2">&#34;end&#34;</span><span class="p">:</span><span class="s2">&#34;</span><span class="se">\n</span><span class="s2">&#34;</span><span class="p">}),</span>
    <span class="s2">&#34;assert&#34;</span>            <span class="p">:</span> <span class="n">local_assert</span><span class="p">,</span>
    <span class="s2">&#34;len&#34;</span>               <span class="p">:</span> <span class="nb">len</span><span class="p">,</span>
    <span class="s2">&#34;enumerate&#34;</span>         <span class="p">:</span> <span class="nb">enumerate</span><span class="p">,</span>
    <span class="s2">&#34;all&#34;</span>               <span class="p">:</span> <span class="nb">all</span><span class="p">,</span>
    <span class="s2">&#34;any&#34;</span>               <span class="p">:</span> <span class="nb">any</span><span class="p">,</span>
    <span class="s2">&#34;range&#34;</span>             <span class="p">:</span> <span class="nb">range</span><span class="p">,</span>
    <span class="s2">&#34;round&#34;</span>             <span class="p">:</span> <span class="nb">round</span><span class="p">,</span>
    <span class="s2">&#34;input&#34;</span>             <span class="p">:</span> <span class="nb">input</span><span class="p">,</span>
    <span class="s2">&#34;reverse&#34;</span>           <span class="p">:</span> <span class="nb">reversed</span><span class="p">,</span>
    <span class="s2">&#34;super&#34;</span>             <span class="p">:</span> <span class="nb">super</span><span class="p">,</span>
    <span class="s2">&#34;locals&#34;</span>            <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="nb">locals</span><span class="p">(),</span>
    <span class="s2">&#34;bool&#34;</span>              <span class="p">:</span> <span class="nb">bool</span><span class="p">,</span>
    <span class="s2">&#34;float&#34;</span>             <span class="p">:</span> <span class="nb">float</span><span class="p">,</span>
    <span class="s2">&#34;int&#34;</span>               <span class="p">:</span> <span class="nb">int</span><span class="p">,</span>
    <span class="s2">&#34;str&#34;</span>               <span class="p">:</span> <span class="nb">str</span><span class="p">,</span>
    <span class="s2">&#34;list&#34;</span>              <span class="p">:</span> <span class="nb">list</span><span class="p">,</span>
    <span class="s2">&#34;dict&#34;</span>              <span class="p">:</span> <span class="nb">dict</span><span class="p">,</span>
    <span class="s2">&#34;set&#34;</span>               <span class="p">:</span> <span class="nb">set</span><span class="p">,</span>
    <span class="s2">&#34;tuple&#34;</span>             <span class="p">:</span> <span class="k">lambda</span> <span class="o">*</span><span class="n">args</span><span class="p">:</span> <span class="n">args</span><span class="p">,</span>
    <span class="s2">&#34;char&#34;</span>              <span class="p">:</span> <span class="nb">chr</span><span class="p">,</span>
    <span class="s2">&#34;ord&#34;</span>               <span class="p">:</span> <span class="nb">ord</span><span class="p">,</span>
    <span class="s2">&#34;bytes&#34;</span>             <span class="p">:</span> <span class="k">lambda</span> <span class="n">s</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s2">&#34;ascii&#34;</span><span class="p">:</span><span class="nb">bytes</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">encoding</span><span class="p">),</span>
    <span class="s2">&#34;typeof&#34;</span>            <span class="p">:</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">:</span> <span class="n">x</span><span class="o">.</span><span class="vm">__class__</span><span class="o">.</span><span class="vm">__name__</span><span class="p">,</span>
    <span class="s2">&#34;isa&#34;</span>               <span class="p">:</span> <span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">t</span><span class="p">:</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">t</span><span class="p">),</span>
    <span class="s2">&#34;max&#34;</span>               <span class="p">:</span> <span class="nb">max</span><span class="p">,</span>
    <span class="s2">&#34;min&#34;</span>               <span class="p">:</span> <span class="nb">min</span><span class="p">,</span>
    <span class="s2">&#34;map&#34;</span>               <span class="p">:</span> <span class="nb">map</span><span class="p">,</span>
    <span class="s2">&#34;filter&#34;</span>            <span class="p">:</span> <span class="nb">filter</span><span class="p">,</span>
    <span class="s2">&#34;zip&#34;</span>               <span class="p">:</span> <span class="nb">zip</span><span class="p">,</span>
    <span class="s2">&#34;staticmethod&#34;</span>      <span class="p">:</span> <span class="nb">staticmethod</span><span class="p">,</span>
    <span class="s2">&#34;property&#34;</span>          <span class="p">:</span> <span class="nb">property</span><span class="p">,</span>
    <span class="s2">&#34;ceil&#34;</span>              <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">ceil</span><span class="p">,</span>
    <span class="s2">&#34;floor&#34;</span>             <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">floor</span><span class="p">,</span>
    <span class="s2">&#34;fabs&#34;</span>              <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">fabs</span><span class="p">,</span>
    <span class="s2">&#34;sqrt&#34;</span>              <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">,</span>
    <span class="s2">&#34;log&#34;</span>               <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">log</span><span class="p">,</span>
    <span class="s2">&#34;log10&#34;</span>             <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">log10</span><span class="p">,</span>
    <span class="s2">&#34;exp&#34;</span>               <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">exp</span><span class="p">,</span>
    <span class="s2">&#34;pow&#34;</span>               <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">pow</span><span class="p">,</span>
    <span class="s2">&#34;sin&#34;</span>               <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">sin</span><span class="p">,</span>
    <span class="s2">&#34;cos&#34;</span>               <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">cos</span><span class="p">,</span>
    <span class="s2">&#34;tan&#34;</span>               <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">tan</span><span class="p">,</span>
    <span class="s2">&#34;asin&#34;</span>              <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">asin</span><span class="p">,</span>
    <span class="s2">&#34;acos&#34;</span>              <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">acos</span><span class="p">,</span>
    <span class="s2">&#34;atan&#34;</span>              <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">atan</span><span class="p">,</span>
    <span class="s2">&#34;spawn&#34;</span>             <span class="p">:</span> <span class="n">builtin_spawn</span><span class="p">,</span>
    <span class="s2">&#34;kill&#34;</span>              <span class="p">:</span> <span class="n">builtin_kill</span><span class="p">,</span>
    <span class="s2">&#34;self&#34;</span>              <span class="p">:</span> <span class="n">builtin_self</span><span class="p">,</span>
    <span class="s2">&#34;quit&#34;</span>              <span class="p">:</span> <span class="n">sys</span><span class="o">.</span><span class="n">exit</span><span class="p">,</span>
    <span class="s2">&#34;open&#34;</span>              <span class="p">:</span> <span class="nb">open</span><span class="p">,</span>
    <span class="s2">&#34;install&#34;</span>           <span class="p">:</span> <span class="n">pip_install</span><span class="p">,</span>
    <span class="s2">&#34;time&#34;</span>              <span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">,</span>
    <span class="s2">&#34;year&#34;</span>              <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">year</span><span class="p">,</span>
    <span class="s2">&#34;month&#34;</span>             <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">month</span><span class="p">,</span>
    <span class="s2">&#34;day&#34;</span>               <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">day</span><span class="p">,</span>
    <span class="s2">&#34;hour&#34;</span>              <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">hour</span><span class="p">,</span>
    <span class="s2">&#34;minute&#34;</span>            <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">minute</span><span class="p">,</span>
    <span class="s2">&#34;second&#34;</span>            <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">second</span><span class="p">,</span>
    <span class="s2">&#34;microsecond&#34;</span>       <span class="p">:</span> <span class="k">lambda</span><span class="p">:</span> <span class="n">datetime</span><span class="o">.</span><span class="n">now</span><span class="p">()</span><span class="o">.</span><span class="n">microsecond</span><span class="p">,</span>
    <span class="s2">&#34;sleep&#34;</span>             <span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">,</span>
    <span class="s2">&#34;delay&#34;</span>             <span class="p">:</span> <span class="k">lambda</span> <span class="n">ms</span><span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">ms</span> <span class="o">/</span> <span class="mi">1000</span><span class="p">),</span>
    <span class="s2">&#34;delayMicroseconds&#34;</span> <span class="p">:</span> <span class="k">lambda</span> <span class="n">us</span><span class="p">:</span> <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="n">us</span> <span class="o">/</span> <span class="mi">1000000</span><span class="p">),</span>
    <span class="s2">&#34;PI&#34;</span>                <span class="p">:</span> <span class="n">math</span><span class="o">.</span><span class="n">pi</span><span class="p">,</span>
    <span class="s2">&#34;ARGV&#34;</span>              <span class="p">:</span> <span class="n">argv</span><span class="p">,</span>
    <span class="s2">&#34;__builtins__&#34;</span>      <span class="p">:</span> <span class="n">fix_builtins</span><span class="p">(</span>
        <span class="p">{</span>
            <span class="s2">&#34;__import__&#34;</span>      <span class="p">:</span> <span class="n">local_import</span><span class="p">,</span>
            <span class="s2">&#34;__build_class__&#34;</span> <span class="p">:</span> <span class="n">__build_class__</span><span class="p">,</span>
            <span class="s2">&#34;__name__&#34;</span>        <span class="p">:</span> <span class="s2">&#34;__main__&#34;</span><span class="p">,</span>
            <span class="s2">&#34;__file__&#34;</span>        <span class="p">:</span> <span class="n">fname</span><span class="p">,</span>
            <span class="s2">&#34;__print__&#34;</span>       <span class="p">:</span> <span class="n">eval_print</span><span class="p">,</span>
            <span class="s2">&#34;___&#34;</span>             <span class="p">:</span> <span class="bp">None</span><span class="p">,</span>
            <span class="s2">&#34;__div__&#34;</span>         <span class="p">:</span> <span class="n">__builtin_div</span><span class="p">,</span>
            <span class="s2">&#34;__rem__&#34;</span>         <span class="p">:</span> <span class="n">__builtin_rem</span><span class="p">,</span>
        <span class="p">}</span>
    <span class="p">),</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>不愧是国产大项目</p>
<div class="mermaid">
graph TD;
    获取指令-->替换成Python代码;
    替换成Python代码-->exec;
</div>
<p>参考：</p>
<ul>
<li><a href="https://www.zhihu.com/question/366509495">https://www.zhihu.com/question/366509495</a></li>
<li><a href="https://www.zhihu.com/question/366698484">https://www.zhihu.com/question/366698484</a></li>
<li><a href="https://github.com/Myts2/ulang">https://github.com/Myts2/ulang</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/104488265">https://zhuanlan.zhihu.com/p/104488265</a></li>
<li><a href="https://github.com/loopyme/ulang-uncompile">https://github.com/loopyme/ulang-uncompile</a></li>
</ul>]]></content><category scheme="https://raycoder.me/categories/%E5%90%90%E6%A7%BD/" term="吐槽" label="吐槽"/><category scheme="https://raycoder.me/tags/ulang/" term="Ulang" label="Ulang"/><category scheme="https://raycoder.me/tags/%E7%B4%A0%E8%B4%9E/" term="素贞" label="素贞"/></entry><entry><title type="text">白嫖Office365</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/%E7%99%BD%E5%AB%96office365/"/><id>https://raycoder.me/p/%E7%99%BD%E5%AB%96office365/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-16T12:57:27+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Office365-KMS服务器激活</summary><content type="html"><![CDATA[<blockquote>
<p><strong>最近系统升级到1909, 送了我一套Office365. 我也很无奈啊, 送了让我激活也是够了...</strong></p>
<!-- more -->
</blockquote>
<p>用了各种激活软件都无效，比如<a href="https://otp.landian.vip">Office Tool Plus</a>. 根据国外某网站的资料，编写了一个批处理文件，命名为<code>Office365激活.bat</code>. ( 其实叫什么都可以 ) 代码如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">@echo off
title Activate Office <span class="m">365</span> ProPlus <span class="k">for</span> FREE - MSGuides.com<span class="p">&amp;</span>cls<span class="p">&amp;</span><span class="nb">echo</span> <span class="o">============================================================================</span><span class="p">&amp;</span><span class="nb">echo</span> <span class="c1">#Project: Activating Microsoft software products for FREE without software&amp;echo ============================================================================&amp;echo.&amp;echo #Supported products: Office 365 ProPlus (x86-x64)&amp;echo.&amp;echo.&amp;(if exist &#34;%ProgramFiles%\Microsoft Office\Office16\ospp.vbs&#34; cd /d &#34;%ProgramFiles%\Microsoft Office\Office16&#34;)&amp;(if exist &#34;%ProgramFiles(x86)%\Microsoft Office\Office16\ospp.vbs&#34; cd /d &#34;%ProgramFiles(x86)%\Microsoft Office\Office16&#34;)&amp;(for /f %%x in (&#39;dir /b ..\root\Licenses16\proplusvl_kms*.xrm-ms&#39;) do cscript ospp.vbs /inslic:&#34;..\root\Licenses16\%%x&#34; &gt;nul)&amp;(for /f %%x in (&#39;dir /b ..\root\Licenses16\proplusvl_mak*.xrm-ms&#39;) do cscript ospp.vbs /inslic:&#34;..\root\Licenses16\%%x&#34; &gt;nul)&amp;echo.&amp;echo ============================================================================&amp;echo Activating your Office...&amp;cscript //nologo ospp.vbs /unpkey:WFG99 &gt;nul&amp;cscript //nologo ospp.vbs /unpkey:DRTFM &gt;nul&amp;cscript //nologo ospp.vbs /unpkey:BTDRB &gt;nul&amp;cscript //nologo ospp.vbs /inpkey:XQNVK-8JYDB-WJ9W3-YJ8YR-WFG99 &gt;nul&amp;set i=1</span>
:server
<span class="k">if</span> %i%<span class="o">==</span><span class="m">1</span> <span class="nb">set</span> <span class="nv">KMS_Sev</span><span class="o">=</span>kms7.MSGuides.com
<span class="k">if</span> %i%<span class="o">==</span><span class="m">2</span> <span class="nb">set</span> <span class="nv">KMS_Sev</span><span class="o">=</span>kms8.MSGuides.com
<span class="k">if</span> %i%<span class="o">==</span><span class="m">3</span> <span class="nb">set</span> <span class="nv">KMS_Sev</span><span class="o">=</span>kms9.MSGuides.com
<span class="k">if</span> %i%<span class="o">==</span><span class="m">4</span> goto notsupported
cscript //nologo ospp.vbs /sethst:%KMS_Sev% &gt;nul<span class="p">&amp;</span><span class="nb">echo</span> <span class="o">============================================================================</span><span class="p">&amp;</span>echo.<span class="p">&amp;</span>echo.
cscript //nologo ospp.vbs /act <span class="p">|</span> find /i <span class="s2">&#34;successful&#34;</span> <span class="o">&amp;&amp;</span> <span class="o">(</span>echo.<span class="p">&amp;</span><span class="nb">echo</span> <span class="o">============================================================================</span><span class="p">&amp;</span>echo.<span class="p">&amp;</span><span class="nb">echo</span> <span class="c1">#My official blog: MSGuides.com&amp;echo.&amp;echo #How it works: bit.ly/kms-server&amp;echo.&amp;echo #Please feel free to contact me at msguides.com@gmail.com if you have any questions or concerns.&amp;echo.&amp;echo #Please consider supporting this project: donate.msguides.com&amp;echo #Your support is helping me keep my servers running everyday!&amp;echo.&amp;echo ============================================================================&amp;choice /n /c YN /m &#34;Would you like to visit my blog [Y,N]?&#34; &amp; if errorlevel 2 exit) || (echo The connection to my KMS server failed! Trying to connect to another one... &amp; echo Please wait... &amp; echo. &amp; echo. &amp; set /a i+=1 &amp; goto server)</span>
explorer <span class="s2">&#34;http://MSGuides.com&#34;</span><span class="p">&amp;</span>goto halt
:notsupported
echo.<span class="p">&amp;</span><span class="nb">echo</span> <span class="o">============================================================================</span><span class="p">&amp;</span><span class="nb">echo</span> Sorry! Your version is not supported.<span class="p">&amp;</span><span class="nb">echo</span> Please try installing the latest version here: bit.ly/odt2k16
:halt
pause
</code></pre></td></tr></table>
</div>
</div><p>右键以管理员身份运行. 如有什么问题请在评论区反馈。</p>
<p>参考资料：</p>
<ul>
<li><a href="https://kms.cangshui.net/">沧水KMS</a></li>
</ul>
]]></content><category scheme="https://raycoder.me/categories/%E6%89%B9%E5%A4%84%E7%90%86/" term="批处理" label="批处理"/><category scheme="https://raycoder.me/tags/%E5%B7%A5%E5%85%B7/" term="工具" label="工具"/><category scheme="https://raycoder.me/tags/%E7%A6%8F%E5%88%A9/" term="福利" label="福利"/><category scheme="https://raycoder.me/tags/office/" term="Office" label="Office"/><category scheme="https://raycoder.me/tags/%E7%A0%B4%E8%A7%A3/" term="破解" label="破解"/></entry><entry><title type="text">How to read "Google" correctly?</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/how-to-read-google-correctly/"/><id>https://raycoder.me/p/how-to-read-google-correctly/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-16T12:05:28+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">正确念好"谷歌"</summary><content type="html"><![CDATA[<div id="player"></div>
<script type="text/javascript" src="https://player.dogecloud.com/js/loader"></script>
<script type="text/javascript">
var player = new DogePlayer({
    container: document.getElementById('player'),
    userId: 1136,
    vcode: '4a72f3273d07ffc6',
    autoPlay: false
});
</script>]]></content><category scheme="https://raycoder.me/categories/%E6%90%9E%E7%AC%91/" term="搞笑" label="搞笑"/><category scheme="https://raycoder.me/tags/%E8%B0%B7%E6%AD%8C/" term="谷歌" label="谷歌"/><category scheme="https://raycoder.me/tags/%E6%97%A5%E5%B8%B8/" term="日常" label="日常"/><category scheme="https://raycoder.me/tags/%E6%90%9E%E7%AC%91/" term="搞笑" label="搞笑"/></entry><entry><title type="text">Hugo-Python(伪)自动部署</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/hugo-auto-deploy/"/><id>https://raycoder.me/p/hugo-auto-deploy/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-16T09:08:23+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">Hugo自动部署</summary><content type="html"><![CDATA[<p>最近无聊就写了个<code>Hugo自动部署</code>的Python脚本。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>
<span class="c1"># coding:utf-8</span>

<span class="kn">from</span> <span class="nn">os</span> <span class="kn">import</span> <span class="n">system</span>
<span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">ctime</span>

<span class="n">system</span><span class="p">(</span><span class="s1">&#39;start cmd /K &#34;cd /d D:/workspace/hugoblog&amp;hugo&amp;cd public&amp;git add -A&amp;git commit -m </span><span class="se">\&#34;</span><span class="s1">Site updated: </span><span class="si">%s</span><span class="se">\&#34;</span><span class="s1">&amp;git push -u origin master&#34;&#39;</span> <span class="o">%</span> <span class="nb">str</span><span class="p">(</span><span class="n">ctime</span><span class="p">()))</span>
</code></pre></td></tr></table>
</div>
</div><p>假的自动，其实就是一次性执行所有部署命令。</p>
<p>自动部署请参考<a href="/p/deploy-your-hugo-and-hexo-blog-to-netlify">Hugo-MemE/Hexo(真)自动推送部署至Netlify</a></p>]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/hugo/" term="Hugo" label="Hugo"/><category scheme="https://raycoder.me/tags/hugo/" term="Hugo" label="Hugo"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/git/" term="Git" label="Git"/></entry><entry><title type="text">【转】适合爬虫使用的API</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/spider-api/"/><id>https://raycoder.me/p/spider-api/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-08T17:04:23+08:00</published><summary type="html">一、网易云音乐 【转】https://zhuanlan.zhihu.com/p/30246788 调用地址：https://api.imjad.cn/cloudmusic/ 在以上网址后紧跟两个参数完成具体……</summary><content type="html"><![CDATA[<h3 id="一网易云音乐">一、网易云音乐</h3>
<p>【转】<a href="https://zhuanlan.zhihu.com/p/30246788">https://zhuanlan.zhihu.com/p/30246788</a>
调用地址：<a href="https://api.imjad.cn/cloudmusic/">https://api.imjad.cn/cloudmusic/</a>
在以上网址后紧跟两个参数完成具体请求：</p>
<ol>
<li>type （默认值为type=song）</li>
<li>id（歌曲的id）
其中type的所有可取的值如下：</li>
</ol>
<table>
<thead>
<tr>
<th align="center">type</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">song</td>
<td align="center">单曲</td>
</tr>
<tr>
<td align="center">lyric</td>
<td align="center">歌词</td>
</tr>
<tr>
<td align="center">comments</td>
<td align="center">评论</td>
</tr>
<tr>
<td align="center">detail</td>
<td align="center">歌曲详情</td>
</tr>
<tr>
<td align="center">artist</td>
<td align="center">歌手</td>
</tr>
<tr>
<td align="center">album</td>
<td align="center">专辑</td>
</tr>
<tr>
<td align="center">playlist</td>
<td align="center">歌单</td>
</tr>
<tr>
<td align="center">mv</td>
<td align="center">MV</td>
</tr>
<tr>
<td align="center">djradio</td>
<td align="center">主播电台</td>
</tr>
<tr>
<td align="center">dj</td>
<td align="center">主播电台单曲ID</td>
</tr>
<tr>
<td align="center">detail_dj</td>
<td align="center">主播电台单曲详情</td>
</tr>
<tr>
<td align="center">search</td>
<td align="center">搜索</td>
</tr>
</tbody>
</table>
<ol>
<li>type=song
当type=song时，返回歌曲的下载地址信息（和其他不是特别有用的信息）.
所以当我们知道一首歌的id后，就可以用type=song来获取到这首歌的下载链接.
完整请求示例：
请求id为28012031的歌曲下载地址
<a href="https://api.imjad.cn/cloudmusic/?type=song&amp;id=28012031">https://api.imjad.cn/cloudmusic/?type=song&amp;id=28012031</a>
应当指出：此时返回的歌曲比特率为默认值128000，如果你需要音质更高的资源，可以再尾部再跟上参数br,br的取值决定音质，大概是这样：</li>
</ol>
<table>
<thead>
<tr>
<th align="center">参数名</th>
<th align="center">含义</th>
<th align="center">默认</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">br</td>
<td align="center"><code>int</code>，指定歌曲码率，可选：64000，128000，198000，320000</td>
<td align="center">128000</td>
</tr>
</tbody>
</table>
<p>完整请求示例：
请求id为28012031的歌曲下载地址，br为320000
<a href="https://api.imjad.cn/cloudmusic/?type=song&amp;id=28012031&amp;br=320000">https://api.imjad.cn/cloudmusic/?type=song&amp;id=28012031&amp;br=320000</a>
我不确定是不是每一首歌都有br=320000的版本哦...(￣▽￣&quot;)</p>
<p>2.type=lyric
当我们知道一首歌的id后，就可以用type=lyric来获取到这首歌的歌词
完整请求示例：
请求id为28012031歌曲的歌词信息
<a href="https://api.imjad.cn/cloudmusic/?type=lyric&amp;id=28012031">https://api.imjad.cn/cloudmusic/?type=lyric&amp;id=28012031</a>
返回的歌词信息中会带有时间轴0.0</p>
<p>3.type=comments
当我们知道一首歌的id后，就可以用type=comments来获取到这首歌的评论信息
完整请求示例：
请求id为28012031歌曲的评论信息
<a href="https://api.imjad.cn/cloudmusic/?type=comments&amp;id=28012031">https://api.imjad.cn/cloudmusic/?type=comments&amp;id=28012031</a>
返回的数据中有一个json数组专门存储热评，另一个json数组专门存储最新评论。
每一条评论中包含非常多的重要信息，你需要用到的里面基本上都有 ・㉨・</p>
<p>4.type=detail
返回一些比较基本的信息，歌曲名歌曲id，歌手名歌手id，专辑封面图之类的
完整请求示例：
请求id为28012031歌曲的detail信息
<a href="https://api.imjad.cn/cloudmusic/?type=detail&amp;id=28012031">https://api.imjad.cn/cloudmusic/?type=detail&amp;id=28012031</a>
你试试把detail加个s...居然也有数据返回...(´・ω・`)</p>
<p>5.type=playlist
（playlist前面的几个值我就不具体说了，有需要的人自己试试就行）
当我们知道一个歌单的id后，就可以用type=playlist来获取到这个歌单的相关信息，例如创建者的信息啊，封面图啊，歌单被播放的次数啊....当然还有最重要的歌单内所有歌曲的简略信息（包含歌曲id等等）
完整请求示例：
请求歌单id为309390784的歌单信息
<a href="https://api.imjad.cn/cloudmusic/?type=playlist&amp;id=309390784">https://api.imjad.cn/cloudmusic/?type=playlist&amp;id=309390784</a>
当然你也可以把id改成你自己喜欢的一个歌单，至于歌单id怎么获取嘛，你在网易云音乐的歌单上按右键，复制链接，拿去浏览器里打开，地址栏里面可以看到这个歌单的id┌( ಠ_ಠ)┘</p>
<p>6.type=search
这个我感觉挺重要的，仔细看好了
当你指定type=search时，后面需要紧跟参数search_type，用来确定你到底需要搜个什么
search_type可以取的值如下：</p>
<table>
<thead>
<tr>
<th align="center">search_type</th>
<th align="center">含义</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">1</td>
<td align="center">单曲</td>
</tr>
<tr>
<td align="center">10</td>
<td align="center">专辑</td>
</tr>
<tr>
<td align="center">100</td>
<td align="center">歌手</td>
</tr>
<tr>
<td align="center">1000</td>
<td align="center">歌单</td>
</tr>
<tr>
<td align="center">1002</td>
<td align="center">用户</td>
</tr>
<tr>
<td align="center">1004</td>
<td align="center">mv</td>
</tr>
<tr>
<td align="center">1006</td>
<td align="center">歌词</td>
</tr>
<tr>
<td align="center">1009</td>
<td align="center">主播电台</td>
</tr>
</tbody>
</table>
<p>1.search_type=1
默认情况下search_type的值为1，搜索单曲。后面紧跟s=xxxxx来指定搜索的关键字
完整请求示例：
搜索单曲，关键字为cocoon（歌名）
<a href="https://api.imjad.cn/cloudmusic/?type=search&amp;search_type=1&amp;s=cocoon">https://api.imjad.cn/cloudmusic/?type=search&amp;search_type=1&amp;s=cocoon</a>
返回很多歌名为cocoon的歌曲信息，大概返回多少首我不知道，你需要的里面应该有..</p>
<p>2.search_type=1000
搜索歌单。用歌单名用作关键字，来搜索歌单这样的简单东西就不说了，这里提一下另外一点，出了歌单名之外，你可以用用户名来作为关键字，这样返回的是该用户创建的所有歌单
完整请求示例：
搜索歌单，用户CeuiLiSA所创建的所有歌单（我自己的用户名）
<a href="https://api.imjad.cn/cloudmusic/?type=search&amp;search_type=1000&amp;s=CeuiLiSA">https://api.imjad.cn/cloudmusic/?type=search&amp;search_type=1000&amp;s=CeuiLiSA</a>
返回的是歌单的简略信息，没有歌单内的具体的歌。只有id啊封面啊之类的内容，但是你只要有了歌单id，那就可以取得所有你需要的信息啦。。</p>
<p>3.search_type=1002
这样就可以搜索到网易云音乐的某个用户信息了。返回的用户信息不多不少，刚好可以用来做用户信息展示的页面。
完整请求示例：
搜索用户，关键字为CeuiLiSA。
<a href="https://api.imjad.cn/cloudmusic/?type=search&amp;search_type=1002&amp;s=CeuiLiSA">https://api.imjad.cn/cloudmusic/?type=search&amp;search_type=1002&amp;s=CeuiLiSA</a></p>
]]></content><category scheme="https://raycoder.me/tags/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/api/" term="Api" label="Api"/></entry><entry><title type="text">Python学习笔记之exec()函数简析</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/python-exec/"/><id>https://raycoder.me/p/python-exec/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-06T00:44:34+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">exec()函数的作用：动态执行python代码。也就是说exec()可以执行复杂的python代码，而不像eval()函数那样只能计算一个表达式的值。 【转】https://www.jianshu.c……</summary><content type="html"><![CDATA[<p><code>exec()</code>函数的作用：动态执行python代码。也就是说<code>exec()</code>可以执行复杂的python代码，而不像<code>eval()</code>函数那样只能计算一个表达式的值。
【转】<a href="https://www.jianshu.com/p/3cf0a649e7bc">https://www.jianshu.com/p/3cf0a649e7bc</a>
举一个简单的小例子，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">12</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">13</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">exec</span><span class="p">(</span><span class="s2">&#34;answer=i*j&#34;</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="s2">&#34;Answer is </span><span class="si">%s</span><span class="s2">&#34;</span><span class="o">%</span><span class="n">answer</span><span class="p">)</span>
<span class="n">Answer</span> <span class="ow">is</span> <span class="mi">156</span>
</code></pre></td></tr></table>
</div>
</div><p>这表明第三句的exec()函数能够正确地执行Python代码，并且能将计算结果赋予answer变量，就像真正的Python代码一样。
那么，我们能不能让exec()函数执行一个复杂的Python代码呢？Why not?请看一下例子：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">func</span> <span class="o">=</span> <span class="s2">&#34;def fact(n):</span><span class="se">\n\t</span><span class="s2">return 1 if n==1 else n*fact(n-1)&#34;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">exec</span><span class="p">(</span><span class="n">func</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="n">fact</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
<span class="mi">120</span>
</code></pre></td></tr></table>
</div>
</div><p>可能有些读者纳了闷了，这些代码不是直接能够在Python中执行吗，为何还要多此一举地把它写成字符串，并用exec()执行呢？笔者的答案是，刚才的例子只是为了演示exec()函数的基本用法，它的强大之处远不止于此。
在实际项目中，我们有些时候会将Python代码写入一些文件中，举个例子，如以下的eg.txt,它储存了我们想要的Python代码，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">fact</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">n</span><span class="o">==</span><span class="mi">1</span><span class="p">:</span>
            <span class="k">return</span> <span class="mi">1</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">n</span><span class="o">*</span><span class="n">fact</span><span class="p">(</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
    <span class="o">...</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">t</span> <span class="o">=</span> <span class="n">fact</span><span class="p">(</span><span class="mi">6</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="n">t</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>请再次注意，这是一个txt格式的Python代码。那么，我们如何调用它呢？答案就是exec()函数，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;E://eg.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
        <span class="n">s</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">()</span>
    <span class="o">...</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">exec</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
<span class="mi">720</span>
</code></pre></td></tr></table>
</div>
</div><p>在上述代码中，我们先读取eg.txt文件的内容，再转交exec()函数执行。</p>
<p>是不是有点棒呢？除了能执行string和code object外，还可以在exec()函数中加入参数,参数的传递可以写成字典(dict)形式。具体的使用方法可以参考下面的例子：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">10</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">expr</span> <span class="o">=</span> <span class="s2">&#34;&#34;&#34;
</span><span class="s2">        z = 30
</span><span class="s2">        sum = x + y + z
</span><span class="s2">        print(sum)
</span><span class="s2">    &#34;&#34;&#34;</span>
    <span class="o">...</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">def</span> <span class="nf">func</span><span class="p">():</span>
        <span class="n">y</span> <span class="o">=</span> <span class="mi">20</span>
        <span class="k">exec</span><span class="p">(</span><span class="n">expr</span><span class="p">)</span>
        <span class="k">exec</span><span class="p">(</span><span class="n">expr</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;x&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;y&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">})</span>
        <span class="k">exec</span><span class="p">(</span><span class="n">expr</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;x&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;y&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">},</span> <span class="p">{</span><span class="s1">&#39;y&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">:</span> <span class="mi">4</span><span class="p">})</span>
    <span class="o">...</span>
<span class="o">&gt;&gt;&gt;</span> <span class="n">func</span><span class="p">()</span>
<span class="mi">60</span>
<span class="mi">33</span>
<span class="mi">34</span>
</code></pre></td></tr></table>
</div>
</div><p>在expr语句中，有三个变量x,y,z,其中z值已给定，我们可以在exec()函数外指定x,y的值，也可以在exec()函数中以字典的形式指定x,y的值。在最后的语句中，我们给出了x,y,z的值，并且y值重复，exec()函数接收后面一个y值，且z值传递不起作用，因此输出结果为34。</p>
<p><code>exec()</code>函数的标准格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">exec</span><span class="p">(</span><span class="nb">object</span><span class="p">[,</span> <span class="nb">globals</span><span class="p">[,</span> <span class="nb">locals</span><span class="p">]])</span>
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）。1 如果是代码对象，它将被直接执行。在任何情况下，被执行的代码都需要和文件输入一样是有效的（见参考手册中关于文件输入的章节）。请注意即使在传递给 exec() 函数的代码的上下文中，return 和 yield 语句也不能在函数定义之外使用。该函数返回值是 None 。</p>
</blockquote>
<p>exec和eval都可以执行single mode的代码；exec只是计算表达式，本身返回为None，因此使用exec计算表达式虽然可以计算出结果，但是返回值为None。而eval只能执行单个的表达式，返回表达式的结果。</p>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/python%E5%85%B3%E9%94%AE%E5%AD%97/" term="Python关键字" label="Python关键字"/><category scheme="https://raycoder.me/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/><category scheme="https://raycoder.me/tags/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/" term="内置函数" label="内置函数"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/python%E8%BF%9B%E9%98%B6/" term="Python进阶" label="Python进阶"/><category scheme="https://raycoder.me/tags/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/></entry><entry><title type="text">Python学习笔记之eval()函数简析</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/python-eval/"/><id>https://raycoder.me/p/python-eval/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-03-05T20:20:53+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html"><![CDATA[一个最基本的eval()函数的格式应该如下： 1 2 3 &gt;&gt;&gt; command = &#39;print(\&#39;Hello world!\&#39;)&#39; &gt;&gt;&gt; eval(command) Hello world! 没错，eval函数是一个可以让字符串转换为表达式的内置函数（注意eval()不支持任何形式的赋值操作，而不能是复杂的代码逻辑）。 ev……]]></summary><content type="html"><![CDATA[<p>一个最基本的<code>eval()</code>函数的格式应该如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">command</span> <span class="o">=</span> <span class="s1">&#39;print(</span><span class="se">\&#39;</span><span class="s1">Hello world!</span><span class="se">\&#39;</span><span class="s1">)&#39;</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">eval</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
<span class="n">Hello</span> <span class="n">world</span><span class="err">!</span>
</code></pre></td></tr></table>
</div>
</div><p>没错，eval函数是一个可以让字符串转换为表达式的内置函数（注意<code>eval()</code>不支持任何形式的赋值操作，而不能是复杂的代码逻辑）。
<code>eval()</code>函数不仅可以执行代码，还可以作如下操作：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;[1, 2, 3]&#39;</span><span class="p">)</span> <span class="c1">#字符串转列表</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;(1, 2, 3)&#39;</span><span class="p">)</span> <span class="c1">#字符串转元组</span>
<span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;{&#34;one&#34;: 1, &#34;two&#34;: 2, &#34;three&#34;: 3}&#39;</span><span class="p">)</span> <span class="c1">#字符串转字典</span>
<span class="p">{</span><span class="s1">&#39;one&#39;</span><span class="p">:</span> <span class="mi">1</span><span class="p">,</span> <span class="s1">&#39;two&#39;</span><span class="p">:</span> <span class="mi">2</span><span class="p">,</span> <span class="s1">&#39;three&#39;</span><span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;0o187&#39;</span><span class="p">)</span>
<span class="mi">0</span><span class="n">o187</span>
</code></pre></td></tr></table>
</div>
</div><p><code>eval()</code>函数的完整格式如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="nb">eval</span><span class="p">(</span><span class="n">expression</span><span class="p">[,</span> <span class="nb">globals</span><span class="p">[,</span> <span class="nb">locals</span><span class="p">]])</span>
</code></pre></td></tr></table>
</div>
</div><p><code>expression</code>: 表达式。
<code>globals</code>:  变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。
<code>locals</code>:  变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</p>
<p>当后两个参数都为空时，很好理解，就是一个string类型的算术表达式，计算出结果即可。等价于eval(expression)。
当locals参数为空，globals参数不为空时，先查找globals参数中是否存在变量，并计算。
当两个参数都不为空时，先查找locals参数，再查找globals参数。
<del>无良</del>引用一段Python官方的文档：</p>
<blockquote>
<p>eval(expression[, globals[, locals]])
实参是一个字符串，以及可选的 globals 和 locals。globals 实参必须是一个字典。locals 可以是任何映射对象。
expression 参数会作为一个 Python 表达式（从技术上说是一个条件列表）被解析并求值，并使用globals 和 locals 字典作为全局和局部命名空间。 如果 globals 字典存在且不包含以 <code>__builtins__ </code>为键的值，则会在解析 expression 之前插入以此为键的对内置模块 <a href="https://docs.python.org/zh-cn/3/library/builtins.html#module-builtins">builtins</a> 的引用。 这意味着 expression 通常具有对标准 <a href="https://docs.python.org/zh-cn/3/library/builtins.html#module-builtins">builtins</a> 模块的完全访问权限且受限的环境会被传播。 如果省略 locals 字典则其默认值为 globals 字典。 如果两个字典同时省略，则表达式执行时会使用 eval() 被调用的环境中的 globals 和 locals。 请注意，eval() 并没有对外围环境下的 (非局部)<a href="https://docs.python.org/zh-cn/3/glossary.html#term-nested-scope">嵌套作用域</a> 的访问权限。
返回值就是表达式的求值结果。 语法错误将作为异常被报告。 例如：
&gt;&gt;&gt; x = 1
&gt;&gt;&gt; eval('x+1')
2
这个函数也可以用来执行任何代码对象（如<a href="https://docs.python.org/zh-cn/3/library/functions.html#compile">compile()</a>创建的）。这种情况下，参数是代码对象，而不是字符串。如果编译该对象时的 mode 实参是<code>'exec'</code> 那么 eval() 返回值为 <code>None </code>
提示： exec() 函数支持动态执行语句。 <a href="https://docs.python.org/zh-cn/3/library/functions.html#globals">globals()</a> 和 <a href="https://docs.python.org/zh-cn/3/library/functions.html#locals">locals()</a> 函数各自返回当前的全局和本地字典，因此您可以将它们传递给 eval() 或 <a href="https://docs.python.org/zh-cn/3/library/functions.html#exec">exec()</a> 来使用。</p>
</blockquote>
<hr>
<p>实战：</p>
<h3 id="传递全局变量">传递全局变量</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="s2">&#34;{&#39;name&#39;:&#39;linux&#39;,&#39;age&#39;:age}&#34;</span><span class="p">,{</span><span class="s2">&#34;age&#34;</span><span class="p">:</span><span class="mi">1822</span><span class="p">}))</span>
<span class="p">{</span><span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="s1">&#39;linux&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">:</span> <span class="mi">1822</span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="传递本地变量">传递本地变量</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="n">age</span><span class="o">=</span><span class="mi">18</span>
<span class="o">&gt;&gt;&gt;</span> <span class="k">print</span><span class="p">(</span><span class="nb">eval</span><span class="p">(</span><span class="s2">&#34;{&#39;name&#39;:&#39;linux&#39;,&#39;age&#39;:age}&#34;</span><span class="p">,{</span><span class="s2">&#34;age&#34;</span><span class="p">:</span><span class="mi">1822</span><span class="p">},</span><span class="nb">locals</span><span class="p">()))</span>
<span class="p">{</span><span class="s1">&#39;name&#39;</span><span class="p">:</span> <span class="s1">&#39;linux&#39;</span><span class="p">,</span> <span class="s1">&#39;age&#39;</span><span class="p">:</span> <span class="mi">18</span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="传递参数其实可以如下实现伪">传递参数其实可以如下实现（伪）</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;print&#39;</span><span class="p">)(</span><span class="s1">&#39;123&#39;</span><span class="p">)</span>
<span class="mi">123</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="不可进行任何形式的赋值">不可进行任何形式的赋值</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&gt;&gt;&gt;</span> <span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;a=1&#39;</span><span class="p">)</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;pyshell#0&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
    <span class="nb">eval</span><span class="p">(</span><span class="s1">&#39;a=1&#39;</span><span class="p">)</span>
  <span class="n">File</span> <span class="s2">&#34;&lt;string&gt;&#34;</span><span class="p">,</span> <span class="n">line</span> <span class="mi">1</span>
    <span class="n">a</span><span class="o">=</span><span class="mi">1</span>
     <span class="o">^</span>
<span class="ne">SyntaxError</span><span class="p">:</span> <span class="n">invalid</span> <span class="n">syntax</span>
</code></pre></td></tr></table>
</div>
</div>]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/python%E5%85%B3%E9%94%AE%E5%AD%97/" term="Python关键字" label="Python关键字"/><category scheme="https://raycoder.me/categories/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/python%E8%BF%9B%E9%98%B6/" term="Python进阶" label="Python进阶"/><category scheme="https://raycoder.me/tags/%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/" term="内置函数" label="内置函数"/><category scheme="https://raycoder.me/tags/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" term="Python学习笔记" label="Python学习笔记"/></entry><entry><title type="text">从零开始写一个音乐爬虫-4：QQ音乐</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/qqmusic-spider-artlist/"/><id>https://raycoder.me/p/qqmusic-spider-artlist/</id><updated>2020-04-09T17:41:16+08:00</updated><published>2020-03-05T10:43:15+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">划了这么多天水，我终于回来了…… 毕竟博主也是要上课的,QwQ。 最近终于抽出一些时间了，研究研究QQ音乐的爬虫。 我们随便打开一个歌单(https://y.qq.com/n/yqq/playlist/68……</summary><content type="html"><![CDATA[<p>划了这么多天水，我终于回来了……
<img src="https://raycoder.me/post-images/1583376357108.jpg" alt="">
毕竟博主也是要上课的,QwQ。
最近终于抽出一些时间了，研究研究QQ音乐的爬虫。
我们随便打开一个歌单(<a href="https://y.qq.com/n/yqq/playlist/6809716883.html">https://y.qq.com/n/yqq/playlist/6809716883.html</a>)，登录自己的QQ：
<img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316130255.png" alt="https://y.qq.com/n/yqq/playlist/6809716883.html" title="https://y.qq.com/n/yqq/playlist/6809716883.html">
？QQ音乐竟然还对网页端做限制！<img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316130506.png" alt="">
根据我多年的前(摸)端(爬)开(滚)发(打)经验，这种网站一定是通过<code>JS</code>做限制，并且在浏览器的<code>Network</code>中一定会有相关的数据。
我们先打开一个音乐链接(<a href="https://y.qq.com/n/yqq/song/004WKx9W0E7skj.html">https://y.qq.com/n/yqq/song/004WKx9W0E7skj.html</a> ==&gt; 播放)：
<img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316130739.png" alt="">
发现所有的音乐最后都指向<a href="https://y.qq.com/portal/player.html">https://y.qq.com/portal/player.html</a>这个网址。所以我们可以做如下判断：这个东西是通过传<code>Cookie</code>来播放音乐的，所以它的<code>Network</code>中绝对会有相应的<code>音乐文件</code>    。
果不其然，里边有一个如下的链接：
<code>https://isure.stream.qqmusic.qq.com/C400003jblv923cckE.m4a?guid=2092345306&amp;vkey=0C2C0214E13FDAA60DF4560C8CAFB591C5C8D31854F25B79A59E07FE292AFF133E2B053C4A96C190ACA1582BD0476710ECCF87F6826D15A2&amp;uin=4354&amp;fromtag=66</code>
经过观察，发现它的格式如下：
<code>https://isure.stream.qqmusic.qq.com/C400&lt;MID&gt;.m4a?guid=&lt;GUID&gt;&amp;vkey=&lt;VKEY&gt;&amp;uin=4354&amp;fromtag=66</code>，<code>uin</code>和<code>fromtag</code>是不变的。
所以我们再返回歌单页，打开控制台，找到了如下文件：
<img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316130803.png" alt="">
好的，我们通过观察，发现这是一个格式类似于如下的文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span><span class="err">&#39;accessed_favbase&#39;:</span> <span class="err">1,</span>
 <span class="err">&#39;accessed_plaza_cache&#39;:</span> <span class="err">0,</span>
 <span class="err">&#39;cdlist&#39;:</span> <span class="err">[{&#39;album_pic_mid&#39;:</span> <span class="err">&#39;&#39;,</span>
             <span class="err">&#39;buynum&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;cmtnum&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;coveradurl&#39;:</span> <span class="err">&#39;&#39;,</span>
             <span class="err">&#39;ctime&#39;:</span> <span class="err">1552789122,</span>
             <span class="err">&#39;cur_song_num&#39;:</span> <span class="err">70,</span>
             <span class="err">&#39;desc&#39;:</span> <span class="err">&#39;YouTuber阿神背景音乐，Bob们快来听听吧！阿神加油，我们会永远支持你的！&#39;,</span>
             <span class="err">&#39;dir_pic_url2&#39;:</span> <span class="err">&#39;&#39;,</span>
             <span class="err">&#39;dir_show&#39;:</span> <span class="err">1,</span>
             <span class="err">&#39;dirid&#39;:</span> <span class="err">2,</span>
             <span class="err">&#39;dissid&#39;:</span> <span class="err">6809716,</span>
             <span class="err">&#39;dissname&#39;:</span> <span class="err">&#39;阿神常用BGM&#39;,</span>
             <span class="err">&#39;disstid&#39;:</span> <span class="err">&#39;6809716883&#39;,</span>
             <span class="err">&#39;disstype&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;encrypt_uin&#39;:</span> <span class="err">&#39;oK6kowEAoK4z7eSiNevzoivlov**&#39;,</span>
             <span class="err">&#39;headurl&#39;:</span> <span class="err">&#39;http://thirdwx.qlogo.cn/mmopen/vi_32/Q0j4TwGTfTK1iaxx2AdrAQDGlibrNZicyaYspzibEWTeCIHOGHPpMOau3MFofE1e5oJwEGHTrBUzrLegbPYiaNOicPaQ/132&#39;,</span>
             <span class="err">&#39;ifpicurl&#39;:</span> <span class="err">&#39;&#39;,</span>
             <span class="err">&#39;isAd&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;isdj&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;isvip&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;login&#39;:</span> <span class="err">&#39;oK-57KEA7w4ion**&#39;,</span>
             <span class="err">&#39;logo&#39;:</span> <span class="err">&#39;http://qpic.y.qq.com/music_cover/huYTu7R6ZfqKlvicEsOAPc5D6PTtzz0caVENpSkmJnF4IbCCI7iaWqnz7SQXcf474k/300?n=1&#39;,</span>
             <span class="err">&#39;mtime&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;nick&#39;:</span> <span class="err">&#39;Max&#39;,</span>
             <span class="err">&#39;nickname&#39;:</span> <span class="err">&#39;Max&#39;,</span>
             <span class="err">&#39;owndir&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;pic_dpi&#39;:</span> <span class="err">300,</span>
             <span class="err">&#39;pic_mid&#39;:</span> <span class="err">&#39;&#39;,</span>
             <span class="err">&#39;scoreavage&#39;:</span> <span class="err">&#39;0.0&#39;,</span>
             <span class="err">&#39;scoreusercount&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;singerid&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;singermid&#39;:</span> <span class="err">&#39;&#39;,</span>
             <span class="err">&#39;song_begin&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;song_update_num&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;song_update_time&#39;:</span> <span class="err">0,</span>
             <span class="err">&#39;songids&#39;:</span> <span class="err">&#39;108412441,108412318,236593788,212656442,204897711,203546728,101688454,201272163,215240933,201272176,105055346,125803989,201287859,4998977,220183309,1875424,200448238,107600922,202985843,201272151,102994348,4941179,200980117,102179620,108412364,1144219,108920995,4799526,200316483,125586926,108547678,214531352,214483351,108412363,225361408,201272168,201272164,213407792,215240934,108031940,109296153,102215437,203021286,104769082,201272157,200980118,213407791,201272160,200980114,201272153,200980111,201438505,201272165,109996034,202916713,202617948,109296152,201422059,200604508,203836723,9072513,201255271,201287877,102222132,105389125,108412359,215360418,109225063,102206145,219032454&#39;,</span>
             <span class="err">&#39;songlist&#39;:</span> <span class="err">[{&#39;action&#39;:</span> <span class="err">{&#39;alert&#39;:</span> <span class="err">2,</span>
                                      <span class="err">&#39;icons&#39;:</span> <span class="err">8535932,</span>
                                      <span class="err">&#39;msgid&#39;:</span> <span class="err">14,</span>
                                      <span class="err">&#39;msgpay&#39;:</span> <span class="err">6,</span>
                                      <span class="err">&#39;switch&#39;:</span> <span class="err">17409795</span><span class="p">}</span><span class="err">,</span>
                           <span class="err">&#39;album&#39;:</span> <span class="p">{</span><span class="err">&#39;id&#39;:</span> <span class="err">1594129,</span>
                                     <span class="err">&#39;mid&#39;:</span> <span class="err">&#39;001j2IHy2CkIaz&#39;,</span>
                                     <span class="err">&#39;name&#39;:</span> <span class="err">&#39;UNDERTALE</span> <span class="err">Soundtrack&#39;,</span>
                                     <span class="err">&#39;pmid&#39;:</span> <span class="err">&#39;001j2IHy2CkIaz_2&#39;,</span>
                                     <span class="err">&#39;subtitle&#39;:</span> <span class="err">&#39;&#39;,</span>
                                     <span class="err">&#39;title&#39;:</span> <span class="err">&#39;UNDERTALE</span> <span class="err">Soundtrack&#39;</span><span class="p">}</span><span class="err">,</span>
                           <span class="err">&#39;file&#39;:</span> <span class="p">{</span><span class="err">&#39;b_30s&#39;:</span> <span class="err">0,</span>
                                    <span class="err">&#39;e_30s&#39;:</span> <span class="err">0,</span>
                                    <span class="err">&#39;media_mid&#39;:</span> <span class="err">&#39;003jblv923cckE&#39;,</span>
                                    <span class="err">&#39;size_128&#39;:</span> <span class="err">724989,</span>
                                    <span class="err">&#39;size_128mp3&#39;:</span> <span class="err">724989,</span>
                                    <span class="err">&#39;size_192aac&#39;:</span> <span class="err">1046138,</span>
                                    <span class="err">&#39;size_192ogg&#39;:</span> <span class="err">807221,</span>
                                    <span class="err">&#39;size_24aac&#39;:</span> <span class="err">0,</span>
                                    <span class="err">&#39;size_320&#39;:</span> <span class="err">1812101,</span>
                                    <span class="err">&#39;size_320mp3&#39;:</span> <span class="err">1812101,</span>
                                    <span class="err">&#39;size_48aac&#39;:</span> <span class="err">264852,</span>
                                    <span class="err">&#39;size_96aac&#39;:</span> <span class="err">523498,</span>
                                    <span class="err">&#39;size_aac&#39;:</span> <span class="err">264852,</span>
                                    <span class="err">&#39;size_ape&#39;:</span> <span class="err">0,</span>
                                    <span class="err">&#39;size_dts&#39;:</span> <span class="err">0,</span>
                                    <span class="err">&#39;size_flac&#39;:</span> <span class="err">2120013,</span>
                                    <span class="err">&#39;size_ogg&#39;:</span> <span class="err">807221,</span>
                                    <span class="err">&#39;size_try&#39;:</span> <span class="err">0,</span>
                                    <span class="err">&#39;try_begin&#39;:</span> <span class="err">0,</span>
                                    <span class="err">&#39;try_end&#39;:</span> <span class="err">0</span><span class="p">}</span><span class="err">,</span>
                           <span class="err">&#39;fnote&#39;:</span> <span class="mi">4009</span><span class="err">,</span>
                           <span class="err">&#39;genre&#39;:</span> <span class="mi">37</span><span class="err">,</span>
                           <span class="err">&#39;id&#39;:</span> <span class="mi">108412441</span><span class="err">,</span>
                           <span class="err">&#39;index_album&#39;:</span> <span class="mi">44</span><span class="err">,</span>
                           <span class="err">&#39;index_cd&#39;:</span> <span class="mi">0</span><span class="err">,</span>
                           <span class="err">&#39;interval&#39;:</span> <span class="mi">45</span><span class="err">,</span>
                           <span class="err">&#39;isonly&#39;:</span> <span class="mi">0</span><span class="err">,</span>
                           <span class="err">&#39;ksong&#39;:</span> <span class="p">{</span><span class="err">&#39;id&#39;:</span> <span class="err">0,</span> <span class="err">&#39;mid&#39;:</span> <span class="err">&#39;&#39;</span><span class="p">}</span><span class="err">,</span>
                           <span class="err">&#39;language&#39;:</span> <span class="mi">9</span><span class="err">,</span>
                           <span class="err">&#39;mid&#39;:</span> <span class="err">&#39;</span><span class="mi">004</span><span class="err">WKx</span><span class="mi">9</span><span class="err">W</span><span class="mf">0E7</span><span class="err">skj&#39;,</span>
                           <span class="err">&#39;mv&#39;:</span> <span class="p">{</span><span class="err">&#39;id&#39;:</span> <span class="err">0,</span> <span class="err">&#39;vid&#39;:</span> <span class="err">&#39;&#39;</span><span class="p">}</span><span class="err">,</span>
                           <span class="err">&#39;name&#39;:</span> <span class="err">&#39;Tem</span> <span class="err">Shop&#39;,</span>
                           <span class="err">&#39;ov&#39;:</span> <span class="mi">0</span><span class="err">,</span>
                           <span class="err">&#39;pay&#39;:</span> <span class="p">{</span><span class="err">&#39;pay_down&#39;:</span> <span class="err">1,</span>
                                   <span class="err">&#39;pay_month&#39;:</span> <span class="err">1,</span>
                                   <span class="err">&#39;pay_play&#39;:</span> <span class="err">0,</span>
                                   <span class="err">&#39;pay_status&#39;:</span> <span class="err">0,</span>
                                   <span class="err">&#39;price_album&#39;:</span> <span class="err">0,</span>
                                   <span class="err">&#39;price_track&#39;:</span> <span class="err">200,</span>
                                   <span class="err">&#39;time_free&#39;:</span> <span class="err">0</span><span class="p">}</span><span class="err">,</span>
                           <span class="err">&#39;sa&#39;:</span> <span class="mi">16</span><span class="err">,</span>
                           <span class="err">&#39;singer&#39;:</span> <span class="p">[{</span><span class="err">&#39;id&#39;:</span> <span class="err">1204192,</span>
                                       <span class="err">&#39;mid&#39;:</span> <span class="err">&#39;0045aGTp3XRXLD&#39;,</span>
                                       <span class="err">&#39;name&#39;:</span> <span class="err">&#39;Toby</span> <span class="err">Fox&#39;,</span>
                                       <span class="err">&#39;title&#39;:</span> <span class="err">&#39;Toby</span> <span class="err">Fox&#39;</span><span class="p">}]</span><span class="err">,</span>
                           <span class="err">&#39;songtype&#39;:</span> <span class="mi">13</span><span class="err">,</span>
                           <span class="err">&#39;status&#39;:</span> <span class="mi">0</span><span class="err">,</span>
                           <span class="err">&#39;subtitle&#39;:</span> <span class="err">&#39;&#39;,</span>
                           <span class="err">&#39;tid&#39;:</span> <span class="mi">0</span><span class="err">,</span>
                           <span class="err">&#39;time_public&#39;:</span> <span class="err">&#39;</span><span class="mi">2015-09-15</span><span class="err">&#39;,</span>
                           <span class="err">&#39;title&#39;:</span> <span class="err">&#39;Tem</span> <span class="err">Shop&#39;,</span>
                           <span class="err">&#39;type&#39;:</span> <span class="mi">0</span><span class="err">,</span>
                           <span class="err">&#39;url&#39;:</span> <span class="err">&#39;&#39;,</span>
                           <span class="err">&#39;volume&#39;:</span> <span class="p">{</span><span class="err">&#39;gain&#39;:</span> <span class="err">0.0,</span> <span class="err">&#39;lra&#39;:</span> <span class="err">0.0,</span> <span class="err">&#39;peak&#39;:</span> <span class="err">0.0</span><span class="p">}</span><span class="err">},</span>
             <span class="err">&#39;songnum&#39;:</span> <span class="mi">70</span><span class="err">,</span>
             <span class="err">&#39;songtypes&#39;:</span> <span class="err">&#39;</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">,</span><span class="mi">13</span><span class="err">&#39;,</span>
             <span class="err">&#39;tags&#39;:</span> <span class="p">[{</span><span class="err">&#39;id&#39;:</span> <span class="err">199,</span> <span class="err">&#39;name&#39;:</span> <span class="err">&#39;背景音乐&#39;,</span> <span class="err">&#39;pid&#39;:</span> <span class="err">199</span><span class="p">},</span>
                      <span class="p">{</span><span class="err">&#39;id&#39;:</span> <span class="err">117,</span> <span class="err">&#39;name&#39;:</span> <span class="err">&#39;快乐&#39;,</span> <span class="err">&#39;pid&#39;:</span> <span class="err">117</span><span class="p">},</span>
                      <span class="p">{</span><span class="err">&#39;id&#39;:</span> <span class="err">116,</span> <span class="err">&#39;name&#39;:</span> <span class="err">&#39;治愈&#39;,</span> <span class="err">&#39;pid&#39;:</span> <span class="err">116</span><span class="p">}]</span><span class="err">,</span>
             <span class="err">&#39;total_song_num&#39;:</span> <span class="mi">70</span><span class="err">,</span>
             <span class="err">&#39;type&#39;:</span> <span class="mi">0</span><span class="err">,</span>
             <span class="err">&#39;uin&#39;:</span> <span class="err">&#39;oK</span><span class="mi">6</span><span class="err">kowEAoK</span><span class="mi">4</span><span class="err">z</span><span class="mi">7</span><span class="err">eSiNevzoivlov**&#39;,</span>
             <span class="err">&#39;visitnum&#39;:</span> <span class="mi">170366</span><span class="err">}],</span>
 <span class="err">&#39;cdnum&#39;:</span> <span class="mi">1</span><span class="err">,</span>
 <span class="err">&#39;code&#39;:</span> <span class="mi">0</span><span class="err">,</span>
 <span class="err">&#39;login&#39;:</span> <span class="err">&#39;oK</span><span class="mi">-57</span><span class="err">KEA</span><span class="mi">7</span><span class="err">w</span><span class="mi">4</span><span class="err">ion**&#39;,</span>
 <span class="err">&#39;realcdnum&#39;:</span> <span class="mi">1</span><span class="err">,</span>
 <span class="err">&#39;subcode&#39;:</span> <span class="mi">0</span><span class="err">}</span>
</code></pre></td></tr></table>
</div>
</div><p>很容易看出，里面有我们所需的<code>&lt;MID&gt;</code>。但是<code>&lt;VKEY&gt;</code>并没有出现。所以，我们必须换一种思路了。
查找了网络上的资料，发现有一个音乐信息外链：
<code>https://u.y.qq.com/cgi-bin/musicu.fcg?format=json&amp;data=%7B%22req_0%22%3A%7B%22module%22%3A%22vkey.GetVkeyServer%22%2C%22method%22%3A%22CgiGetVkey%22%2C%22param%22%3A%7B%22guid%22%3A%22358840384%22%2C%22songmid%22%3A%5B%22&lt;MID&gt;%22%5D%2C%22songtype%22%3A%5B0%5D%2C%22uin%22%3A%221443481947%22%2C%22loginflag%22%3A1%2C%22platform%22%3A%2220%22%7D%7D%2C%22comm%22%3A%7B%22uin%22%3A%2218585073516%22%2C%22format%22%3A%22json%22%2C%22ct%22%3A24%2C%22cv%22%3A0%7D%7D</code>
这个是经过<code>URL编码</code>的，解密后结果如下：
<code>https://u.y.qq.com/cgi-bin/musicu.fcg?format=json&amp;data={&quot;req_0&quot;:{&quot;module&quot;:&quot;vkey.GetVkeyServer&quot;,&quot;method&quot;:&quot;CgiGetVkey&quot;,&quot;param&quot;:{&quot;guid&quot;:&quot;358840384&quot;,&quot;songmid&quot;:[&quot;&lt;MID&gt;&quot;],&quot;songtype&quot;:[0],&quot;uin&quot;:&quot;1443481947&quot;,&quot;loginflag&quot;:1,&quot;platform&quot;:&quot;20&quot;}},&quot;comm&quot;:{&quot;uin&quot;:&quot;18585073516&quot;,&quot;format&quot;:&quot;json&quot;,&quot;ct&quot;:24,&quot;cv&quot;:0}}</code>
好的，看来我们只需要这个<code>&lt;MID&gt;</code>即可。
我们在上面的步骤已经获得了<code>&lt;MID&gt;</code>，把它放进那个URL，会找到一个数据文件。如下(链接：<a href="https://u.y.qq.com/cgi-bin/musicu.fcg?format=json&amp;data=%7B%22req_0%22%3A%7B%22module%22%3A%22vkey.GetVkeyServer%22%2C%22method%22%3A%22CgiGetVkey%22%2C%22param%22%3A%7B%22guid%22%3A%22358840384%22%2C%22songmid%22%3A%5B%22004WKx9W0E7skj%22%5D%2C%22songtype%22%3A%5B0%5D%2C%22uin%22%3A%221443481947%22%2C%22loginflag%22%3A1%2C%22platform%22%3A%2220%22%7D%7D%2C%22comm%22%3A%7B%22uin%22%3A%2218585073516%22%2C%22format%22%3A%22json%22%2C%22ct%22%3A24%2C%22cv%22%3A0%7D%7D">https://u.y.qq.com/cgi-bin/musicu.fcg?format=json&amp;data=%7B%22req_0%22%3A%7B%22module%22%3A%22vkey.GetVkeyServer%22%2C%22method%22%3A%22CgiGetVkey%22%2C%22param%22%3A%7B%22guid%22%3A%22358840384%22%2C%22songmid%22%3A%5B%22004WKx9W0E7skj%22%5D%2C%22songtype%22%3A%5B0%5D%2C%22uin%22%3A%221443481947%22%2C%22loginflag%22%3A1%2C%22platform%22%3A%2220%22%7D%7D%2C%22comm%22%3A%7B%22uin%22%3A%2218585073516%22%2C%22format%22%3A%22json%22%2C%22ct%22%3A24%2C%22cv%22%3A0%7D%7D</a>)：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span><span class="nt">&#34;code&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">&#34;ts&#34;</span><span class="p">:</span><span class="mi">1583379252481</span><span class="p">,</span><span class="nt">&#34;req_0&#34;</span><span class="p">:{</span><span class="nt">&#34;code&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span><span class="nt">&#34;data&#34;</span><span class="p">:{</span> <span class="nt">&#34;expiration&#34;</span><span class="p">:</span> <span class="mi">80400</span><span class="p">,</span> <span class="nt">&#34;login_key&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;midurlinfo&#34;</span><span class="p">:</span> <span class="p">[</span> <span class="p">{</span> <span class="nt">&#34;common_downfromtag&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;errtype&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;filename&#34;</span><span class="p">:</span> <span class="s2">&#34;C400003jblv923cckE.m4a&#34;</span><span class="p">,</span> <span class="nt">&#34;flowfromtag&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;flowurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;hisbuy&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;hisdown&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;isbuy&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;isonly&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;onecan&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;opi128kurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;opi192koggurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;opi192kurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;opi30surl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;opi48kurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;opi96kurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;opiflackurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;p2pfromtag&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;pdl&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;pneed&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;pneedbuy&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;premain&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;purl&#34;</span><span class="p">:</span> <span class="s2">&#34;C400003jblv923cckE.m4a?guid=358840384&amp;vkey=9B9B50B3B25F0A5B339075E830EDE2E10FDC429A412FD272C65C2C0BA96846C98CF95F046C4B6E76BB16191F791104AB1B949E0C5168C3D0&amp;uin=0&amp;fromtag=66&#34;</span><span class="p">,</span> <span class="nt">&#34;qmdlfromtag&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;result&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;songmid&#34;</span><span class="p">:</span> <span class="s2">&#34;004WKx9W0E7skj&#34;</span><span class="p">,</span> <span class="nt">&#34;tips&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;uiAlert&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;vip_downfromtag&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;vkey&#34;</span><span class="p">:</span> <span class="s2">&#34;9B9B50B3B25F0A5B339075E830EDE2E10FDC429A412FD272C65C2C0BA96846C98CF95F046C4B6E76BB16191F791104AB1B949E0C5168C3D0&#34;</span><span class="p">,</span> <span class="nt">&#34;wififromtag&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;wifiurl&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span> <span class="p">}</span> <span class="p">],</span> <span class="nt">&#34;msg&#34;</span><span class="p">:</span> <span class="s2">&#34;&lt;IP&gt;&#34;</span><span class="p">,</span> <span class="nt">&#34;retcode&#34;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nt">&#34;servercheck&#34;</span><span class="p">:</span> <span class="s2">&#34;0502f67d8cf451662c4b46417d571295&#34;</span><span class="p">,</span> <span class="nt">&#34;sip&#34;</span><span class="p">:</span> <span class="p">[</span> <span class="s2">&#34;http:\/\/ws.stream.qqmusic.qq.com\/&#34;</span><span class="p">,</span> <span class="s2">&#34;http:\/\/isure.stream.qqmusic.qq.com\/&#34;</span> <span class="p">],</span> <span class="nt">&#34;testfile2g&#34;</span><span class="p">:</span> <span class="s2">&#34;C400003mAan70zUy5O.m4a?guid=358840384&amp;vkey=62F3CE198C73F66E7207E03BFB4F4C29BC086BF77E55DDC7C81ECEB156B8736E26F5B8360E5C63E0B6ADAB89779732648AF943136A70DC05&amp;uin=&amp;fromtag=3&#34;</span><span class="p">,</span> <span class="nt">&#34;testfilewifi&#34;</span><span class="p">:</span> <span class="s2">&#34;C400003mAan70zUy5O.m4a?guid=358840384&amp;vkey=62F3CE198C73F66E7207E03BFB4F4C29BC086BF77E55DDC7C81ECEB156B8736E26F5B8360E5C63E0B6ADAB89779732648AF943136A70DC05&amp;uin=&amp;fromtag=3&#34;</span><span class="p">,</span> <span class="nt">&#34;thirdip&#34;</span><span class="p">:</span> <span class="p">[</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span> <span class="p">],</span> <span class="nt">&#34;uin&#34;</span><span class="p">:</span> <span class="s2">&#34;&#34;</span><span class="p">,</span> <span class="nt">&#34;verify_type&#34;</span><span class="p">:</span> <span class="mi">0</span> <span class="p">}}}</span>
</code></pre></td></tr></table>
</div>
</div><p>再把<code>purl</code>代入外链<code>https://isure.stream.qqmusic.qq.com</code>(<code>http://ws.stream.qqmusic.qq.com</code>也可以)，得到如下链接：
<code>https://isure.stream.qqmusic.qq.com/C400003jblv923cckE.m4a?guid=358840384&amp;vkey=9B9B50B3B25F0A5B339075E830EDE2E10FDC429A412FD272C65C2C0BA96846C98CF95F046C4B6E76BB16191F791104AB1B949E0C5168C3D0&amp;uin=0&amp;fromtag=66</code>
打开，便是我们想要的音乐文件了。下载音乐，请参考我的前两篇文章：
<a href="/post/CUlLXMwcx/" class="LinkCard">从零开始写一个音乐爬虫-2-网易云音乐：下载音乐文件</a>
<a href="/post/lOWHTeAPC/" class="LinkCard">从零开始写一个音乐爬虫-3-酷狗音乐</a>
代码之后放上来。</p>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/qq%E9%9F%B3%E4%B9%90/" term="QQ音乐" label="QQ音乐"/><category scheme="https://raycoder.me/tags/%E7%A6%8F%E5%88%A9/" term="福利" label="福利"/><category scheme="https://raycoder.me/tags/%E7%A0%B4%E8%A7%A3/" term="破解" label="破解"/><category scheme="https://raycoder.me/tags/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐"/><category scheme="https://raycoder.me/tags/%E4%BC%9A%E5%91%98/" term="会员" label="会员"/><category scheme="https://raycoder.me/tags/python%E8%BF%9B%E9%98%B6/" term="Python进阶" label="Python进阶"/></entry><entry><title type="text">从零开始写一个音乐爬虫-2：下载音乐文件</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/music-spider-downloader/"/><id>https://raycoder.me/p/music-spider-downloader/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-02-25T08:27:44+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">上一篇文章我写了爬取网易云音乐歌单中音乐ID及下载链接的教程，这一期我们就应该把文件下载下来了。 下载文件，我们通过Python3的urllib模块可以很轻松地实现。 新建一个download.py文件。……</summary><content type="html"><![CDATA[<p><strong>上一篇文章我写了爬取网易云音乐歌单中音乐ID及下载链接的教程，这一期我们就应该把文件下载下来了。</strong></p>
<p>下载文件，我们通过Python3的<code>urllib</code>模块可以很轻松地实现。
新建一个<code>download.py</code>文件。</p>
<p>下载音乐主要的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"> <span class="c1">#!/usr/bin/env python</span>
<span class="c1">#-*- coding:utf8 -*-</span>
<span class="s1">&#39;&#39;&#39;
</span><span class="s1">@Author  :   Ray
</span><span class="s1">@Contact :   ray@raycoder.me
</span><span class="s1">@Software:   PyCharm
</span><span class="s1">@File    :   download.py
</span><span class="s1">@Time    :   2019/11/4 21:19
</span><span class="s1">&#39;&#39;&#39;</span>
<span class="kn">import</span> <span class="nn">urllib</span><span class="o">,</span> <span class="nn">time</span><span class="o">,</span> <span class="nn">os</span>

<span class="k">def</span> <span class="nf">downloadMusic</span><span class="p">(</span><span class="n">music_dictionary</span><span class="p">,</span> <span class="n">path</span><span class="p">):</span> <span class="c1">#下载音乐</span>
    <span class="n">exist</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">exist</span><span class="p">:</span>
        <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="n">path</span><span class="p">)</span>
    <span class="n">complete</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">failed</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">music_dictionary</span><span class="p">:</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;正在下载：&#39;</span> <span class="o">+</span> <span class="n">i</span><span class="p">)</span>
            <span class="n">trans</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span><span class="n">maketrans</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">/*?:&#34;|&lt;&gt;&#39;</span><span class="p">,</span> <span class="s1">&#39;         &#39;</span><span class="p">)</span>
            <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlretrieve</span><span class="p">(</span><span class="n">music_dictionary</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">path</span> <span class="o">+</span> <span class="n">i</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">trans</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.mp3&#39;</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;下载完成！&#39;</span><span class="p">)</span>
            <span class="n">complete</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
            <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="k">except</span> <span class="ne">OSError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;下载失败：&#39;</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span> <span class="o">+</span> <span class="sa">u</span><span class="s1">&#39;失败原因：&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
            <span class="n">failed</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">complete</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&#34;下载成功：&#34;</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">complete</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">complete</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.</span><span class="se">\t</span><span class="s1">&#39;</span> <span class="o">+</span> <span class="n">i</span><span class="p">)</span>
        <span class="k">print</span><span class="p">()</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&#34;无下载成功&#34;</span><span class="p">)</span>

    <span class="k">if</span> <span class="n">failed</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&#34;下载失败：&#34;</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">failed</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">failed</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.</span><span class="se">\t</span><span class="s1">&#39;</span> <span class="o">+</span> <span class="n">i</span><span class="p">)</span>
        <span class="k">print</span><span class="p">()</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">print</span><span class="p">(</span><span class="s2">&#34;无下载失败&#34;</span><span class="p">)</span>

</code></pre></td></tr></table>
</div>
</div><p>测试：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">CloudMusicSpider</span>
<span class="k">def</span> <span class="nf">_test</span><span class="p">():</span>
    <span class="n">spider</span> <span class="o">=</span> <span class="n">CloudMusicSpider</span><span class="p">()</span>
    <span class="n">downloadMusic</span><span class="p">(</span><span class="n">spider</span><span class="o">.</span><span class="n">getArtUrl</span><span class="p">(</span><span class="s1">&#39;https://music.163.com/#/playlist?id=4874770876&#39;</span><span class="p">))</span>

<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">_test</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<pre><code>正在下载：Prelude
下载完成！
正在下载：Marble Soda [Explicit]
下载完成！
正在下载：Snowdin Town
下载完成！
正在下载：Monkeys Spinning Monkeys
下载完成！
正在下载：Overworld Theme (GFM Trap Remix)
下载完成！
正在下载：Pizza
下载完成！
正在下载：King Dedede
下载完成！
正在下载：Undertale
下载完成！
正在下载：sans.
下载完成！
正在下载：Tem Shop
下载完成！
正在下载：Undertale - Snowdin Town (****** Bootleg)
下载失败：Undertale - Snowdin Town (****** Bootleg)	失败原因：[Errno 22] Invalid argument: 'Undertale - Snowdin Town (****** Bootleg).mp3'
正在下载：It's Not Like I Like You!!(Instrumental)
下载完成！
正在下载：似顔絵広場 (似顔絵チャンネル)
下载完成！
正在下载：ステージ：コミカル (サンドキャニオン)
下载完成！
正在下载：I Love You
下载完成！
正在下载：Ice Cream
下载完成！
正在下载：Dying
下载完成！
下载成功：
1.	Prelude
2.	Marble Soda [Explicit]
3.	Snowdin Town
4.	Monkeys Spinning Monkeys
5.	Overworld Theme (GFM Trap Remix)
6.	Pizza
7.	King Dedede
8.	Undertale
9.	sans.
10.	Tem Shop
11.	It's Not Like I Like You!!(Instrumental)
12.	似顔絵広場 (似顔絵チャンネル)
13.	ステージ：コミカル (サンドキャニオン)
14.	I Love You
15.	Ice Cream
16.	Dying

下载失败：
1.	Undertale - Snowdin Town (****** Bootleg)
</code></pre><p>之后就可以在保存源文件的目录下<code>downloads</code>文件夹看到音乐文件了。</p>
<p>想要下载歌词的只需修改<code>getArtUrl()</code>函数即可，外链为<code>http://music.163.com/api/song/lyric?id=音乐ID&amp;lv=1&amp;kv=1&amp;tv=-1</code>。</p>
<p>P.S：上面那个下载失败的是因为文件名中有<code>*</code>号，而Windows是不让保存的。所以我要用<code>str.translate()</code>方法将这些字符批量替换。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>
<span class="c1">#-*- coding:utf8 -*-</span>
<span class="s1">&#39;&#39;&#39;
</span><span class="s1">@Author  :   Ray
</span><span class="s1">@Contact :   nn_201412@qq.com
</span><span class="s1">@Software:   PyCharm
</span><span class="s1">@File    :   init.py
</span><span class="s1">@Time    :   2019/11/4 21:19
</span><span class="s1">&#39;&#39;&#39;</span>
<span class="kn">import</span> <span class="nn">requests</span><span class="o">,</span> <span class="nn">re</span><span class="o">,</span> <span class="nn">urllib</span><span class="o">,</span> <span class="nn">os</span>
<span class="kn">from</span> <span class="nn">fake_useragent</span> <span class="kn">import</span> <span class="n">UserAgent</span>
<span class="kn">from</span> <span class="nn">time</span> <span class="kn">import</span> <span class="n">sleep</span>

<span class="n">exist</span> <span class="o">=</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">exists</span><span class="p">(</span><span class="s1">&#39;downloads/&#39;</span><span class="p">)</span>
<span class="k">if</span> <span class="ow">not</span> <span class="n">exist</span><span class="p">:</span>
    <span class="n">os</span><span class="o">.</span><span class="n">makedirs</span><span class="p">(</span><span class="s1">&#39;downloads/&#39;</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">CloudmusicSpider</span><span class="p">():</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span>  <span class="c1"># 伪造请求头，防止被封</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Host&#39;</span><span class="p">:</span> <span class="s1">&#39;music.163.com&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://music.163.com/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>
    <span class="k">def</span> <span class="nf">getUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span> <span class="c1">#获取音乐真实ID的函数</span>
        <span class="n">outerUrl</span> <span class="o">=</span> <span class="s2">&#34;http://music.163.com/song/media/outer/url?id={0:s}.mp3&#34;</span> <span class="c1">#外链地址</span>
        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">artlist_url</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;#/&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">)</span> <span class="c1">#网易云音乐使用异步加载，需要去掉&#34;#/&#34;</span>
        <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a href=&#34;/song\?id=(\d+)&#34;&gt;(.*?)&lt;/a&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
            <span class="n">songs</span><span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">outerUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">songs</span>
    <span class="k">def</span> <span class="nf">downloadMusic</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">music_dictionary</span><span class="p">):</span> <span class="c1">#下载音乐</span>
        <span class="n">complete</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="n">failed</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">music_dictionary</span><span class="o">.</span><span class="n">keys</span><span class="p">():</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;正在下载：&#39;</span> <span class="o">+</span> <span class="n">i</span><span class="p">)</span>
                <span class="n">trans</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span><span class="n">maketrans</span><span class="p">(</span><span class="s1">&#39;</span><span class="se">\\</span><span class="s1">/*?:&#34;|&lt;&gt;&#39;</span><span class="p">,</span> <span class="s1">&#39;         &#39;</span><span class="p">)</span> <span class="c1">#一一对应</span>
                <span class="n">urllib</span><span class="o">.</span><span class="n">request</span><span class="o">.</span><span class="n">urlretrieve</span><span class="p">(</span><span class="n">music_dictionary</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="s1">&#39;downloads/&#39;</span> <span class="o">+</span> <span class="n">i</span><span class="o">.</span><span class="n">translate</span><span class="p">(</span><span class="n">trans</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.mp3&#39;</span><span class="p">)</span> <span class="c1">#字符替换</span>
                <span class="k">print</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;下载完成！&#39;</span><span class="p">)</span>
                <span class="n">complete</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
                <span class="n">sleep</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
            <span class="k">except</span> <span class="ne">OSError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="sa">u</span><span class="s1">&#39;下载失败：&#39;</span> <span class="o">+</span> <span class="n">i</span> <span class="o">+</span><span class="s1">&#39;</span><span class="se">\t</span><span class="s1">&#39;</span> <span class="o">+</span> <span class="sa">u</span><span class="s1">&#39;失败原因：&#39;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">))</span>
                <span class="n">failed</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">complete</span> <span class="o">!=</span> <span class="p">[]:</span>
            <span class="k">print</span><span class="p">(</span><span class="s2">&#34;下载成功：&#34;</span><span class="p">)</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">complete</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">complete</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.</span><span class="se">\t</span><span class="s1">&#39;</span> <span class="o">+</span> <span class="n">i</span><span class="p">)</span>
            <span class="k">print</span><span class="p">()</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s2">&#34;无下载成功&#34;</span><span class="p">)</span>

        <span class="k">if</span> <span class="n">failed</span> <span class="o">!=</span> <span class="p">[]:</span>
            <span class="k">print</span><span class="p">(</span><span class="s2">&#34;下载失败：&#34;</span><span class="p">)</span>
            <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">failed</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">failed</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;.</span><span class="se">\t</span><span class="s1">&#39;</span> <span class="o">+</span> <span class="n">i</span><span class="p">)</span>
            <span class="k">print</span><span class="p">()</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="s2">&#34;无下载失败&#34;</span><span class="p">)</span>
</code></pre></td></tr></table>
</div>
</div><p>这个代码也需要保存为模块，命名为<code>download.py</code>，以后作为模块备用。</p>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/%E7%A6%8F%E5%88%A9/" term="福利" label="福利"/><category scheme="https://raycoder.me/tags/%E7%BD%91%E6%98%93/" term="网易" label="网易"/><category scheme="https://raycoder.me/tags/%E7%A0%B4%E8%A7%A3/" term="破解" label="破解"/><category scheme="https://raycoder.me/tags/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐"/><category scheme="https://raycoder.me/tags/%E4%BC%9A%E5%91%98/" term="会员" label="会员"/><category scheme="https://raycoder.me/tags/python%E8%BF%9B%E9%98%B6/" term="Python进阶" label="Python进阶"/></entry><entry><title type="text">从零开始写一个音乐爬虫-1-网易云音乐：批量获取歌单音乐下载链接</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/cloudmusic-spider-artlist/"/><id>https://raycoder.me/p/cloudmusic-spider-artlist/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-02-22T15:59:37+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">本文将会详细的写从零开始制作网易云音乐爬虫的过程，可以下载网易云音乐音乐付费歌曲，使用Python3开发。 声明：本文从前端入手，再获得歌曲数据。如果您不想走那么多弯路，请参考这篇文章：https://……</summary><content type="html"><![CDATA[<p><strong>本文将会详细的写从零开始制作网易云音乐爬虫的过程，可以下载网易云音乐音乐付费歌曲，使用Python3开发。</strong></p>
<blockquote>
<p><strong>声明：本文从前端入手，再获得歌曲数据。如果您不想走那么多弯路，请参考这篇文章：<a href="https://zhuanlan.zhihu.com/p/30246788">https://zhuanlan.zhihu.com/p/30246788</a>和这篇文章：<a href="https://www.shangyexinzhi.com/article/details/id-297404">https://www.shangyexinzhi.com/article/details/id-297404</a></strong></p>
<!-- more -->
</blockquote>
<p>本文采用环境：</p>
<ul>
<li>Pycharm + Python 3.7.5</li>
</ul>
<p>所需模块：</p>
<ol>
<li>fake-useragent</li>
<li>requests</li>
<li>re</li>
</ol>
<p>安装方法：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="n">pip</span> <span class="n">install</span> <span class="n">beautifulsoup4</span> <span class="n">fake</span><span class="o">-</span><span class="n">useragent</span> <span class="n">requests</span>
</code></pre></td></tr></table>
</div>
</div><p>爬虫思路：</p>
<div class="mermaid">
graph TD;
    初始化程序-->获取链接;
    获取链接-->遍历链接;
    遍历链接-->获取真实下载链接;
    获取真实下载链接-->下载音乐;
</div>
<p>看起来并不是非常困难，是吧？(^o^)/~</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316121330.gif" alt="">
经过分析，发现网易云歌单中的音乐格式如下：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316121355.png" alt=""></p>
<p>好。我们新建一个<code>CloudMusicSpider.py</code>，开始码代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>
<span class="c1">#-*- coding:utf8 -*-</span>
<span class="kn">import</span> <span class="nn">requests</span> <span class="c1">#导入模块</span>
<span class="kn">from</span> <span class="nn">fake_useragent</span> <span class="kn">import</span> <span class="n">UserAgent</span> <span class="c1">#导入模块</span>

<span class="k">def</span> <span class="nf">getArtUrl</span><span class="p">(</span><span class="n">artlist_url</span><span class="p">):</span> <span class="c1">#获取音乐真实ID的函数</span>
    <span class="n">outerUrl</span> <span class="o">=</span> <span class="s2">&#34;http://music.163.com/song/media/outer/url?id={0:s}.mp3&#34;</span> <span class="c1">#外链地址</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span> <span class="c1">#伪造请求头，防止被封</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Host&#39;</span><span class="p">:</span> <span class="s1">&#39;music.163.com&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://music.163.com/search/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;#/&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="n">HEADER</span><span class="p">)</span> <span class="c1">#网易云音乐使用异步加载，需要去掉&#34;#/&#34;</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="s2">&#34;html.parser&#34;</span><span class="p">)</span> <span class="c1">#bs4读取</span>
    <span class="n">aList</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">)</span> <span class="c1">#获取全部a标签</span>
    <span class="n">Songs</span> <span class="o">=</span> <span class="p">{}</span> <span class="c1">#格式为{音乐名: &#34;外链地址&#34;}的字典</span>
    <span class="k">for</span> <span class="n">music</span> <span class="ow">in</span> <span class="n">aList</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">music</span><span class="o">.</span><span class="n">has_attr</span><span class="p">(</span><span class="s2">&#34;href&#34;</span><span class="p">):</span> <span class="c1">#判断是否有href属性</span>
            <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">music</span><span class="o">.</span><span class="n">attrs</span><span class="p">[</span><span class="s2">&#34;href&#34;</span><span class="p">])</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;/song?id=&#34;</span><span class="p">):</span> <span class="c1">#是不是音乐ID</span>
                <span class="nb">id</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">music</span><span class="o">.</span><span class="n">attrs</span><span class="p">[</span><span class="s2">&#34;href&#34;</span><span class="p">])</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;/song?id=&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span> <span class="c1">#获取真实ID</span>
                <span class="k">try</span><span class="p">:</span>
                    <span class="n">Songs</span><span class="p">[</span><span class="n">music</span><span class="o">.</span><span class="n">text</span><span class="p">]</span> <span class="o">=</span> <span class="n">outerUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="c1">#放入字典</span>
                <span class="k">except</span><span class="p">:</span>
                    <span class="k">pass</span>
    <span class="k">return</span> <span class="n">Songs</span> <span class="c1">#返回这个字典</span>
</code></pre></td></tr></table>
</div>
</div><p>测试：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">print</span><span class="p">(</span><span class="n">getUrl</span><span class="p">(</span><span class="s1">&#39;https://music.163.com/#/playlist?id=4874770876&#39;</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><p>结果应该是这样的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="p">{</span><span class="s1">&#39;Undertale&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39227624.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;sans.&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39224615.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Tem Shop&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39224629.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Undertale - Snowdin Town (****** Bootleg)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=463498197.mp3&#39;</span><span class="p">,</span> <span class="s2">&#34;It&#39;s Not Like I Like You!!(Instrumental)&#34;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=1385676402.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;似顔絵広場 (似顔絵チャンネル)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=1378269172.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;ステージ：コミカル (サンドキャニオン)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=28546263.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;I Love You&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=31460297.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Ice Cream&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=35407675.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Dying&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=506092100.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;${song.name|mark}-${listArtists(song.artists)}&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=${song.id}.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;${soil(x.name)}&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=${x.id}.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;{if x.album}{/if}&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=${x.id}.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;${x.name}&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=${x.id}.mp3&#39;</span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>为啥会有<code>'${x.id}'</code>和<code>'${song.id}'</code>？？我也不是很清楚，但是只要把它过滤就行了。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">getArtUrl</span><span class="p">(</span><span class="n">artlist_url</span><span class="p">):</span> <span class="c1">#获取音乐真实ID的函数</span>
	<span class="n">outerUrl</span> <span class="o">=</span> <span class="s2">&#34;http://music.163.com/song/media/outer/url?id={0:s}.mp3&#34;</span> <span class="c1">#外链地址</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span> <span class="c1">#伪造请求头，防止被封</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Host&#39;</span><span class="p">:</span> <span class="s1">&#39;music.163.com&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://music.163.com/search/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;#/&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="n">HEADER</span><span class="p">)</span> <span class="c1">#网易云音乐使用异步iframe加载，需要去掉&#34;#/&#34;</span>
    <span class="n">soup</span> <span class="o">=</span> <span class="n">BeautifulSoup</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">,</span> <span class="s2">&#34;html.parser&#34;</span><span class="p">)</span> <span class="c1">#bs4读取</span>
    <span class="n">aList</span> <span class="o">=</span> <span class="n">soup</span><span class="o">.</span><span class="n">select</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">)</span> <span class="c1">#获取全部a标签</span>
    <span class="n">Songs</span> <span class="o">=</span> <span class="p">{}</span> <span class="c1">#格式为{音乐名: &#34;外链地址&#34;}的字典</span>
    <span class="k">for</span> <span class="n">music</span> <span class="ow">in</span> <span class="n">aList</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">music</span><span class="o">.</span><span class="n">has_attr</span><span class="p">(</span><span class="s2">&#34;href&#34;</span><span class="p">):</span> <span class="c1">#判断是否有href属性</span>
            <span class="k">if</span> <span class="nb">str</span><span class="p">(</span><span class="n">music</span><span class="o">.</span><span class="n">attrs</span><span class="p">[</span><span class="s2">&#34;href&#34;</span><span class="p">])</span><span class="o">.</span><span class="n">startswith</span><span class="p">(</span><span class="s2">&#34;/song?id=&#34;</span><span class="p">):</span> <span class="c1">#是不是音乐ID</span>
                <span class="nb">id</span> <span class="o">=</span> <span class="nb">str</span><span class="p">(</span><span class="n">music</span><span class="o">.</span><span class="n">attrs</span><span class="p">[</span><span class="s2">&#34;href&#34;</span><span class="p">])</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&#34;/song?id=&#34;</span><span class="p">,</span> <span class="s2">&#34;&#34;</span><span class="p">)</span> <span class="c1">#获取真实ID</span>
                <span class="k">try</span><span class="p">:</span>
                    <span class="k">if</span> <span class="ow">not</span> <span class="s1">&#39;${x.id}&#39;</span> <span class="ow">in</span> <span class="nb">id</span> <span class="ow">and</span> <span class="ow">not</span> <span class="s1">&#39;${song.id}&#39;</span> <span class="ow">in</span> <span class="nb">id</span><span class="p">:</span> <span class="c1">#过滤</span>
                        <span class="n">Songs</span><span class="p">[</span><span class="n">music</span><span class="o">.</span><span class="n">text</span><span class="p">]</span> <span class="o">=</span> <span class="n">outerUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="nb">id</span><span class="p">)</span> <span class="c1">#放入字典</span>
                <span class="k">except</span><span class="p">:</span>
                    <span class="k">pass</span>
    <span class="k">return</span> <span class="n">Songs</span> <span class="c1">#返回这个字典</span>
</code></pre></td></tr></table>
</div>
</div><p>结果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="p">{</span><span class="s1">&#39;Undertale&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39227624.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;sans.&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39224615.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Tem Shop&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39224629.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Undertale - Snowdin Town (****** Bootleg)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=463498197.mp3&#39;</span><span class="p">,</span> <span class="s2">&#34;It&#39;s Not Like I Like You!!(Instrumental)&#34;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=1385676402.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;似顔絵広場 (似顔絵チャンネル)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=1378269172.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;ステージ：コミカル (サンドキャニオン)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=28546263.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;I Love You&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=31460297.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Ice Cream&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=35407675.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Dying&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=506092100.mp3&#39;</span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这就很好了。不过这种方式总觉得不是很妥。毕竟这个问题我们不知道还会有多少个类似错误。于是我要祭出我的正则表达式大法了！（看来BeautifulSoup也不需要了）</p>
<p>导入模块：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">requests</span><span class="o">,</span> <span class="nn">re</span> <span class="c1">#导入模块</span>
<span class="kn">from</span> <span class="nn">fake_useragent</span> <span class="kn">import</span> <span class="n">UserAgent</span> <span class="c1">#导入模块</span>
</code></pre></td></tr></table>
</div>
</div><p>正则表达式：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&#34;/song\?id=(\d+)&#34;</span><span class="o">&gt;</span><span class="p">(</span><span class="o">.*</span><span class="err">?</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p><code>\?</code>：问号要转义，不然会被认为是匹配操作符。</p>
<p><code>(\d+)</code>：多个数字形成的子组。</p>
<p><code>(.*?)</code>：匹配任何文字（歌曲名称）。</p>
<p>这样，匹配一个，它就会返回一个格式为<code>(歌曲ID, 歌曲名称)</code>的元组。</p>
<p>于是我们最终的代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>
<span class="c1">#-*- coding:utf8 -*-</span>
<span class="s1">&#39;&#39;&#39;
</span><span class="s1">@Author  :   Ray
</span><span class="s1">@Contact :   ray@raycoder.me
</span><span class="s1">@Software:   PyCharm
</span><span class="s1">@File    :   init.py
</span><span class="s1">@Time    :   2020/2/23 21:19
</span><span class="s1">&#39;&#39;&#39;</span>
<span class="kn">import</span> <span class="nn">requests</span><span class="o">,</span> <span class="nn">re</span>
<span class="kn">from</span> <span class="nn">fake_useragent</span> <span class="kn">import</span> <span class="n">UserAgent</span>

<span class="k">def</span> <span class="nf">getArtUrl</span><span class="p">(</span><span class="n">artlist_url</span><span class="p">):</span> <span class="c1">#获取音乐真实ID的函数</span>
    <span class="n">outerUrl</span> <span class="o">=</span> <span class="s2">&#34;http://music.163.com/song/media/outer/url?id={0:s}.mp3&#34;</span> <span class="c1">#外链地址</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span> <span class="c1">#伪造请求头，防止被封</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Host&#39;</span><span class="p">:</span> <span class="s1">&#39;music.163.com&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://music.163.com/search/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;#/&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="n">HEADER</span><span class="p">)</span> <span class="c1">#网易云音乐使用异步iframe加载，需要去掉&#34;#/&#34;</span>
    <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span> <span class="c1">#含有音乐ID及名称的字典</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a href=&#34;/song\?id=(\d+)&#34;&gt;(.*?)&lt;/a&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span><span class="c1">#遍历匹配的对象</span>
        <span class="n">songs</span><span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">outerUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="c1">#存入字典</span>
    <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>测试：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">print</span><span class="p">(</span><span class="n">getUrl</span><span class="p">(</span><span class="s1">&#39;https://music.163.com/#/playlist?id=4874770876&#39;</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><p>返回如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="p">{</span><span class="s1">&#39;Prelude&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=441612739.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Marble Soda [Explicit]&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=400876011.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Snowdin Town&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39227596.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Monkeys Spinning Monkeys&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=403711640.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Overworld Theme (GFM Trap Remix)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=467590509.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Pizza&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=1302090422.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;King Dedede&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=27518579.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Undertale&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39227624.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;sans.&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39224615.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Tem Shop&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=39224629.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Undertale - Snowdin Town (****** Bootleg)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=463498197.mp3&#39;</span><span class="p">,</span> <span class="s2">&#34;It&#39;s Not Like I Like You!!(Instrumental)&#34;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=1385676402.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;似顔絵広場 (似顔絵チャンネル)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=1378269172.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;ステージ：コミカル (サンドキャニオン)&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=28546263.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;I Love You&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=31460297.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Ice Cream&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=35407675.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Dying&#39;</span><span class="p">:</span> <span class="s1">&#39;http://music.163.com/song/media/outer/url?id=506092100.mp3&#39;</span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最好将其做成一个<code>class</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>
<span class="c1">#-*- coding:utf8 -*-</span>
<span class="s1">&#39;&#39;&#39;
</span><span class="s1">@Author  :   Ray
</span><span class="s1">@Contact :   ray@raycoder.me
</span><span class="s1">@Software:   PyCharm
</span><span class="s1">@File    :   init.py
</span><span class="s1">@Time    :   2020/2/23 21:19
</span><span class="s1">&#39;&#39;&#39;</span>
<span class="kn">import</span> <span class="nn">requests</span><span class="o">,</span> <span class="nn">re</span>
<span class="kn">from</span> <span class="nn">fake_useragent</span> <span class="kn">import</span> <span class="n">UserAgent</span>

<span class="k">class</span> <span class="nc">CloudMusicSpider</span><span class="p">():</span>
    <span class="k">def</span> <span class="nf">getArtUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span> <span class="c1">#获取音乐真实ID的函数</span>
        <span class="n">outerUrl</span> <span class="o">=</span> <span class="s2">&#34;http://music.163.com/song/media/outer/url?id={0:s}.mp3&#34;</span> <span class="c1">#外链地址</span>
        <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span> <span class="c1">#伪造请求头，防止被封</span>
            <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Host&#39;</span><span class="p">:</span> <span class="s1">&#39;music.163.com&#39;</span><span class="p">,</span>
            <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://music.163.com/&#39;</span><span class="p">,</span>
            <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
        <span class="p">}</span>
        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="o">=</span><span class="n">url</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s1">&#39;#/&#39;</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">),</span> <span class="n">headers</span><span class="o">=</span><span class="n">HEADER</span><span class="p">)</span> <span class="c1">#网易云音乐使用异步iframe加载，需要去掉&#34;#/&#34;</span>
        <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a href=&#34;/song\?id=(\d+)&#34;&gt;(.*?)&lt;/a&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
            <span class="n">songs</span><span class="p">[</span><span class="n">i</span><span class="p">[</span><span class="mi">1</span><span class="p">]]</span> <span class="o">=</span> <span class="n">outerUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>测试：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">CloudMusicSpider</span> <span class="kn">import</span> <span class="n">CloudMusicSpider</span>
<span class="n">spider</span><span class="o">=</span><span class="n">CloudMusicSpider</span><span class="p">()</span>
<span class="k">print</span><span class="p">(</span><span class="n">spider</span><span class="o">.</span><span class="n">getArtUrl</span><span class="p">(</span><span class="s1">&#39;https://music.163.com/#/playlist?id=4874770876&#39;</span><span class="p">))</span>
</code></pre></td></tr></table>
</div>
</div><p>好的，我们这样子把它做成一个模块备用。</p>
<p>下一篇文章我会和大家讲爬虫<code>下载文件</code>的方法。我之后会写一篇有关<code>正则表达式</code>的文章。</p>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/%E7%A6%8F%E5%88%A9/" term="福利" label="福利"/><category scheme="https://raycoder.me/tags/%E7%BD%91%E6%98%93/" term="网易" label="网易"/><category scheme="https://raycoder.me/tags/%E7%A0%B4%E8%A7%A3/" term="破解" label="破解"/><category scheme="https://raycoder.me/tags/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐"/><category scheme="https://raycoder.me/tags/%E4%BC%9A%E5%91%98/" term="会员" label="会员"/><category scheme="https://raycoder.me/tags/python%E8%BF%9B%E9%98%B6/" term="Python进阶" label="Python进阶"/></entry><entry><title type="text">从零开始写一个音乐爬虫-3：酷狗音乐</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/kugoumusic-spider-artlist/"/><id>https://raycoder.me/p/kugoumusic-spider-artlist/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-02-18T21:48:00+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">本文将会详细的写从零开始制作酷狗音乐爬虫的过程，可以下载酷狗音乐音乐付费歌曲，使用Python3开发。 随便打开一个歌单，右键检查属性发现这个&amp;lt;a&amp;gt;标签中含有data。 点进去播放，会发现： 看……</summary><content type="html"><![CDATA[<p><strong>本文将会详细的写从零开始制作酷狗音乐爬虫的过程，可以下载酷狗音乐音乐付费歌曲，使用Python3开发。</strong></p>
<!-- more -->
<p>随便打开一个歌单，右键检查属性发现这个<code>&lt;a&gt;</code>标签中含有<code>data</code>。</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316114956.png" alt=""></p>
<p>点进去播放，会发现：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316115025.png" alt=""></p>
<p>看来，音乐外链和这个<code>hash</code>哈希值是脱不了关系的了。</p>
<p>事实上，酷狗音乐歌曲数据外链如下：</p>
<pre><code>http://www.kugou.com/yy/index.php?r=play/getdata&amp;hash=&lt;刚才看到的哈希值&gt;
</code></pre><p>填入刚刚看到的值（URL：<code>https://www.kugou.com/yy/index.php?r=play/getdata&amp;hash=FE2A4AC53981BB3FAF077CCA2461401A</code>），会看到如下结果：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-json" data-lang="json"><span class="p">{</span>
	<span class="nt">&#34;status&#34;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span>
	<span class="nt">&#34;err_code&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span>
	<span class="nt">&#34;data&#34;</span><span class="p">:{</span>
		<span class="nt">&#34;hash&#34;</span><span class="p">:</span><span class="s2">&#34;FE2A4AC53981BB3FAF077CCA2461401A&#34;</span><span class="p">,</span>
		<span class="nt">&#34;timelength&#34;</span><span class="p">:</span><span class="mi">76000</span><span class="p">,</span>
		<span class="nt">&#34;filesize&#34;</span><span class="p">:</span><span class="mi">1220066</span><span class="p">,</span>
		<span class="nt">&#34;audio_name&#34;</span><span class="p">:</span><span class="s2">&#34;Toby Fox - Snowdin Town&#34;</span><span class="p">,</span>
		<span class="nt">&#34;have_album&#34;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span>
		<span class="nt">&#34;album_name&#34;</span><span class="p">:</span><span class="s2">&#34;UNDERTALE Soundtrack&#34;</span><span class="p">,</span>
		<span class="nt">&#34;album_id&#34;</span><span class="p">:</span><span class="s2">&#34;1983482&#34;</span><span class="p">,</span>
		<span class="nt">&#34;img&#34;</span><span class="p">:</span><span class="s2">&#34;http:\/\/imge.kugou.com\/stdmusic\/20170320\/20170320173006740587.jpg&#34;</span><span class="p">,</span>
		<span class="nt">&#34;have_mv&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span>
		<span class="nt">&#34;video_id&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span>
		<span class="nt">&#34;author_name&#34;</span><span class="p">:</span><span class="s2">&#34;Toby Fox&#34;</span><span class="p">,</span>
		<span class="nt">&#34;song_name&#34;</span><span class="p">:</span><span class="s2">&#34;Snowdin Town&#34;</span><span class="p">,</span>
		<span class="nt">&#34;lyrics&#34;</span><span class="p">:</span><span class="s2">&#34;\ufeff[id:$00000000]\r\n[ar:arkady sevidov]\r\n[ti:June]\r\n[by:]\r\n[hash:4399c9872c7235b60b58ce88dc487897]\r\n[al:]\r\n[sign:]\r\n[qq:]\r\n[total:320317]\r\n[offset:0]\r\n[00:01.58]\u7eaf\u97f3\u4e50\uff0c\u8bf7\u6b23\u8d4f\r\n&#34;</span><span class="p">,</span>
		<span class="nt">&#34;author_id&#34;</span><span class="p">:</span><span class="s2">&#34;579236&#34;</span><span class="p">,</span>
		<span class="nt">&#34;privilege&#34;</span><span class="p">:</span><span class="mi">8</span><span class="p">,</span>
		<span class="nt">&#34;privilege2&#34;</span><span class="p">:</span><span class="s2">&#34;1000&#34;</span><span class="p">,</span>
		<span class="nt">&#34;play_url&#34;</span><span class="p">:</span><span class="s2">&#34;https:\/\/webfs.yun.kugou.com\/202002251957\/d2bff4d2209ca251954d38990445b8d2\/G057\/M08\/1A\/17\/GZQEAFaVAR6AYuQ_ABKd4lSFeUo118.mp3&#34;</span><span class="p">,</span>
		<span class="nt">&#34;authors&#34;</span><span class="p">:[</span>
			<span class="p">{</span>
			<span class="nt">&#34;author_id&#34;</span><span class="p">:</span><span class="s2">&#34;579236&#34;</span><span class="p">,</span>
			<span class="nt">&#34;sizable_avatar&#34;</span><span class="p">:</span><span class="s2">&#34;http:\/\/singerimg.kugou.com\/uploadpic\/softhead\/{size}\/20171223\/20171223024709440.jpg&#34;</span><span class="p">,</span>
			<span class="nt">&#34;is_publish&#34;</span><span class="p">:</span><span class="s2">&#34;1&#34;</span><span class="p">,</span>
			<span class="nt">&#34;author_name&#34;</span><span class="p">:</span><span class="s2">&#34;Toby Fox&#34;</span><span class="p">,</span>
			<span class="nt">&#34;avatar&#34;</span><span class="p">:</span><span class="s2">&#34;http:\/\/singerimg.kugou.com\/uploadpic\/softhead\/400\/20171223\/20171223024709440.jpg&#34;</span>
			<span class="p">}</span>
		<span class="p">],</span>
		<span class="nt">&#34;is_free_part&#34;</span><span class="p">:</span><span class="mi">0</span><span class="p">,</span>
		<span class="nt">&#34;bitrate&#34;</span><span class="p">:</span><span class="mi">128</span><span class="p">,</span>
		<span class="nt">&#34;audio_id&#34;</span><span class="p">:</span><span class="s2">&#34;20519359&#34;</span><span class="p">,</span>
		<span class="nt">&#34;play_backup_url&#34;</span><span class="p">:</span><span class="s2">&#34;https:\/\/webfs.cloud.kugou.com\/202002251957\/5d639c7a92c6750b759cab7e718ede04\/G057\/M08\/1A\/17\/GZQEAFaVAR6AYuQ_ABKd4lSFeUo118.mp3&#34;</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们打开这个<code>play_url</code>（<code>https:\/\/webfs.yun.kugou.com\/202002251957\/d2bff4d2209ca251954d38990445b8d2\/G057\/M08\/1A\/17\/GZQEAFaVAR6AYuQ_ABKd4lSFeUo118.mp3</code>），就会打开真实的音乐地址。</p>
<p>所以我们酷狗音乐获取真实下载链接的流程如下：</p>
<div class="mermaid">
graph TD;
    初始化程序，引入模块-->批量获取哈希值;
    批量获取哈希值-->打开json文件;
    打开json文件-->得到play_url;
    得到play_url--下载音乐;
</div>
<p>先尝试性获取hash：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>
<span class="c1">#-*- coding:utf8 -*-</span>
<span class="s1">&#39;&#39;&#39;
</span><span class="s1">@Author  :   Ray
</span><span class="s1">@Contact :   ray@raycoder.me
</span><span class="s1">@Software:   PyCharm
</span><span class="s1">@File    :   KugouSpider.py
</span><span class="s1">@Time    :   2019/11/4 21:19
</span><span class="s1">&#39;&#39;&#39;</span>

<span class="kn">import</span> <span class="nn">requests</span><span class="o">,</span> <span class="nn">re</span>
<span class="kn">from</span> <span class="nn">fake_useragent</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>

<span class="k">class</span> <span class="nc">KugouSpider</span><span class="p">():</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span>  <span class="c1"># 伪造请求头，防止被封IP</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://kugou.com/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>

    <span class="k">def</span> <span class="nf">getArtUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span>
        <span class="n">jsonUrl</span> <span class="o">=</span> <span class="s1">&#39;http://www.kugou.com/yy/index.php?r=play/getdata&amp;hash={0:s}&#39;</span>
        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">artlist_url</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">)</span>
        <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="c1">#print(response.text)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a title=&#34;.+&#34; hidefocus=&#34;true&#34; href=&#34;javascript:;&#34; data=&#34;(\w+)\|\d+&#34;&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
            <span class="c1">#print(jsonUrl.format(i))</span>
            <span class="n">jsonfile</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">jsonUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">,</span> <span class="n">cookies</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cookies</span><span class="p">)</span>
            <span class="n">jsondata</span> <span class="o">=</span> <span class="n">jsonfile</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
            <span class="c1">#print(jsondata)</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">songs</span><span class="p">[</span><span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;audio_name&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;play_url&#39;</span><span class="p">]</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
        <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>哎呀！最后返回了一个空字典！<code>{}</code>为什么呢？我观察后发现，酷狗需要添加一个<code>cookie</code>才可以访问到数据。</p>
<p>我们加一下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python">    <span class="k">def</span> <span class="nf">getUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span>
        <span class="n">jsonUrl</span> <span class="o">=</span> <span class="s1">&#39;http://www.kugou.com/yy/index.php?r=play/getdata&amp;hash={0:s}&#39;</span>
        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">artlist_url</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">)</span>
        <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a title=&#34;.+&#34; hidefocus=&#34;true&#34; href=&#34;javascript:;&#34; data=&#34;(\w+)\|\d+&#34;&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
            <span class="n">jsonfile</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">jsonUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">,</span> <span class="n">cookies</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;kg_mid&#39;</span><span class="p">:</span> <span class="s1">&#39;1&#39;</span><span class="p">})</span>
            <span class="n">jsondata</span> <span class="o">=</span> <span class="n">jsonfile</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">songs</span><span class="p">[</span><span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;audio_name&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;play_url&#39;</span><span class="p">]</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
        <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>嗯？还是没有数据！我觉得可能是<code>HEADER</code>中的<code>host</code>的问题。</p>
<p>把它去掉！</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">KugouSpider</span><span class="p">():</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://kugou.com/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>
    <span class="k">def</span> <span class="nf">getUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span>
        <span class="n">jsonUrl</span> <span class="o">=</span> <span class="s1">&#39;http://www.kugou.com/yy/index.php?r=play/getdata&amp;hash={0:s}&#39;</span>
        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">artlist_url</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">)</span>
        <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="c1">#print(response.text)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a title=&#34;.+&#34; hidefocus=&#34;true&#34; href=&#34;javascript:;&#34; data=&#34;(\w+)\|\d+&#34;&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
            <span class="c1">#print(jsonUrl.format(i))</span>
            <span class="n">jsonfile</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">jsonUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">,</span> <span class="n">cookies</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;kg_mid&#39;</span><span class="p">:</span> <span class="s1">&#39;1&#39;</span><span class="p">})</span>
            <span class="n">jsondata</span> <span class="o">=</span> <span class="n">jsonfile</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">songs</span><span class="p">[</span><span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;audio_name&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;play_url&#39;</span><span class="p">]</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
        <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，我们就获得了真实的数据：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="p">{</span><span class="s1">&#39;Toby Fox - Snowy&#39;</span><span class="p">:</span> <span class="s1">&#39;https://webfs.yun.kugou.com/202002280800/8b338c7c966f73984a16d332fe0a1905/G053/M04/0C/10/dQ0DAFaVAPCAdhQcABl6n5DvBc0140.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Toby Fox - Undertale&#39;</span><span class="p">:</span> <span class="s1">&#39;https://webfs.yun.kugou.com/202002280800/91772c1108ab0627888c84f9fb6380f1/G057/M04/17/05/eQ0DAFaiNEWAXZVoAF0rmY34-tU840.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Toby Fox - Tem Shop&#39;</span><span class="p">:</span> <span class="s1">&#39;https://webfs.yun.kugou.com/202002280800/02fb916f700f9df912d93daa77c9d420/G055/M0A/06/07/14YBAFaVAdyIb_RdAAsQ0yCL9vEAAAorgG2O-IACxDr193.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Toby Fox - sans.&#39;</span><span class="p">:</span> <span class="s1">&#39;https://webfs.yun.kugou.com/202002280800/3580fcc155cd84b346acc9465504b01a/G052/M02/0C/07/1IYBAFaVAOWINLXsAAxhJsPWw2UAAAy4gIAOs0ADGE-807.mp3&#39;</span><span class="p">,</span> <span class="s1">&#39;Toby Fox - Dogsong&#39;</span><span class="p">:</span> <span class="s1">&#39;https://webfs.yun.kugou.com/202002280800/399c52d789e7f659001ab84e2bcfa823/G055/M00/06/11/F5QEAFaVARWIZFBMAAkgfyVHyJ4AAAoqAMZ4XYACSCX641.mp3&#39;</span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>不对呀！为什么只找到了几首音乐？我们打印一下<code>jsondata</code>。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">getUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span>
    <span class="n">jsonUrl</span> <span class="o">=</span> <span class="s1">&#39;http://www.kugou.com/yy/index.php?r=play/getdata&amp;hash={0:s}&#39;</span>
    <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">artlist_url</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">)</span>
    <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a title=&#34;.+&#34; hidefocus=&#34;true&#34; href=&#34;javascript:;&#34; data=&#34;(\w+)\|\d+&#34;&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
        <span class="n">jsonfile</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">jsonUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">,</span> <span class="n">cookies</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;kg_mid&#39;</span><span class="p">:</span> <span class="s1">&#39;1&#39;</span><span class="p">})</span>
        <span class="n">jsondata</span> <span class="o">=</span> <span class="n">jsonfile</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
        <span class="k">print</span><span class="p">(</span><span class="n">jsondata</span><span class="p">)</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="k">pass</span>
            <span class="c1">#songs[jsondata[&#39;data&#39;][&#39;audio_name&#39;]] = jsondata[&#39;data&#39;][&#39;play_url&#39;]</span>
        <span class="k">except</span><span class="p">:</span>
            <span class="k">pass</span>
    <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>Woc原来这个东西返回的是这种数据：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="p">{</span><span class="s1">&#39;status&#39;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="s1">&#39;err_code&#39;</span><span class="p">:</span> <span class="mi">30020</span><span class="p">,</span> <span class="s1">&#39;data&#39;</span><span class="p">:</span> <span class="p">{</span><span class="s1">&#39;SSA-CODE&#39;</span><span class="p">:</span> <span class="s1">&#39;bj_event_ee07e35318276c48c519523c26d9f4ce&#39;</span><span class="p">,</span> <span class="s1">&#39;SSA-HMID&#39;</span><span class="p">:</span> <span class="s1">&#39;1&#39;</span><span class="p">}}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们随便打开一个<code>hash</code>源链：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316115218.png" alt=""></p>
<p>也是这种情况。</p>
<p>我们再打开播放地址<code>https://www.kugou.com/song/#hash=FE2A4AC53981BB3FAF077CCA2461401A&amp;album_id=1983482</code>：喔！它出现了一个验证码。这个东西就是罪魁祸首。</p>
<p>验证之后再打开<code>hash源链</code>，数据就出现了。</p>
<p>所以我们可以判断酷狗音乐这个<code>cookie</code>不止<code>kg_mid</code>一个。</p>
<p>我们打开浏览器控制台：</p>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200316115245.png" alt=""></p>
<p>这里有恶心的<code>cookie</code>！</p>
<p>把它们复制到程序中去。</p>
<p>乃得：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="k">class</span> <span class="nc">KugouSpider</span><span class="p">():</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span>  <span class="c1"># 伪造请求头，防止被封IP</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://kugou.com/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>
    <span class="n">cookies</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;kg_mid&#39;</span><span class="p">:</span> <span class="s1">&#39;44c117b70a8abbe992b50ee90d19784f&#39;</span><span class="p">,</span>
               <span class="s1">&#39;kg_dfid&#39;</span><span class="p">:</span> <span class="s1">&#39;2SoQgm4W6BHT0eH1EP3qAt3X&#39;</span><span class="p">,</span>
                <span class="s1">&#39;kg_dfid_collect&#39;</span><span class="p">:</span> <span class="s1">&#39;d41d8cd98f00b204e9800998ecf8427e&#39;</span><span class="p">,</span>
                <span class="s1">&#39;KuGooRandom&#39;</span><span class="p">:</span> <span class="s1">&#39;66781582627339920&#39;</span><span class="p">,</span>
                <span class="s1">&#39;Hm_lvt_aedee6983d4cfc62f509129360d6bb3d	1582&#39;</span><span class="p">:</span> <span class="s1">&#39;1582627291,1582630139,1582674521&#39;</span><span class="p">,</span>
                <span class="s1">&#39;kg_mid_temp&#39;</span><span class="p">:</span> <span class="s1">&#39;44c117b70a8abbe992b50ee90d19784f&#39;</span><span class="p">,</span>
                <span class="s1">&#39;Hm_lpvt_aedee6983d4cfc62f509129360d6bb3d&#39;</span><span class="p">:</span> <span class="s1">&#39;1582676297&#39;</span><span class="p">,</span>
                <span class="s1">&#39;ACK_SERVER_10016&#39;</span><span class="p">:</span> <span class="s1">&#39;%7B</span><span class="si">%22li</span><span class="s1">st</span><span class="si">%22%</span><span class="s1">3A%5B%5B</span><span class="si">%22g</span><span class="s1">zreg-user.kugou.com</span><span class="si">%22%</span><span class="s1">5D%5D%7D&#39;</span><span class="p">,</span>
                <span class="s1">&#39;ACK_SERVER_10015&#39;</span><span class="p">:</span> <span class="s1">&#39;%7B</span><span class="si">%22li</span><span class="s1">st</span><span class="si">%22%</span><span class="s1">3A%5B%5B%22bjlogin-user.kugou.com</span><span class="si">%22%</span><span class="s1">5D%5D%7D&#39;</span><span class="p">,</span>
                <span class="s1">&#39;ACK_SERVER_10017&#39;</span><span class="p">:</span> <span class="s1">&#39;%7B</span><span class="si">%22li</span><span class="s1">st</span><span class="si">%22%</span><span class="s1">3A%5B%5B</span><span class="si">%22g</span><span class="s1">zverifycode.service.kugou.com</span><span class="si">%22%</span><span class="s1">5D%5D%7D&#39;</span>
               <span class="p">}</span>

    <span class="k">def</span> <span class="nf">getUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span>
        <span class="n">jsonUrl</span> <span class="o">=</span> <span class="s1">&#39;http://www.kugou.com/yy/index.php?r=play/getdata&amp;hash={0:s}&#39;</span>
        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">artlist_url</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">,</span> <span class="n">cookies</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cookies</span><span class="p">)</span>
        <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a title=&#34;.+&#34; hidefocus=&#34;true&#34; href=&#34;javascript:;&#34; data=&#34;(\w+)\|\d+&#34;&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
            <span class="n">jsonfile</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">jsonUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">,</span> <span class="n">cookies</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cookies</span><span class="p">)</span>
            <span class="n">jsondata</span> <span class="o">=</span> <span class="n">jsonfile</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">songs</span><span class="p">[</span><span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;audio_name&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;play_url&#39;</span><span class="p">]</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
        <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>这个<code>cookie</code>是可以重复使用的，我们只需要在数据无法提取时去验证一下即可。</p>
<p>下载音乐可以去看我的这篇文章：</p>
<p><a href="https://raycoder.me/p/2538.html" class="LinkCard">从零开始写一个音乐爬虫-2-网易云音乐：下载音乐文件</a></p>
<p>所以我们完成的程序如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="ch">#!/usr/bin/env python</span>
<span class="c1">#-*- coding:utf8 -*-</span>
<span class="s1">&#39;&#39;&#39;
</span><span class="s1">@Author  :   Ray
</span><span class="s1">@Contact :   ray@raycoder.me
</span><span class="s1">@Software:   PyCharm
</span><span class="s1">@File    :   KugouSpider.py
</span><span class="s1">@Time    :   2019/11/4 21:19
</span><span class="s1">&#39;&#39;&#39;</span>

<span class="kn">import</span> <span class="nn">requests</span><span class="o">,</span> <span class="nn">re</span>
<span class="kn">from</span> <span class="nn">fake_useragent</span> <span class="kn">import</span> <span class="o">*</span>
<span class="kn">from</span> <span class="nn">random</span> <span class="kn">import</span> <span class="n">randint</span>

<span class="k">class</span> <span class="nc">KugouSpider</span><span class="p">():</span>
    <span class="n">HEADER</span> <span class="o">=</span> <span class="p">{</span>  <span class="c1"># 伪造请求头，防止被封IP</span>
        <span class="s1">&#39;Accept&#39;</span><span class="p">:</span> <span class="s1">&#39;*/*&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Encoding&#39;</span><span class="p">:</span> <span class="s1">&#39;gzip,deflate,sdch&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Accept-Language&#39;</span><span class="p">:</span> <span class="s1">&#39;zh-CN,zh;q=0.8,gl;q=0.6,zh-TW;q=0.4&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Connection&#39;</span><span class="p">:</span> <span class="s1">&#39;keep-alive&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Content-Type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">,</span>
        <span class="s1">&#39;Referer&#39;</span><span class="p">:</span> <span class="s1">&#39;https://kugou.com/&#39;</span><span class="p">,</span>
        <span class="s1">&#39;User-Agent&#39;</span><span class="p">:</span> <span class="n">UserAgent</span><span class="p">()</span><span class="o">.</span><span class="n">random</span>
    <span class="p">}</span>
    <span class="n">cookies</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;kg_mid&#39;</span><span class="p">:</span> <span class="s1">&#39;d7d2db42653ccb5262c6b3a53d3e513e&#39;</span><span class="p">,</span>
               <span class="s1">&#39;kg_dfid&#39;</span><span class="p">:</span> <span class="s1">&#39;4E1aaE0U1ZlH0aaWYz3Z7N6n&#39;</span><span class="p">,</span>
               <span class="s1">&#39;kg_dfid_collect&#39;</span><span class="p">:</span> <span class="s1">&#39;d41d8cd98f00b204e9800998ecf8427e&#39;</span><span class="p">,</span>
               <span class="s1">&#39;KuGooRandom&#39;</span><span class="p">:</span> <span class="s1">&#39;66781582627339920&#39;</span><span class="p">,</span>
               <span class="s1">&#39;Hm_lvt_aedee6983d4cfc62f509129360d6bb3d	1582&#39;</span><span class="p">:</span> <span class="s1">&#39;1583409383&#39;</span><span class="p">,</span>
               <span class="s1">&#39;kg_mid_temp&#39;</span><span class="p">:</span> <span class="s1">&#39;d7d2db42653ccb5262c6b3a53d3e513e&#39;</span><span class="p">,</span>
               <span class="s1">&#39;Hm_lpvt_aedee6983d4cfc62f509129360d6bb3d&#39;</span><span class="p">:</span> <span class="s1">&#39;1583409803&#39;</span><span class="p">,</span>
               <span class="s1">&#39;ACK_SERVER_10016&#39;</span><span class="p">:</span> <span class="s1">&#39;%7B</span><span class="si">%22li</span><span class="s1">st</span><span class="si">%22%</span><span class="s1">3A%5B%5B</span><span class="si">%22g</span><span class="s1">zreg-user.kugou.com</span><span class="si">%22%</span><span class="s1">5D%5D%7D&#39;</span><span class="p">,</span>
               <span class="s1">&#39;ACK_SERVER_10015&#39;</span><span class="p">:</span> <span class="s1">&#39;%7B</span><span class="si">%22li</span><span class="s1">st</span><span class="si">%22%</span><span class="s1">3A%5B%5B%22bjlogin-user.kugou.com</span><span class="si">%22%</span><span class="s1">5D%5D%7D&#39;</span><span class="p">,</span>
               <span class="s1">&#39;ACK_SERVER_10017&#39;</span><span class="p">:</span> <span class="s1">&#39;%7B</span><span class="si">%22li</span><span class="s1">st</span><span class="si">%22%</span><span class="s1">3A%5B%5B</span><span class="si">%22g</span><span class="s1">zverifycode.service.kugou.com</span><span class="si">%22%</span><span class="s1">5D%5D%7D&#39;</span>
              <span class="p">}</span>

    <span class="k">def</span> <span class="nf">getArtUrl</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">artlist_url</span><span class="p">):</span>
        <span class="n">jsonUrl</span> <span class="o">=</span> <span class="s1">&#39;http://www.kugou.com/yy/index.php?r=play/getdata&amp;hash={0:s}&#39;</span>
        <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">artlist_url</span><span class="p">,</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">)</span>
        <span class="n">songs</span> <span class="o">=</span> <span class="p">{}</span>
        <span class="c1">#print(response.text)</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="sa">r</span><span class="s1">&#39;&lt;a title=&#34;.+&#34; hidefocus=&#34;true&#34; href=&#34;javascript:;&#34; data=&#34;(\w+)\|\d+&#34;&gt;&#39;</span><span class="p">,</span> <span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">):</span>
            <span class="c1">#print(jsonUrl.format(i))</span>
            <span class="n">jsonfile</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span> <span class="o">=</span> <span class="n">jsonUrl</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">i</span><span class="p">),</span> <span class="n">headers</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">HEADER</span><span class="p">,</span> <span class="n">cookies</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">cookies</span><span class="p">)</span>
            <span class="n">jsondata</span> <span class="o">=</span> <span class="n">jsonfile</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
            <span class="c1">#print(jsondata)</span>
            <span class="k">try</span><span class="p">:</span>
                <span class="n">songs</span><span class="p">[</span><span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;audio_name&#39;</span><span class="p">]]</span> <span class="o">=</span> <span class="n">jsondata</span><span class="p">[</span><span class="s1">&#39;data&#39;</span><span class="p">][</span><span class="s1">&#39;play_url&#39;</span><span class="p">]</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">pass</span>
        <span class="k">return</span> <span class="n">songs</span>
</code></pre></td></tr></table>
</div>
</div><p>测试：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">KugouSpider</span> <span class="kn">import</span> <span class="n">KugouSpider</span>
<span class="kn">from</span> <span class="nn">download</span> <span class="kn">import</span> <span class="n">downloadMusic</span>

<span class="k">def</span> <span class="nf">_test</span><span class="p">():</span>
    <span class="n">spider</span> <span class="o">=</span> <span class="n">KugouSpider</span><span class="p">()</span>
    <span class="n">downloadMusic</span><span class="p">(</span><span class="n">spider</span><span class="o">.</span><span class="n">getUrl</span><span class="p">(</span><span class="s1">&#39;https://www.kugou.com/yy/special/single/1094256.html&#39;</span><span class="p">))</span>
<span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">_test</span><span class="p">()</span>
</code></pre></td></tr></table>
</div>
</div><p>这个也要写为一个单独的文件：<code>test.py</code>。
P.S.我发现貌似随机Cookie有效：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-python" data-lang="python">    <span class="n">randten</span> <span class="o">=</span> <span class="k">lambda</span> <span class="n">large</span><span class="p">:</span> <span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">10</span><span class="o">**</span><span class="n">large</span><span class="p">)</span>
    <span class="n">cookies</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;kg_mid&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">)),</span>
               <span class="s1">&#39;kg_dfid&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">)),</span>
               <span class="s1">&#39;kg_dfid_collect&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">)),</span>
               <span class="s1">&#39;KuGooRandom&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">12</span><span class="p">)),</span>
               <span class="s1">&#39;Hm_lvt_aedee6983d4cfc62f509129360d6bb3d	1582&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">10</span><span class="p">)),</span>
               <span class="s1">&#39;kg_mid_temp&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">)),</span>
               <span class="s1">&#39;Hm_lpvt_aedee6983d4cfc62f509129360d6bb3d&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">)),</span>
               <span class="s1">&#39;ACK_SERVER_10016&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">)),</span>
               <span class="s1">&#39;ACK_SERVER_10015&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">)),</span>
               <span class="s1">&#39;ACK_SERVER_10017&#39;</span><span class="p">:</span> <span class="nb">str</span><span class="p">(</span><span class="n">randten</span><span class="p">(</span><span class="mi">30</span><span class="p">))</span>
              <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>可以试试。</p>
]]></content><category scheme="https://raycoder.me/categories/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/categories/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/python/" term="Python" label="Python"/><category scheme="https://raycoder.me/tags/%E7%88%AC%E8%99%AB/" term="爬虫" label="爬虫"/><category scheme="https://raycoder.me/tags/%E7%A6%8F%E5%88%A9/" term="福利" label="福利"/><category scheme="https://raycoder.me/tags/%E9%9F%B3%E4%B9%90/" term="音乐" label="音乐"/><category scheme="https://raycoder.me/tags/%E7%A0%B4%E8%A7%A3/" term="破解" label="破解"/><category scheme="https://raycoder.me/tags/%E4%BC%9A%E5%91%98/" term="会员" label="会员"/><category scheme="https://raycoder.me/tags/python%E8%BF%9B%E9%98%B6/" term="Python进阶" label="Python进阶"/><category scheme="https://raycoder.me/tags/%E9%85%B7%E7%8B%97/" term="酷狗" label="酷狗"/></entry><entry><title type="text">一些关于GitHub图像无法正常显示和访问速度慢的解决方案</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/github-hosts/"/><id>https://raycoder.me/p/github-hosts/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-02-18T08:08:42+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">今天我在访问GayHub的Issue时发现访问速度奇慢无比，加载好后也无法正常显示图片，raw.githubusercontent.com也无法进入。上网查找相关资料后终于有了相关的解决方法。 网上一般……</summary><content type="html"><![CDATA[<p><strong>今天我在访问GayHub的Issue时发现访问速度奇慢无比，加载好后也无法正常显示图片，raw.githubusercontent.com也无法进入。上网查找相关资料后终于有了相关的解决方法。</strong></p>
<p>网上一般流传的Hosts已经不好使了，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="c1"># GitHub Start</span>
192.30.253.112 github.com
192.30.253.118 gist.github.com
151.101.112.133 assets-cdn.github.com
151.101.184.133 raw.githubusercontent.com
151.101.112.133 gist.githubusercontent.com
151.101.184.133 cloud.githubusercontent.com
151.101.112.133 camo.githubusercontent.com
151.101.112.133 avatars0.githubusercontent.com
151.101.112.133 avatars1.githubusercontent.com
151.101.184.133 avatars2.githubusercontent.com
151.101.12.133 avatars3.githubusercontent.com
151.101.12.133 avatars4.githubusercontent.com
151.101.184.133 avatars5.githubusercontent.com
151.101.184.133 avatars6.githubusercontent.com
151.101.184.133 avatars7.githubusercontent.com
151.101.12.133 avatars8.githubusercontent.com
<span class="c1"># GitHub End</span>
</code></pre></td></tr></table>
</div>
</div><p><code>ipconfig /flushdns</code>后无效。</p>
<p>后来又去<a href="https://github.com/chenxuhua/issues-blog/issues/3">这里</a>翻了翻，又发现了一个好用的东西：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">140.82.113.4 github.com
140.82.113.19 assets-cdn.github.com
151.101.185.194 github.global.ssl.fastly.net
185.199.108.153 assets-cdn.github.com
185.199.108.153 github.github.io
151.101.184.133 githubusercontent.com
192.30.253.118 gist.github.com
</code></pre></td></tr></table>
</div>
</div><p>发现这个竟然是有用的！所以只需要使用这个Hosts即可！</p>
<p><code>ipconfig /flushdns</code>走起~</p>
<p>不过这些IP每人都<code>各不相同</code>，假如你还不能正常访问，那请去<a href="https://www.ipaddress.com">https://www.ipaddress.com</a></p>
<p>查询相对应GayHub ip地址，把之前hosts中的<code>替换</code>掉，就应该可以正常访问了。</p>
]]></content><category scheme="https://raycoder.me/categories/hosts/" term="Hosts" label="Hosts"/><category scheme="https://raycoder.me/categories/github/" term="GitHub" label="GitHub"/><category scheme="https://raycoder.me/tags/github/" term="GitHub" label="GitHub"/><category scheme="https://raycoder.me/tags/hosts/" term="Hosts" label="Hosts"/><category scheme="https://raycoder.me/tags/%E5%8A%A0%E9%80%9F/" term="加速" label="加速"/></entry><entry><title type="text">使用CentOS 7 + Kodcloud(可道云) 搭建个人网盘</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/kodcloud-with-centos7/"/><id>https://raycoder.me/p/kodcloud-with-centos7/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-02-14T17:10:53+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html"><![CDATA[<p><strong>网盘接二连三的倒下，*度网盘又开始限速，真不让人满意🐷。。</strong></p>
<p><strong>还是自己搭建的网盘比较靠谱……😂</strong></p>……]]></summary><content type="html"><![CDATA[<p><strong>网盘接二连三的倒下，*度网盘又开始限速，真不让人满意🐷。。</strong></p>
<p><strong>还是自己搭建的网盘比较靠谱……😂</strong></p>
<h3 id="准备材料">准备材料</h3>
<hr>
<ol>
<li>
<p>带有CentOS的服务器一份</p>
</li>
<li>
<p>装有PHP</p>
</li>
<li>
<p>有Apache</p>
<p><del>下锅乱炖！</del></p>
</li>
</ol>
<p>我这里采用腾讯云的CVM。</p>
<h3 id="step1-安装xmapp">Step.1 安装XMAPP</h3>
<hr>
<h4 id="1-下载">1. 下载</h4>
<p>下载命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">wget -c https://www.apachefriends.org/xampp-files/7.4.2/xampp-linux-x64-7.4.2-0-installer.run
</code></pre></td></tr></table>
</div>
</div><p>不过有人说连接超时(我也是)，还好我是个好博主😂(大义凛然)，提供个<code>我的下载源</code>：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">wget -c http://111.229.174.206/kodexplorer/data/User/admin/home/Coding/xampp-linux-x64-7.4.2-0-installer.run
</code></pre></td></tr></table>
</div>
</div><p>也许比较慢，但总比下载不了好多了</p>
<p>下载之后会看到一个<code>.run</code>可执行文件，先添加相应的权限：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">chmod +x xampp-linux-x64-7.4.2-0-installer.run
</code></pre></td></tr></table>
</div>
</div><h4 id="2安装">2.安装</h4>
<p>运行：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sudo ./xampp-linux-x64-7.4.2-0-installer.run
</code></pre></td></tr></table>
</div>
</div><p>按照提示一路<code>y/回车</code>即可</p>
<h3 id="step-2安装可道云">Step 2.安装可道云</h3>
<hr>
<p>官方下载页面：https://kodcloud.com/download/。其中有获取最新版可道云的相关命令。</p>
<h4 id="下载">下载：</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">wget http://static.kodcloud.com/update/download/kodexplorer4.40.zip
</code></pre></td></tr></table>
</div>
</div><h3 id="安装">安装：</h3>
<h5 id="创建目录">创建目录：</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sudo mkdir kodexplorer
</code></pre></td></tr></table>
</div>
</div><h5 id="解压">解压：</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">unzip kodexplorer4.40.zip -d ./kodexplorer
</code></pre></td></tr></table>
</div>
</div><h5 id="设置权限">设置权限：</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> ./kodexplorer
chmod -Rf <span class="m">777</span> ./*
</code></pre></td></tr></table>
</div>
</div><h5 id="完成安装">完成安装：</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-bash" data-lang="bash">sudo cp -r kodexplorer/ /opt/lampp/htdocs/
<span class="nb">cd</span> /opt/lampp/htdocs
chmod <span class="m">777</span> kodexplorer
chmod -R <span class="m">777</span> kodexplorer/data/
</code></pre></td></tr></table>
</div>
</div><h3 id="step-3-enjoy">Step 3. Enjoy!</h3>
<hr>
<pre><code>sudo /opt/lampp/xampp start
</code></pre><p>浏览器打开<code>IP地址/kodexplorer/</code>，设置管理员密码，开始使用。</p>]]></content><category scheme="https://raycoder.me/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/" term="服务器" label="服务器"/><category scheme="https://raycoder.me/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/" term="服务器" label="服务器"/><category scheme="https://raycoder.me/tags/centos/" term="CentOS" label="CentOS"/><category scheme="https://raycoder.me/tags/%E6%90%9E%E6%9C%BA/" term="搞机" label="搞机"/><category scheme="https://raycoder.me/tags/%E7%BD%91%E7%9B%98/" term="网盘" label="网盘"/><category scheme="https://raycoder.me/tags/%E6%95%99%E7%A8%8B/" term="教程" label="教程"/></entry><entry><title type="text">想拥有自己的域名邮箱么？！</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/domain-mail/"/><id>https://raycoder.me/p/domain-mail/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-02-01T14:20:35+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">假如你有一个域名，你想用它来弄一个域名邮箱么?! 由于QQ邮箱在2020年1月20号取消了新建域名邮箱功能，而企业邮箱注册又非常麻烦，所以我决定采用一个国外的域名邮箱提供商——Pingly。 Step 1.打开P……</summary><content type="html"><![CDATA[<blockquote>
<p><strong><i class="fa fa-envelope"></i>假如你有一个域名，你想用它来弄一个域名邮箱么?!<i class="fa fa-envelope"></i></strong></p>
<!-- more -->
</blockquote>
<p>由于QQ邮箱在2020年1月20号取消了新建域名邮箱功能，而企业邮箱注册又非常麻烦，所以我决定采用一个国外的域名邮箱提供商——<a href="https://pingly.com">Pingly</a>。</p>
<h3 id="step-1打开pinglyhttpspinglycomsignup注册一个账号已有账号的点击登录httpspinglycomlogin">Step 1.打开<a href="https:/pingly.com/signup">Pingly</a>，注册一个账号。（已有账号的点击<a href="https://pingly.com/login">登录</a>）</h3>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200401131540.png" alt=""></p>
<h3 id="step-2登录注册完后按照系统的提示设置域名的txtcname及mx转发设置成功后点击verify可能要一段时间">Step 2.登录/注册完后按照系统的提示设置域名的TXT、CNAME及MX转发，设置成功后点击Verify（可能要一段时间）</h3>
<p><img src="https://cdn.jsdelivr.net/gh/FFRaycoder/cdn/imgs/20200401131541.png" alt=""></p>
<h3 id="step-3然后打开你注册时的邮箱点击其中的链接进行账号的验证">Step 3.然后打开你注册时的邮箱，点击其中的链接进行账号的验证</h3>
<h3 id="final好了之后所有发到你的域名邮箱的邮件都会在收件箱httpspinglycominbox出现">Final：好了，之后所有发到你的域名邮箱的邮件都会在<a href="https://pingly.com/#inbox">收件箱</a>出现！</h3>
<p>开始使用吧！我的邮箱：<a href="mailto:ray@raycoder.me">ray@raycoder.me</a></p>
<hr>
<p>2020.4.1更新：推荐使用国内的<em class="emphasis-point">网易云企业邮</em>或<em class="emphasis-point">阿里云邮箱</em>。</p>
]]></content><category scheme="https://raycoder.me/categories/%E5%9F%9F%E5%90%8D/" term="域名" label="域名"/><category scheme="https://raycoder.me/categories/%E9%82%AE%E7%AE%B1/" term="邮箱" label="邮箱"/><category scheme="https://raycoder.me/tags/%E5%9F%9F%E5%90%8D/" term="域名" label="域名"/><category scheme="https://raycoder.me/tags/%E8%87%AA%E5%AE%9A%E4%B9%89/" term="自定义" label="自定义"/><category scheme="https://raycoder.me/tags/%E6%90%9E%E6%9C%BA/" term="搞机" label="搞机"/></entry><entry><title type="text">PicGo + Gitee(码云)实现markdown图床</title><link rel="alternate" type="text/html" href="https://raycoder.me/p/picgo-and-gitee-markdown-pic/"/><id>https://raycoder.me/p/picgo-and-gitee-markdown-pic/</id><updated>2020-04-09T09:07:57+08:00</updated><published>2020-01-22T14:53:20+08:00</published><author><name>Ray</name><uri>https://raycoder.me/</uri><email>ray@raycoder.me</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">PicGo+Gitee=markdown图床</summary><content type="html"><![CDATA[<blockquote>
<p><strong>转载自: <a href="https://www.jianshu.com/u/f81ef1ee8360">LeonG7</a>的<a href="https://www.jianshu.com/p/b69950a49ae2">简书博客</a>。</strong>
<strong>前言：深感在线博客的编辑器坑太多了，文档丢失、必须联网、可移植性太差，所以开始寻找可替代的方案。</strong></p>
</blockquote>
<p>咱们写博客的时候，总是需要<code>插入图片</code>的，图片存在本地的话上传到博客网站去就没法显示了，就算一个图一个图的复制粘贴上去，想移植到其他的博客网站，图就会失效，我们就需要图床。</p>
<p>图床是干什么的？ 图床就是一个便于在博文中插入在线图片连接的个人图片仓库。设置图床之后，在自己博客中插入的图片链接就可以随时随地在线预览了，并且不会因为任何意外原因无法查看，除非自己亲自删除。</p>
<h4 id="神奇的picgo就是为了解决这个问题诞生的它可以将图片上传到指定的图床上然后返回markdown链接直接粘贴到你的文档中就搞定啦">神奇的PicGo就是为了解决这个问题诞生的，它可以将图片上传到指定的图床上，然后返回markdown链接，直接粘贴到你的文档中，就搞定啦~~~</h4>
<p>问题又来了，网上推荐七牛云阿里云都是要租赁服务器的，太麻烦还要钱，微博现在挂链接又很厉害。大部分人选择用github，但是github虽好却是国外的网站，速度终究比不上国内网站，研究了小半天，终于发现完美的解决方案。</p>
<h2 id="最终决定使用picgohttpsgithubcommolunerfinnpicgo--国内的github---码云httpsgiteecom来实现markdown图床">最终决定使用<a href="https://github.com/Molunerfinn/PicGo"><code>PicGo</code></a> + <a href="https://gitee.com"><code>国内的github - 码云</code></a>来实现<code>markdown图床</code></h2>
<h2 id="1-安装">1. 安装</h2>
<ul>
<li>PicGo</li>
<li>picgo-plugin-gitee-uploader插件</li>
</ul>
<h3 id="首先打开picgo官网httpsgithubcommolunerfinnpicgo下载安装包">首先打开<a href="https://github.com/Molunerfinn/PicGo">PicGo官网</a>，下载安装包</h3>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo1.jpg"/></center>
<p><del>速度还挺快</del></p>
<h3 id="安装之后打开主界面">安装之后打开主界面</h3>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo2.jpg"/></center>
<h3 id="选择最底下的插件设置搜索gitee">选择最底下的插件设置，搜索gitee</h3>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo3.jpg"/></center>
<h3 id="点击gitee-uploader开始安装">点击gitee-uploader开始安装</h3>
<blockquote>
<p>这里注意一下，必须要先安装<a href="https://nodejs.org"><code>node.js</code></a>才能安装插件，没装的自己装一下，然后重启就行。</p>
</blockquote>
<p>这个地方有两个插件，我试了一遍，两个都能用，大家看心情选择，先说一下这个<code>gitee-uploader</code>，用不了的同学就选另外那个，我都会讲一遍配置。</p>
<h2 id="2-建立gitee码云图床库">2. 建立Gitee（码云）图床库</h2>
<p>注册码云的方法很简单，网站引导都是中文，不多说了，我们直接建立自己的图床库。</p>
<h3 id="点击右上角的号新建仓库">点击右上角的+号，新建仓库</h3>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo4.jpg"/></center>
<p>新建仓库的要点如下：</p>
<pre><code>1. 输入一个仓库名称
2. 其次将仓库设为公开
3. 勾选使用Readme文件初始化这个仓库
   这个选项勾上，这样码云会自动给你的仓库建立master分支，这点很重要!!! 我（原作者）因为这点折腾了很久，因为使用github做图床picgo好像会自动帮你生成master分支，而picgo里的gitee插件不会帮你自动生成分支。
</code></pre>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo5.jpg"/></center>
<p>点击创建进入下一步。</p>
<h2 id="3-配置picgo">3. 配置PicGo</h2>
<p>安装了gitee-uploader插件之后，我们开始配置插件</p>
<p>配置插件的要点如下：</p>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo6.jpg"/></center>
<ul>
<li>repo：用户名/仓库名称，比如我自己的仓库leonG7/blogImage，也可以直接复制仓库的url</li>
</ul>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo7.jpg"/></center>
<ul>
<li>branch：分支，这里写上master</li>
<li>token：填入码云的私人令牌</li>
<li>path：路径，一般写上img</li>
<li>customPath：提交消息，这一项和下一项customURL都不用填。在提交到码云后，会显示提交消息，插件默认提交的是 Upload 图片名 by picGo - 时间</li>
</ul>
<h3 id="这个token怎么获取下面登录进自己的码云">这个token怎么获取？下面登录进自己的码云</h3>
<ol>
<li>点击头像，进入设置</li>
</ol>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo8.jpg"/></center>
<ol start="2">
<li>找到左边安全设置里面的私人令牌</li>
</ol>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo9.jpg"/></center>
<ol start="3">
<li>点击生成新令牌，把projects这一项勾上，其他的不用勾，然后提交</li>
</ol>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo10.jpg"/></center>
<p>这里需要验证一下密码，验证密码之后会出来一串数字，这一串数字就是你的token，将这串数字复制到刚才的配置里面去。</p>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo11.jpg"/></center>
<blockquote>
<p>注意：这个令牌只会明文显示一次，建议在配置插件的时候再来生成令牌，直接复制进去，搞丢了又要重新生成一个。</p>
</blockquote>
<h2 id="现在保存你刚才的配置然后将它设置为默认图床大功告成">现在保存你刚才的配置，然后将它设置为默认图床，大功告成。</h2>
<p>还有一个插件<code>gitee x.x.x-beta</code>，功能差不多，<code>刚才那个能用的话就不需要用这个</code>，配置的内容有点差别，简单说一下：</p>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo12.jpg"/></center>
<ul>
<li>url：图床网站，这里写码云的主页 <a href="https://gitee.com">https://gitee.com</a></li>
<li>owner：所有者，写上你的码云账号名，如果你不知道你的账号名，进入你刚才的仓库，浏览器url里面有</li>
</ul>
<center><img src="https://gitee.com/dogleft/blogsrc/raw/master/img/picgo13.jpg"/></center>
<ul>
<li>
<p>repo：仓库名称，只要写上仓库名称就行，比如我自己的仓库blogImage</p>
</li>
<li>
<p>path：写上路径，一般是img，<strong>这几个项都不用加“ / “符号</strong></p>
</li>
<li>
<p>token：刚才你获取的个人令牌，两个插件是通用的，如果你用了另一个再来用这个，它会自动读取另一个插件的部分配置，不用重新申请</p>
</li>
<li>
<p>message：不用填</p>
</li>
</ul>
<h2 id="4-测试">4. 测试</h2>
<p>随便选一张图片上传（picgo也支持剪贴板上传，截图工具推荐win10的Snipaste神器！），试试看</p>
<h2 id="超级快有木有比github快很多01秒上传而且导入到你的markdown编辑器里面也是秒识别你的图片内容而如果是github图床上传太慢不说可能还会出现下面这样识别不出来的问题"><strong><code>超级快有木有！比github快很多，0.1秒上传，而且导入到你的markdown编辑器里面也是秒识别你的图片内容，而如果是github图床上传太慢不说可能还会出现下面这样识别不出来的问题！</code></strong></h2>
<h3 id="上传之后默认复制链接直接粘贴到你的markdown编辑器里就可以愉快的进行写作了">上传之后默认复制链接，直接粘贴到你的markdown编辑器里，就可以愉快的进行写作了！</h3>
<p>原文：<a href="https://www.jianshu.com/p/b69950a49ae2">https://www.jianshu.com/p/b69950a49ae2</a>
<del>（博主：我已经用上了！）</del></p>
]]></content><category scheme="https://raycoder.me/categories/picgo/" term="Picgo" label="Picgo"/><category scheme="https://raycoder.me/categories/%E5%9B%BE%E5%BA%8A/" term="图床" label="图床"/><category scheme="https://raycoder.me/tags/picgo/" term="Picgo" label="Picgo"/><category scheme="https://raycoder.me/tags/gitee/" term="Gitee" label="Gitee"/><category scheme="https://raycoder.me/tags/%E5%B7%A5%E5%85%B7/" term="工具" label="工具"/></entry></feed>